[
  {
    "objectID": "teaching_notes/teaching_notes.html",
    "href": "teaching_notes/teaching_notes.html",
    "title": "Teaching notes",
    "section": "",
    "text": "Week 1: Open Science\n\nggplot2::ggplot(iris)\n\n\n\n\n\n\n\nFigure¬†1\n\n\n\n\n\n\n\nWeek 2: Replication Crisis\n\n\nWeek 3: Reproducibility\n\ncould introduce idea of the spectrum (Peng, 2011) or iceberg (Rodrigues, 2023)\n\n\n\nWeek 4: Project-oriented workflow with R Projects\n\n\nWeek 5: Literate programming\n\nshould also introduce modular data analysis by name (mentioned in Bowers & Voors, 2016; from Nagler, 1995)\n\nthe concept was introduced, but just name it\n\n\n\n\nWeek 6:\n\n\nWeek 7:\n\n\nWeek 8:\n\n\nWeek 9: Package management\n\n\n\n\n\n\n\n\n\n\nReferences\n\nBowers, J., & Voors, M. (2016). How to improve your relationship with your future self. Revista de Ciencia Pol√≠tica (Santiago), 36(3), 829‚Äì848. https://doi.org/10.4067/S0718-090X2016000300011\n\n\nNagler, J. (1995). Coding Style and Good Computing Practices.\n\n\nPeng, R. D. (2011). Reproducible Research in Computational Science. Science, 334(6060), 1226‚Äì1227. https://doi.org/10.1126/science.1213847\n\n\nRodrigues, B. (2023). Building reproducible analytical pipelines with R."
  },
  {
    "objectID": "slides/04-rprojects/rprojects.html",
    "href": "slides/04-rprojects/rprojects.html",
    "title": "RProjects",
    "section": "",
    "text": "Today we will‚Ä¶\n\nlearn about project-oriented workflows\ncreate an RProject\nestablish a self-contained project environment with here",
    "crumbs": [
      "D. Palleschi",
      "RProjects"
    ]
  },
  {
    "objectID": "slides/04-rprojects/rprojects.html#folder-structure",
    "href": "slides/04-rprojects/rprojects.html#folder-structure",
    "title": "RProjects",
    "section": "Folder structure",
    "text": "Folder structure\n\na core computer literacy skill\n\nkeep your Desktop as empty as possible\nhave a sensible folder structure\navoid mixing subfolders and files\n\ni.e., if a folder contains subfolders, ideally it should not contain files",
    "crumbs": [
      "D. Palleschi",
      "RProjects"
    ]
  },
  {
    "objectID": "slides/04-rprojects/rprojects.html#creating-a-new-project",
    "href": "slides/04-rprojects/rprojects.html#creating-a-new-project",
    "title": "RProjects",
    "section": "Creating a new Project",
    "text": "Creating a new Project\n\nwhen?\n\nwhenever you‚Äôre starting a new course or project which will use R\n\nwhy?\n\nto keep all the relavent materials in one place\n\nwhere?\n\nsomewhere that makes sense, e.g., a folder called SoSe2024 or Mastersarbeit\n\nhow?\n\nFile &gt; New Project &gt; New Directory &gt; New Project &gt; [Directory name] &gt; Create Project\n\n\n\n\n\n\n\n\n\n\nNew RProject\n\n\n\nCreate a new RProject for this course\n\nFile &gt; New Project &gt; New Directory &gt; New Project &gt; [Directory name] &gt; Create Project\nmake sure you choose a sensible location",
    "crumbs": [
      "D. Palleschi",
      "RProjects"
    ]
  },
  {
    "objectID": "slides/04-rprojects/rprojects.html#opening-a-project",
    "href": "slides/04-rprojects/rprojects.html#opening-a-project",
    "title": "RProjects",
    "section": "Opening a Project",
    "text": "Opening a Project\n\nto open a project, locate its .Rproj file and double-click\nor if you‚Äôre already in RStudio, you can use the Project (None) drop-down (top right)\n\n\n\n\n\n\n\n\n\n\n\nFigure¬†1: Double-click .Rproj\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure¬†2: Open from RStudio",
    "crumbs": [
      "D. Palleschi",
      "RProjects"
    ]
  },
  {
    "objectID": "slides/04-rprojects/rprojects.html#global-rstudio-options",
    "href": "slides/04-rprojects/rprojects.html#global-rstudio-options",
    "title": "RProjects",
    "section": "Global RStudio options",
    "text": "Global RStudio options\n\n\n\n\n\n\n\n\n\n\nFigure¬†3: RStudio settings for reproducibility\n\n\n\n\n\n\n\nTools &gt; Global Options\n\nWorkspace: Restore .RData into workspace at startup: NO\nSave workspace to .RData on exit: Never\n\nthis will ensure that you are always starting with a clean slate\n\nand that your code is not dependent on some pacakge or object you created in another session\n\nthis is also how RMarkdown and Quarto scripts run\n\nthey start with an empty environment and run the script linearly",
    "crumbs": [
      "D. Palleschi",
      "RProjects"
    ]
  },
  {
    "objectID": "slides/04-rprojects/rprojects.html#section-1",
    "href": "slides/04-rprojects/rprojects.html#section-1",
    "title": "RProjects",
    "section": "",
    "text": "Global settings\n\n\n\nChange your Global Options so that\n\nWorkspace: Restore .RData into workspace at startup: NO\nSave workspace to .RData on exit: Never",
    "crumbs": [
      "D. Palleschi",
      "RProjects"
    ]
  },
  {
    "objectID": "slides/04-rprojects/rprojects.html#spot-the-differences",
    "href": "slides/04-rprojects/rprojects.html#spot-the-differences",
    "title": "RProjects",
    "section": "Spot the differences",
    "text": "Spot the differences\n\n\n\n\n\n\n\n\n\n\nFigure¬†4: RStudio Session A\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure¬†5: RStudio Session B",
    "crumbs": [
      "D. Palleschi",
      "RProjects"
    ]
  },
  {
    "objectID": "slides/04-rprojects/rprojects.html#spot-the-differences-rproject-vs.-none",
    "href": "slides/04-rprojects/rprojects.html#spot-the-differences-rproject-vs.-none",
    "title": "RProjects",
    "section": "Spot the differences: RProject vs.¬†None",
    "text": "Spot the differences: RProject vs.¬†None",
    "crumbs": [
      "D. Palleschi",
      "RProjects"
    ]
  },
  {
    "objectID": "slides/04-rprojects/rprojects.html#folder-structure-1",
    "href": "slides/04-rprojects/rprojects.html#folder-structure-1",
    "title": "RProjects",
    "section": "Folder structure",
    "text": "Folder structure\n\nsome folders you‚Äôll typically want to have:\n\ndata: containing your dataset(s)\nscripts (or analyses, etc.): containing any analysis scripts\nmanuscript: containing any write-ups of your results\nmaterials: containing relevant experiment materials (e.g., stimuli)\n\nlet‚Äôs just create the first 2 (data and scripts)\n\n\ndata/\n\ndo you have ‚Äúraw‚Äù, i.e., pre-processed data?\n\nif so, you might want to create a raw sub-folder\nand any other relevant sub-folders (e.g., processed or tidy)\n\ndownload the dataset on this week‚Äôs Moodle section\n\nor, move a dataset of your own to this folder\n\n\n\n\nscripts/\n\ntry to create a single script for each ‚Äúproduct‚Äù\n\ne.g., anonymised data, ‚Äòcleaned‚Äô data, data exploration, visualisation, analyses, etc.\n\nyou can create sub-folders as the project develops and move scripts around\n\nfor now, let‚Äôs create a new script to take a look at our data\n\n\n\n\n\n\n\n\n\n\n\nNew script\n\n\n\nCreate a new Quarto script:\n\nFile &gt; New File &gt; Quarto Document\nAdd a title\nUncheck the Use Visual Editor box\nClick Create\nSave it in your scripts/ folder: File &gt; Save as...\n\n\n\n\n\nLoad in the data\n\nload in the data however you normally would\n\ne.g., readr::read_csv()",
    "crumbs": [
      "D. Palleschi",
      "RProjects"
    ]
  },
  {
    "objectID": "slides/04-rprojects/rprojects.html#the-problem-with-setwd",
    "href": "slides/04-rprojects/rprojects.html#the-problem-with-setwd",
    "title": "RProjects",
    "section": "The problem with setwd()",
    "text": "The problem with setwd()\n\nIf the first line of your R script is\nsetwd(\"C:\\Users\\jenny\\path\\that\\only\\I\\have\")\nI will come into your office and SET YOUR COMPUTER ON FIREüî•.\n\n‚Äî Jenny Bryan\n\nsetwd() depends on your entire machine‚Äôs folder structure\nsetwd() breaks when you\n\nsend your project folder to a collaborator\nmake your analyses open\nchange the location of your project folder\n\nusing slashes is also dependent on your operating system",
    "crumbs": [
      "D. Palleschi",
      "RProjects"
    ]
  },
  {
    "objectID": "slides/04-rprojects/rprojects.html#the-benefit-of-here",
    "href": "slides/04-rprojects/rprojects.html#the-benefit-of-here",
    "title": "RProjects",
    "section": "The benefit of here()",
    "text": "The benefit of here()\n\nuses the top-level directory of your project as the working directory\ncan separate folder names with a comma",
    "crumbs": [
      "D. Palleschi",
      "RProjects"
    ]
  },
  {
    "objectID": "slides/04-rprojects/rprojects.html#section-3",
    "href": "slides/04-rprojects/rprojects.html#section-3",
    "title": "RProjects",
    "section": "",
    "text": "here\n\n\n\nLoad the dataset using here\n\nInstall here (e.g., install.packages(\"here\"))\nLoad here at the beginning of your package\n\nor use here:: before calling a function\n\nUse the here() function to load in your data\nInspect the dataset however you usually would (e.g., summary(), names(), etc.)\nSave your script",
    "crumbs": [
      "D. Palleschi",
      "RProjects"
    ]
  },
  {
    "objectID": "slides/04-rprojects/rprojects.html#herehere",
    "href": "slides/04-rprojects/rprojects.html#herehere",
    "title": "RProjects",
    "section": "here::here()",
    "text": "here::here()\n\ninstall package\n\n\n\n\nIn the Console\n\ninstall.packages(\"here\")\n\n\n\nload package and call the here function\n\n\n# load package\nlibrary(here)\n\n# read in data\ndf_data &lt;- read.csv(here(\"data\", \"data_lifetime_pilot.csv\"))\n\n\nor directly call the here function without loading the package\n\n\n# read in data without loading here\ndf_data &lt;- read.csv(here::here(\"data\", \"data_lifetime_pilot.csv\"))",
    "crumbs": [
      "D. Palleschi",
      "RProjects"
    ]
  },
  {
    "objectID": "slides/04-rprojects/rprojects.html#section-4",
    "href": "slides/04-rprojects/rprojects.html#section-4",
    "title": "RProjects",
    "section": "",
    "text": "Reproduce your analysis\n\n\n\n\nMake sure you save your script, then close your Rproject.\nRe-open the project. Can you re-run the script?",
    "crumbs": [
      "D. Palleschi",
      "RProjects"
    ]
  },
  {
    "objectID": "slides/04-rprojects/rprojects_slides.html#folder-structure",
    "href": "slides/04-rprojects/rprojects_slides.html#folder-structure",
    "title": "RProjects",
    "section": "Folder structure",
    "text": "Folder structure\n\na core computer literacy skill\n\nkeep your Desktop as empty as possible\nhave a sensible folder structure\navoid mixing subfolders and files\n\ni.e., if a folder contains subfolders, ideally it should not contain files"
  },
  {
    "objectID": "slides/04-rprojects/rprojects_slides.html#creating-a-new-project",
    "href": "slides/04-rprojects/rprojects_slides.html#creating-a-new-project",
    "title": "RProjects",
    "section": "Creating a new Project",
    "text": "Creating a new Project\n\nwhen?\n\nwhenever you‚Äôre starting a new course or project which will use R\n\n\nwhy?\n\nto keep all the relavent materials in one place\n\n\nwhere?\n\nsomewhere that makes sense, e.g., a folder called SoSe2024 or Mastersarbeit\n\n\n\nhow?\n\nFile &gt; New Project &gt; New Directory &gt; New Project &gt; [Directory name] &gt; Create Project"
  },
  {
    "objectID": "slides/04-rprojects/rprojects_slides.html#opening-a-project",
    "href": "slides/04-rprojects/rprojects_slides.html#opening-a-project",
    "title": "RProjects",
    "section": "Opening a Project",
    "text": "Opening a Project\n\nto open a project, locate its .Rproj file and double-click\nor if you‚Äôre already in RStudio, you can use the Project (None) drop-down (top right)\n\n\n\n\n\n\n\nFigure¬†1: Double-click .Rproj\n\n\n\n\n\n\n\n\n\n\n\n\nFigure¬†2: Open from RStudio"
  },
  {
    "objectID": "slides/04-rprojects/rprojects_slides.html#global-rstudio-options",
    "href": "slides/04-rprojects/rprojects_slides.html#global-rstudio-options",
    "title": "RProjects",
    "section": "Global RStudio options",
    "text": "Global RStudio options\n\n\n\n\n\n\nFigure¬†3: RStudio settings for reproducibility\n\n\n\n\n\n\n\n\n\n\nTools &gt; Global Options\n\n\nWorkspace: Restore .RData into workspace at startup: NO\nSave workspace to .RData on exit: Never\n\n\nthis will ensure that you are always starting with a clean slate\n\nand that your code is not dependent on some pacakge or object you created in another session\n\n\nthis is also how RMarkdown and Quarto scripts run\n\nthey start with an empty environment and run the script linearly"
  },
  {
    "objectID": "slides/04-rprojects/rprojects_slides.html#section-1",
    "href": "slides/04-rprojects/rprojects_slides.html#section-1",
    "title": "RProjects",
    "section": "",
    "text": "Global settings\n\n\nChange your Global Options so that\n\n\nWorkspace: Restore .RData into workspace at startup: NO\nSave workspace to .RData on exit: Never"
  },
  {
    "objectID": "slides/04-rprojects/rprojects_slides.html#spot-the-differences",
    "href": "slides/04-rprojects/rprojects_slides.html#spot-the-differences",
    "title": "RProjects",
    "section": "Spot the differences",
    "text": "Spot the differences\n\n\n\n\n\n\nFigure¬†4: RStudio Session A\n\n\n\n\n\n\n\n\n\n\n\n\nFigure¬†5: RStudio Session B"
  },
  {
    "objectID": "slides/04-rprojects/rprojects_slides.html#spot-the-differences-rproject-vs.-none",
    "href": "slides/04-rprojects/rprojects_slides.html#spot-the-differences-rproject-vs.-none",
    "title": "RProjects",
    "section": "Spot the differences: RProject vs.¬†None",
    "text": "Spot the differences: RProject vs.¬†None"
  },
  {
    "objectID": "slides/04-rprojects/rprojects_slides.html#folder-structure-1",
    "href": "slides/04-rprojects/rprojects_slides.html#folder-structure-1",
    "title": "RProjects",
    "section": "Folder structure",
    "text": "Folder structure\n\nsome folders you‚Äôll typically want to have:\n\n\ndata: containing your dataset(s)\n\nscripts (or analyses, etc.): containing any analysis scripts\n\nmanuscript: containing any write-ups of your results\n\nmaterials: containing relevant experiment materials (e.g., stimuli)\n\n\nlet‚Äôs just create the first 2 (data and scripts)"
  },
  {
    "objectID": "slides/04-rprojects/rprojects_slides.html#the-problem-with-setwd",
    "href": "slides/04-rprojects/rprojects_slides.html#the-problem-with-setwd",
    "title": "RProjects",
    "section": "The problem with setwd()\n",
    "text": "The problem with setwd()\n\n\nIf the first line of your R script is\nsetwd(\"C:\\Users\\jenny\\path\\that\\only\\I\\have\")\nI will come into your office and SET YOUR COMPUTER ON FIREüî•.\n\n‚Äî Jenny Bryan\n\n\nsetwd() depends on your entire machine‚Äôs folder structure\n\nsetwd() breaks when you\n\nsend your project folder to a collaborator\nmake your analyses open\nchange the location of your project folder\n\n\nusing slashes is also dependent on your operating system"
  },
  {
    "objectID": "slides/04-rprojects/rprojects_slides.html#the-benefit-of-here",
    "href": "slides/04-rprojects/rprojects_slides.html#the-benefit-of-here",
    "title": "RProjects",
    "section": "The benefit of here()\n",
    "text": "The benefit of here()\n\n\nuses the top-level directory of your project as the working directory\ncan separate folder names with a comma"
  },
  {
    "objectID": "slides/04-rprojects/rprojects_slides.html#section-3",
    "href": "slides/04-rprojects/rprojects_slides.html#section-3",
    "title": "RProjects",
    "section": "",
    "text": "here\n\n\nLoad the dataset using here\n\nInstall here (e.g., install.packages(\"here\"))\nLoad here at the beginning of your package\n\nor use here:: before calling a function\n\n\nUse the here() function to load in your data\nInspect the dataset however you usually would (e.g., summary(), names(), etc.)\nSave your script"
  },
  {
    "objectID": "slides/04-rprojects/rprojects_slides.html#herehere",
    "href": "slides/04-rprojects/rprojects_slides.html#herehere",
    "title": "RProjects",
    "section": "here::here()",
    "text": "here::here()\n\ninstall package\n\n\n\n\nIn the Console\n\ninstall.packages(\"here\")\n\n\n\nload package and call the here function\n\n\n# load package\nlibrary(here)\n\n# read in data\ndf_data &lt;- read.csv(here(\"data\", \"data_lifetime_pilot.csv\"))\n\n\nor directly call the here function without loading the package\n\n\n# read in data without loading here\ndf_data &lt;- read.csv(here::here(\"data\", \"data_lifetime_pilot.csv\"))"
  },
  {
    "objectID": "slides/04-rprojects/rprojects_slides.html#section-4",
    "href": "slides/04-rprojects/rprojects_slides.html#section-4",
    "title": "RProjects",
    "section": "",
    "text": "Reproduce your analysis\n\n\n\nMake sure you save your script, then close your Rproject.\nRe-open the project. Can you re-run the script?"
  },
  {
    "objectID": "slides/02-replication_crisis/replication-crisis.html",
    "href": "slides/02-replication_crisis/replication-crisis.html",
    "title": "The Replication Crisis",
    "section": "",
    "text": "Today we will learn about‚Ä¶\n\nthe replication crisis\nreplication in language sciences\nrequirements for replication",
    "crumbs": [
      "D. Palleschi",
      "The Replication Crisis"
    ]
  },
  {
    "objectID": "slides/02-replication_crisis/replication-crisis.html#most-published-research-findings-are-false",
    "href": "slides/02-replication_crisis/replication-crisis.html#most-published-research-findings-are-false",
    "title": "The Replication Crisis",
    "section": "Most Published Research Findings are False",
    "text": "Most Published Research Findings are False\n\n\n\nthe issue became more widespread with Ioannidis (2005)\n\ndefined bias in terms of design, analysis, and presentation factors\nfocussed on issues with p-values and statistical power\n\nOpen Science Collaboration (2015) ran replications of 100 studies\n\n36% of replications found significant effects\n47% of original effects fell within 95% CIs of replication effect\n\nin essence: fewer significant findings and smaller effects in replications\nhow is can this be?\n\n\n\n\n\n\n\n\n\n\nFigure¬†1: Source: Open Science Collaboration (2015) (all rights reserved)",
    "crumbs": [
      "D. Palleschi",
      "The Replication Crisis"
    ]
  },
  {
    "objectID": "slides/02-replication_crisis/replication-crisis.html#the-problem-with-p-values",
    "href": "slides/02-replication_crisis/replication-crisis.html#the-problem-with-p-values",
    "title": "The Replication Crisis",
    "section": "The problem with p-values",
    "text": "The problem with p-values\n\nissues relating to reported findings:\n\nmisuse of misinterpretation of p-values in Null Hypothesis Significant Testing (NHST; e.g., Ioannidis, 2005)\nstudy design\nimproper use of statistical methods\n\nstemming from inadequate teaching\n\nselective reporting\n\nin other words, HARKing and p-hacking (whether consciously done or not)",
    "crumbs": [
      "D. Palleschi",
      "The Replication Crisis"
    ]
  },
  {
    "objectID": "slides/02-replication_crisis/replication-crisis.html#solving-the-problem",
    "href": "slides/02-replication_crisis/replication-crisis.html#solving-the-problem",
    "title": "The Replication Crisis",
    "section": "Solving the problem",
    "text": "Solving the problem\n\nthese could be mitigated with Open Science practices\n\ntransparency in writing, analyses, planning/hypothesising stages\nreproducibility of analyses\ngreater value given to replication studies\nembracing and addressing uncertainty (Vasishth & Gelman, 2021)\n\nin sum: ‚Äúconscientious practice‚Äù (S√∂nning & Werner, 2021, p. 1182)",
    "crumbs": [
      "D. Palleschi",
      "The Replication Crisis"
    ]
  },
  {
    "objectID": "slides/02-replication_crisis/replication-crisis.html#the-garden-of-forking-paths",
    "href": "slides/02-replication_crisis/replication-crisis.html#the-garden-of-forking-paths",
    "title": "The Replication Crisis",
    "section": "The garden of forking paths",
    "text": "The garden of forking paths\n\nor ‚Äòresearcher degrees of freedom‚Äô (Simmons et al., 2011)\nthe problem: there are many plausible ways to analyse any given data set\nthere are many choices researchers make in:\n\nexperimental design\ndata collection\ndata preprocessing\ndata analyses\nreporting\n\nthe path we happen to go down can seem pre-determined (Gelman & Loken, 2014)\n\nbut can amount to HARKing, p-hacking, fishing\n\nthe fastest solution: share everything and write transparently",
    "crumbs": [
      "D. Palleschi",
      "The Replication Crisis"
    ]
  },
  {
    "objectID": "slides/02-replication_crisis/replication-crisis.html#kuhns-structure-of-scientific-revoluations",
    "href": "slides/02-replication_crisis/replication-crisis.html#kuhns-structure-of-scientific-revoluations",
    "title": "The Replication Crisis",
    "section": "Kuhn‚Äôs structure of scientific revoluations",
    "text": "Kuhn‚Äôs structure of scientific revoluations\n\nThomas Kuhn‚Äôs The Theory of Scientifc Revoluations (1962)\n\nbased on socio-historical observation\nthe evolution of scientificy theory is cycical\ncrisis leads to revolution\n\nalso applies to research methodology\n\n\n\nThree recurrent phases:\n\nnormal science\n\nlittle controversy over theoretical underpinnings\nresearchers work on small problems within a theory\n\ncrisis\n\ncontradictions between theory and evidence\nquestioning of conventionally accepted theory\n\nrevolution\n\noverthrowing of previous norms in favour of a new paradigm\nleads to new normal science\n\n\n\n\n\n\n\nDownload GitHub repositiory",
    "crumbs": [
      "D. Palleschi",
      "The Replication Crisis"
    ]
  },
  {
    "objectID": "slides/02-replication_crisis/replication-crisis.html#previous-cycles-of-statistical-analyses",
    "href": "slides/02-replication_crisis/replication-crisis.html#previous-cycles-of-statistical-analyses",
    "title": "The Replication Crisis",
    "section": "Previous cycles of statistical analyses",
    "text": "Previous cycles of statistical analyses\n\nproprietary, point-and-click software (e.g., SPSS)\n\nmove to open source programming languages (e.g., R, Python, Julia)\n\nANOVAs\n\nmove to linear regression\nthen linear mixed models\n\nrandom-intercepts only models\nmaximal models\nparsimonious models\n\n\nnow a trend towards Bayesian regression",
    "crumbs": [
      "D. Palleschi",
      "The Replication Crisis"
    ]
  },
  {
    "objectID": "slides/02-replication_crisis/replication-crisis.html#what-do-statisticians-say",
    "href": "slides/02-replication_crisis/replication-crisis.html#what-do-statisticians-say",
    "title": "The Replication Crisis",
    "section": "What do statisticians say?",
    "text": "What do statisticians say?\n\nWasserstein et al. (2019): list of Do‚Äôs and Don‚Äôt from statisticians\n\nDon‚Äôt base conclusions on p-values\nDo think about ATOM: Accept uncertainty, be Thoughtful, Open, and Modest\n\nWasserstein & Lazar (2016): the American Statistical Association‚Äôs statement on p-values\n\np-values are often misused and misinterpreted\ngood statistical practice is part of good scientific practice\n\nas such, relies on good study design and conduct\ninterpretation in context\ncomplete and transparent reporting",
    "crumbs": [
      "D. Palleschi",
      "The Replication Crisis"
    ]
  },
  {
    "objectID": "slides/02-replication_crisis/replication-crisis.html#the-old-vs.-the-new",
    "href": "slides/02-replication_crisis/replication-crisis.html#the-old-vs.-the-new",
    "title": "The Replication Crisis",
    "section": "The old vs.¬†the new",
    "text": "The old vs.¬†the new\n\n\n\n\n\n\n\n\n\n\nFigure¬†2: Source: S√∂nning & Werner (2021)\n\n\n\n\n\n\n\nchanges refer to not only statistical analyses\n\nbut also emphasise transparency\n\nideally, we (as a field) would up our analysis game\n\nbut a good first step is moving towards Open Science\nshare data, code\ntransparently map out your route in the ‚Äògarden of forking paths‚Äô\n\nthese are steps we‚Äôll cover in this course\n\npre-registration\ndata and code sharing\nreproducible workflow\ntransparent writing",
    "crumbs": [
      "D. Palleschi",
      "The Replication Crisis"
    ]
  },
  {
    "objectID": "slides/02-replication_crisis/replication-crisis.html#words-of-comfort",
    "href": "slides/02-replication_crisis/replication-crisis.html#words-of-comfort",
    "title": "The Replication Crisis",
    "section": "Words of comfort",
    "text": "Words of comfort\n\nLess experienced scholars must not fear methodological attacks on their analyses, which are instead seen as informing interim interpretations that may require future modification.\n\n‚Äî S√∂nning & Werner (2021), p.¬†1199\n\nin some sub-fields linear mixed models are still not considered the standard\n\nso you‚Äôre well situated despite the doom around p-values\n\nmoving from frequentist (NHST) framework to the Bayesian framework is relatively painless\n\nin this class we will run a LMM with lme4 (Frequentist) and with brms (Bayesian)",
    "crumbs": [
      "D. Palleschi",
      "The Replication Crisis"
    ]
  },
  {
    "objectID": "slides/02-replication_crisis/replication-crisis.html#replication-value",
    "href": "slides/02-replication_crisis/replication-crisis.html#replication-value",
    "title": "The Replication Crisis",
    "section": "Replication value",
    "text": "Replication value\n\nreplication value (RV): ‚Äúthe expected utility of a finding before replication‚Äù (Isager, 2020, p. 6)\n\n(scientific) value of the research claim\n\nimportance to the field, to policy, health etc.\n\nthe uncertainty of our knowledge about the claim\n\nvalidity of study design, statistical power, bias, etc.\n\n\nreplication aims to reduce uncertainty\n\nwhich also increases utility of the claim\n\n\n\nQuantifying RV\n\nhow to quantify value and uncertainty?\nIsager et al. (2021) suggest using‚Ä¶\n\naverage yearly citation count to estimate value\n\nthe more citations, the higher the impact the original study had\n\nand sample size to estimate uncertainty (\\(\\frac{1}{\\sqrt{n}}\\))\n\nthe higher the sample size, the more precise the estimate\nthe lower the sample size, the greater the uncertainty\ni.e., \\(n\\) is inversely correlated with uncertainty",
    "crumbs": [
      "D. Palleschi",
      "The Replication Crisis"
    ]
  },
  {
    "objectID": "slides/02-replication_crisis/replication-crisis.html#rv_cn",
    "href": "slides/02-replication_crisis/replication-crisis.html#rv_cn",
    "title": "The Replication Crisis",
    "section": "\\(RV_{Cn}\\)",
    "text": "\\(RV_{Cn}\\)\n\n\n\n\n\n\n\n\n\n\nFigure¬†3: Source: Isager et al. (2021), p.¬†25 (all rights reserved)\n\n\n\n\n\n\nIsager et al. (2021):\n\\[\nRV_{Cn} = value \\ x \\ uncertainty\n\\]",
    "crumbs": [
      "D. Palleschi",
      "The Replication Crisis"
    ]
  },
  {
    "objectID": "slides/02-replication_crisis/replication-crisis_slides.html#most-published-research-findings-are-false",
    "href": "slides/02-replication_crisis/replication-crisis_slides.html#most-published-research-findings-are-false",
    "title": "The Replication Crisis",
    "section": "Most Published Research Findings are False",
    "text": "Most Published Research Findings are False\n\n\n\n\nthe issue became more widespread with Ioannidis (2005)\n\ndefined bias in terms of design, analysis, and presentation factors\nfocussed on issues with p-values and statistical power\n\n\n\nOpen Science Collaboration (2015) ran replications of 100 studies\n\n36% of replications found significant effects\n47% of original effects fell within 95% CIs of replication effect\n\n\nin essence: fewer significant findings and smaller effects in replications\nhow is can this be?\n\n\n\n\n\n\nFigure¬†1: Source: Open Science Collaboration (2015) (all rights reserved)"
  },
  {
    "objectID": "slides/02-replication_crisis/replication-crisis_slides.html#the-problem-with-p-values",
    "href": "slides/02-replication_crisis/replication-crisis_slides.html#the-problem-with-p-values",
    "title": "The Replication Crisis",
    "section": "The problem with p-values",
    "text": "The problem with p-values\n\nissues relating to reported findings:\n\nmisuse of misinterpretation of p-values in Null Hypothesis Significant Testing (NHST; e.g., Ioannidis, 2005)\n\nstudy design\nimproper use of statistical methods\n\nstemming from inadequate teaching\n\n\nselective reporting\n\n\nin other words, HARKing and p-hacking (whether consciously done or not)"
  },
  {
    "objectID": "slides/02-replication_crisis/replication-crisis_slides.html#solving-the-problem",
    "href": "slides/02-replication_crisis/replication-crisis_slides.html#solving-the-problem",
    "title": "The Replication Crisis",
    "section": "Solving the problem",
    "text": "Solving the problem\n\nthese could be mitigated with Open Science practices\n\n\ntransparency in writing, analyses, planning/hypothesising stages\n\nreproducibility of analyses\ngreater value given to replication studies\nembracing and addressing uncertainty (Vasishth & Gelman, 2021)\n\n\n\nin sum: ‚Äúconscientious practice‚Äù (S√∂nning & Werner, 2021, p. 1182)"
  },
  {
    "objectID": "slides/02-replication_crisis/replication-crisis_slides.html#the-garden-of-forking-paths",
    "href": "slides/02-replication_crisis/replication-crisis_slides.html#the-garden-of-forking-paths",
    "title": "The Replication Crisis",
    "section": "The garden of forking paths",
    "text": "The garden of forking paths\n\nor ‚Äòresearcher degrees of freedom‚Äô (Simmons et al., 2011)\n\nthe problem: there are many plausible ways to analyse any given data set\nthere are many choices researchers make in:\n\nexperimental design\ndata collection\ndata preprocessing\ndata analyses\nreporting\n\n\nthe path we happen to go down can seem pre-determined (Gelman & Loken, 2014)\n\nbut can amount to HARKing, p-hacking, fishing\n\n\nthe fastest solution: share everything and write transparently"
  },
  {
    "objectID": "slides/02-replication_crisis/replication-crisis_slides.html#kuhns-structure-of-scientific-revoluations",
    "href": "slides/02-replication_crisis/replication-crisis_slides.html#kuhns-structure-of-scientific-revoluations",
    "title": "The Replication Crisis",
    "section": "Kuhn‚Äôs structure of scientific revoluations",
    "text": "Kuhn‚Äôs structure of scientific revoluations\n\nThomas Kuhn‚Äôs The Theory of Scientifc Revoluations (1962)\n\nbased on socio-historical observation\nthe evolution of scientificy theory is cycical\ncrisis leads to revolution\n\n\nalso applies to research methodology"
  },
  {
    "objectID": "slides/02-replication_crisis/replication-crisis_slides.html#previous-cycles-of-statistical-analyses",
    "href": "slides/02-replication_crisis/replication-crisis_slides.html#previous-cycles-of-statistical-analyses",
    "title": "The Replication Crisis",
    "section": "Previous cycles of statistical analyses",
    "text": "Previous cycles of statistical analyses\n\nproprietary, point-and-click software (e.g., SPSS)\n\nmove to open source programming languages (e.g., R, Python, Julia)\n\n\nANOVAs\n\nmove to linear regression\nthen linear mixed models\n\nrandom-intercepts only models\nmaximal models\nparsimonious models\n\n\n\n\nnow a trend towards Bayesian regression"
  },
  {
    "objectID": "slides/02-replication_crisis/replication-crisis_slides.html#what-do-statisticians-say",
    "href": "slides/02-replication_crisis/replication-crisis_slides.html#what-do-statisticians-say",
    "title": "The Replication Crisis",
    "section": "What do statisticians say?",
    "text": "What do statisticians say?\n\n\nWasserstein et al. (2019): list of Do‚Äôs and Don‚Äôt from statisticians\n\n\nDon‚Äôt base conclusions on p-values\n\nDo think about ATOM: Accept uncertainty, be Thoughtful, Open, and Modest\n\n\n\nWasserstein & Lazar (2016): the American Statistical Association‚Äôs statement on p-values\n\n\np-values are often misused and misinterpreted\ngood statistical practice is part of good scientific practice\n\nas such, relies on good study design and conduct\ninterpretation in context\ncomplete and transparent reporting"
  },
  {
    "objectID": "slides/02-replication_crisis/replication-crisis_slides.html#the-old-vs.-the-new",
    "href": "slides/02-replication_crisis/replication-crisis_slides.html#the-old-vs.-the-new",
    "title": "The Replication Crisis",
    "section": "The old vs.¬†the new",
    "text": "The old vs.¬†the new\n\n\n\n\n\n\nFigure¬†2: Source: S√∂nning & Werner (2021)\n\n\n\n\n\n\n\n\n\nchanges refer to not only statistical analyses\n\nbut also emphasise transparency\n\n\nideally, we (as a field) would up our analysis game\n\nbut a good first step is moving towards Open Science\nshare data, code\ntransparently map out your route in the ‚Äògarden of forking paths‚Äô\n\n\nthese are steps we‚Äôll cover in this course\n\npre-registration\ndata and code sharing\nreproducible workflow\ntransparent writing"
  },
  {
    "objectID": "slides/02-replication_crisis/replication-crisis_slides.html#words-of-comfort",
    "href": "slides/02-replication_crisis/replication-crisis_slides.html#words-of-comfort",
    "title": "The Replication Crisis",
    "section": "Words of comfort",
    "text": "Words of comfort\n\nLess experienced scholars must not fear methodological attacks on their analyses, which are instead seen as informing interim interpretations that may require future modification.\n\n‚Äî S√∂nning & Werner (2021), p.¬†1199\n\nin some sub-fields linear mixed models are still not considered the standard\n\nso you‚Äôre well situated despite the doom around p-values\n\n\nmoving from frequentist (NHST) framework to the Bayesian framework is relatively painless\n\nin this class we will run a LMM with lme4 (Frequentist) and with brms (Bayesian)"
  },
  {
    "objectID": "slides/02-replication_crisis/replication-crisis_slides.html#replication-value",
    "href": "slides/02-replication_crisis/replication-crisis_slides.html#replication-value",
    "title": "The Replication Crisis",
    "section": "Replication value",
    "text": "Replication value\n\nreplication value (RV): ‚Äúthe expected utility of a finding before replication‚Äù (Isager, 2020, p. 6)\n\n(scientific) value of the research claim\n\nimportance to the field, to policy, health etc.\n\n\nthe uncertainty of our knowledge about the claim\n\nvalidity of study design, statistical power, bias, etc.\n\n\n\n\nreplication aims to reduce uncertainty\n\nwhich also increases utility of the claim"
  },
  {
    "objectID": "slides/02-replication_crisis/replication-crisis_slides.html#rv_cn",
    "href": "slides/02-replication_crisis/replication-crisis_slides.html#rv_cn",
    "title": "The Replication Crisis",
    "section": "\\(RV_{Cn}\\)",
    "text": "\\(RV_{Cn}\\)\n\n\n\n\n\n\nFigure¬†3: Source: Isager et al. (2021), p.¬†25 (all rights reserved)\n\n\n\n\n\n\n\n\nIsager et al. (2021):\n\\[\nRV_{Cn} = value \\ x \\ uncertainty\n\\]"
  },
  {
    "objectID": "slides/01-open_science/open-science.html",
    "href": "slides/01-open_science/open-science.html",
    "title": "Open Science",
    "section": "",
    "text": "Today we will learn‚Ä¶\n\nwhat Open Science Practices are\nwhy they‚Äôre important\nwhich practices you can implement",
    "crumbs": [
      "D. Palleschi",
      "Open Science"
    ]
  },
  {
    "objectID": "slides/01-open_science/open-science.html#systemic-problem-in-science",
    "href": "slides/01-open_science/open-science.html#systemic-problem-in-science",
    "title": "Open Science",
    "section": "Systemic problem in science",
    "text": "Systemic problem in science\n\nthe combination of\n\npublication bias\n\njournals favour novel, significant findings\n\npublish or perish\n\nresearchers‚Äô careers depend on publications\n\n\ncan/does/did lead to:\n\nHARKing\n\nHypothesising After Results are Known\n\np-hacking\n\n(re-)running analyses until a significant effect is found\n\nreplication crisis\n\npervasive failure to replicate previous research",
    "crumbs": [
      "D. Palleschi",
      "Open Science"
    ]
  },
  {
    "objectID": "slides/01-open_science/open-science.html#journal-club",
    "href": "slides/01-open_science/open-science.html#journal-club",
    "title": "Open Science",
    "section": "Journal Club",
    "text": "Journal Club\n\nlevel: Easy\ne.g., ReproducibiliTea Berlin\n\ndiscuss topics and share knowledge on Open Science Practices",
    "crumbs": [
      "D. Palleschi",
      "Open Science"
    ]
  },
  {
    "objectID": "slides/01-open_science/open-science.html#project-workflow",
    "href": "slides/01-open_science/open-science.html#project-workflow",
    "title": "Open Science",
    "section": "Project Workflow",
    "text": "Project Workflow\n\nlevel: Easy\nfolder structure\n\nhow to sensibly set up your folders\n\ncontained environments\n\nusing RProjects and the here package\n\ndata management\n\nestablishing some data storage convention\n\nversion control\n\ne.g., git, GitHub/GitLab, OSF",
    "crumbs": [
      "D. Palleschi",
      "Open Science"
    ]
  },
  {
    "objectID": "slides/01-open_science/open-science.html#preprints",
    "href": "slides/01-open_science/open-science.html#preprints",
    "title": "Open Science",
    "section": "Preprints",
    "text": "Preprints\n\nlevel: Easy\nmanuscript version publicly available\n\nprior to peer review\nduring peer review\nafter publication\n\nallows for a wider audience\n\nearlier feedback\nactually increases citation count\n\ntypically found on (psy)arXiv, OSF",
    "crumbs": [
      "D. Palleschi",
      "Open Science"
    ]
  },
  {
    "objectID": "slides/01-open_science/open-science.html#reproducible-code",
    "href": "slides/01-open_science/open-science.html#reproducible-code",
    "title": "Open Science",
    "section": "Reproducible Code",
    "text": "Reproducible Code\n\nlevel: Medium\nwith open source software (R, RStudio, packages)\nliterate programming\ndynamic reports with Quarto/Rmarkdown\nreproducibility goes hand-in-hand with project workflow and data management\nideally:\n\navoid GUI (Graphic User Interface with point-and-click, e.g., SPSS)\navoid propreitary software (paid licences, e.g., SPSS, Matlab)\nuse open software (e.g., R, Python)\nuse a programming language and include useful comments",
    "crumbs": [
      "D. Palleschi",
      "Open Science"
    ]
  },
  {
    "objectID": "slides/01-open_science/open-science.html#data-sharing",
    "href": "slides/01-open_science/open-science.html#data-sharing",
    "title": "Open Science",
    "section": "Data sharing",
    "text": "Data sharing\n\nlevel: Medium\npublicly sharing your data\n\nincluding raw data (if possible)\n\nallows for reproduction of analyses\ntakes forethought and experience\ndocumentation and naming conventions are important\n\ne.g., data dictionaries/codebooks",
    "crumbs": [
      "D. Palleschi",
      "Open Science"
    ]
  },
  {
    "objectID": "slides/01-open_science/open-science.html#transparent-writing",
    "href": "slides/01-open_science/open-science.html#transparent-writing",
    "title": "Open Science",
    "section": "Transparent writing",
    "text": "Transparent writing\n\nlevel: Medium\ntransparency regarding\n\nmethods/procedure\nhypotheses (confirmatory vs.¬†exploratory)\ndata analyses\n\nan experiment plan or lab notebook are key!",
    "crumbs": [
      "D. Palleschi",
      "Open Science"
    ]
  },
  {
    "objectID": "slides/01-open_science/open-science.html#preregistration",
    "href": "slides/01-open_science/open-science.html#preregistration",
    "title": "Open Science",
    "section": "Preregistration",
    "text": "Preregistration\n\nlevel: Medium\na timestamped and (often) public plan of:\n\nresearch questions\nhypotheses\nmethod\nanalyses\n\nclearly state intentions and predictions for confirmatory analyses\n\neverything else is exploratory\n\ntemplates available on AsPredicted and the OSF",
    "crumbs": [
      "D. Palleschi",
      "Open Science"
    ]
  },
  {
    "objectID": "slides/01-open_science/open-science.html#registered-report",
    "href": "slides/01-open_science/open-science.html#registered-report",
    "title": "Open Science",
    "section": "Registered Report",
    "text": "Registered Report\n\nlevel: Difficult\nsubmitting the introduction, methods, analysis plan to a journal before data collection\n\nif accepted: publication regardless of the result\n\na more detailed pre-registration, often with fully written sections\nmuch more time consuming before data collection can begin\n\njournal acceptance can take months",
    "crumbs": [
      "D. Palleschi",
      "Open Science"
    ]
  },
  {
    "objectID": "slides/01-open_science/open-science_slides.html#systemic-problem-in-science",
    "href": "slides/01-open_science/open-science_slides.html#systemic-problem-in-science",
    "title": "Open Science",
    "section": "Systemic problem in science",
    "text": "Systemic problem in science\n\nthe combination of\n\npublication bias\n\njournals favour novel, significant findings\n\n\npublish or perish\n\nresearchers‚Äô careers depend on publications\n\n\n\n\ncan/does/did lead to:\n\nHARKing\n\nHypothesising After Results are Known\n\n\np-hacking\n\n(re-)running analyses until a significant effect is found\n\n\nreplication crisis\n\npervasive failure to replicate previous research"
  },
  {
    "objectID": "slides/01-open_science/open-science_slides.html#journal-club",
    "href": "slides/01-open_science/open-science_slides.html#journal-club",
    "title": "Open Science",
    "section": "Journal Club",
    "text": "Journal Club\n\nlevel: Easy\n\ne.g., ReproducibiliTea Berlin\n\ndiscuss topics and share knowledge on Open Science Practices"
  },
  {
    "objectID": "slides/01-open_science/open-science_slides.html#project-workflow",
    "href": "slides/01-open_science/open-science_slides.html#project-workflow",
    "title": "Open Science",
    "section": "Project Workflow",
    "text": "Project Workflow\n\nlevel: Easy\n\nfolder structure\n\nhow to sensibly set up your folders\n\n\n\ncontained environments\n\nusing RProjects and the here package\n\n\n\ndata management\n\nestablishing some data storage convention\n\n\n\nversion control\n\ne.g., git, GitHub/GitLab, OSF"
  },
  {
    "objectID": "slides/01-open_science/open-science_slides.html#preprints",
    "href": "slides/01-open_science/open-science_slides.html#preprints",
    "title": "Open Science",
    "section": "Preprints",
    "text": "Preprints\n\nlevel: Easy\n\nmanuscript version publicly available\n\nprior to peer review\nduring peer review\nafter publication\n\n\n\nallows for a wider audience\n\nearlier feedback\nactually increases citation count\n\n\ntypically found on (psy)arXiv, OSF"
  },
  {
    "objectID": "slides/01-open_science/open-science_slides.html#reproducible-code",
    "href": "slides/01-open_science/open-science_slides.html#reproducible-code",
    "title": "Open Science",
    "section": "Reproducible Code",
    "text": "Reproducible Code\n\nlevel: Medium\nwith open source software (R, RStudio, packages)\nliterate programming\ndynamic reports with Quarto/Rmarkdown\nreproducibility goes hand-in-hand with project workflow and data management\n\nideally:\n\navoid GUI (Graphic User Interface with point-and-click, e.g., SPSS)\navoid propreitary software (paid licences, e.g., SPSS, Matlab)\nuse open software (e.g., R, Python)\nuse a programming language and include useful comments"
  },
  {
    "objectID": "slides/01-open_science/open-science_slides.html#data-sharing",
    "href": "slides/01-open_science/open-science_slides.html#data-sharing",
    "title": "Open Science",
    "section": "Data sharing",
    "text": "Data sharing\n\nlevel: Medium\n\npublicly sharing your data\n\nincluding raw data (if possible)\n\n\nallows for reproduction of analyses\ntakes forethought and experience\n\ndocumentation and naming conventions are important\n\ne.g., data dictionaries/codebooks"
  },
  {
    "objectID": "slides/01-open_science/open-science_slides.html#transparent-writing",
    "href": "slides/01-open_science/open-science_slides.html#transparent-writing",
    "title": "Open Science",
    "section": "Transparent writing",
    "text": "Transparent writing\n\nlevel: Medium\n\ntransparency regarding\n\nmethods/procedure\nhypotheses (confirmatory vs.¬†exploratory)\ndata analyses\n\n\nan experiment plan or lab notebook are key!"
  },
  {
    "objectID": "slides/01-open_science/open-science_slides.html#preregistration",
    "href": "slides/01-open_science/open-science_slides.html#preregistration",
    "title": "Open Science",
    "section": "Preregistration",
    "text": "Preregistration\n\nlevel: Medium\n\na timestamped and (often) public plan of:\n\nresearch questions\nhypotheses\nmethod\nanalyses\n\n\n\nclearly state intentions and predictions for confirmatory analyses\n\neverything else is exploratory\n\n\ntemplates available on AsPredicted and the OSF"
  },
  {
    "objectID": "slides/01-open_science/open-science_slides.html#registered-report",
    "href": "slides/01-open_science/open-science_slides.html#registered-report",
    "title": "Open Science",
    "section": "Registered Report",
    "text": "Registered Report\n\nlevel: Difficult\n\nsubmitting the introduction, methods, analysis plan to a journal before data collection\n\nif accepted: publication regardless of the result\n\n\na more detailed pre-registration, often with fully written sections\n\nmuch more time consuming before data collection can begin\n\njournal acceptance can take months"
  },
  {
    "objectID": "slides/data_tidying/tidying.html",
    "href": "slides/data_tidying/tidying.html",
    "title": "Untitled",
    "section": "",
    "text": "this is the major step of data tidying\n\nmake each column a variable\nmake each row an observation\nmake each cell a data point\n\nwhat variable and observation mean will depend on what you want to do, and will change at different steps of your analyses\nyou typically want long data\n\nbut our dataset isn‚Äôt as long as it could be\n\n\n\n\n\n\n\n\n\n\n\ntakes wide data and makes it longer\n\nconverts headers of columns into values of a new column\ncombines the values of those columns into a new condensed column\n\ntakes a few arguments:\n\ncols: which columns do we want to combine into a single column?\nnames_to: what should we call the new column containing the previous column names?\nvalues_to: what should we call the new column containing the values from the previous columns?\n\n\n\n\n\n\ndf_lifetime |&gt; \n  select(px,trial,region,ff,fp,rpd,tt,rt,type,accept,condition) |&gt;\n  filter(type==\"critical\",region==\"verb\",px!=\"px3\") |&gt;\n  pivot_longer(\n  cols = c(ff,fp,rpd,tt,rt), # columns to make long \n  names_to = \"measure\", # new column name for headers\n  values_to = \"time\" # new column name for values\n)\n\n\nSource: PsyTeachR\n\n\n\n\n\ntakes long data and makes it wider\ntakes a few arguments:\n\nid_cols: identifying columns\nnames_from: what should we call the new column containing the previous column names?\nnames_prefix:\nvalues_from: new column values\n\n\n\n\n\n\ndf_lifetime |&gt; \n  select(px,trial,region,ff,fp,rpd,tt,rt,type,accept,condition) |&gt;\n  filter(type==\"critical\",px!=\"px3\") |&gt;\n  pivot_wider(\n  id_cols = c(px,trial), # columns to make long \n  names_from = region, # new column name for headers\n  names_prefix = \"reg_\", # new column name for values\n  values_from = tt\n)\n\n\nSource: PsyTeachR"
  },
  {
    "objectID": "slides/data_tidying/tidying.html#pivot_longer",
    "href": "slides/data_tidying/tidying.html#pivot_longer",
    "title": "Untitled",
    "section": "",
    "text": "takes wide data and makes it longer\n\nconverts headers of columns into values of a new column\ncombines the values of those columns into a new condensed column\n\ntakes a few arguments:\n\ncols: which columns do we want to combine into a single column?\nnames_to: what should we call the new column containing the previous column names?\nvalues_to: what should we call the new column containing the values from the previous columns?"
  },
  {
    "objectID": "slides/data_tidying/tidying.html#pivot_longer-1",
    "href": "slides/data_tidying/tidying.html#pivot_longer-1",
    "title": "Untitled",
    "section": "",
    "text": "df_lifetime |&gt; \n  select(px,trial,region,ff,fp,rpd,tt,rt,type,accept,condition) |&gt;\n  filter(type==\"critical\",region==\"verb\",px!=\"px3\") |&gt;\n  pivot_longer(\n  cols = c(ff,fp,rpd,tt,rt), # columns to make long \n  names_to = \"measure\", # new column name for headers\n  values_to = \"time\" # new column name for values\n)\n\n\nSource: PsyTeachR"
  },
  {
    "objectID": "slides/data_tidying/tidying.html#pivot_wider",
    "href": "slides/data_tidying/tidying.html#pivot_wider",
    "title": "Untitled",
    "section": "",
    "text": "takes long data and makes it wider\ntakes a few arguments:\n\nid_cols: identifying columns\nnames_from: what should we call the new column containing the previous column names?\nnames_prefix:\nvalues_from: new column values"
  },
  {
    "objectID": "slides/data_tidying/tidying.html#pivot_wider-1",
    "href": "slides/data_tidying/tidying.html#pivot_wider-1",
    "title": "Untitled",
    "section": "",
    "text": "df_lifetime |&gt; \n  select(px,trial,region,ff,fp,rpd,tt,rt,type,accept,condition) |&gt;\n  filter(type==\"critical\",px!=\"px3\") |&gt;\n  pivot_wider(\n  id_cols = c(px,trial), # columns to make long \n  names_from = region, # new column name for headers\n  names_prefix = \"reg_\", # new column name for values\n  values_from = tt\n)\n\n\nSource: PsyTeachR"
  },
  {
    "objectID": "slides/07-tables/slides-data_viz.html#variable-names",
    "href": "slides/07-tables/slides-data_viz.html#variable-names",
    "title": "Data communication with tables",
    "section": "Variable names",
    "text": "Variable names\n\nwe can list the names of all variables in a dataset using names()\n\n\n\nnames(df_lifetime)\n\n\n\n [1] \"px\"            \"trial\"         \"region\"        \"region_n\"     \n [5] \"region_text\"   \"eye\"           \"ff\"            \"fp\"           \n [9] \"rpd\"           \"tt\"            \"fix_count\"     \"reg_in\"       \n[13] \"reg_in_count\"  \"reg_out\"       \"reg_out_count\" \"rt\"           \n[17] \"bio\"           \"critical\"      \"gender\"        \"item_id\"      \n[21] \"list\"          \"match\"         \"condition\"     \"name\"         \n[25] \"lifetime\"      \"tense\"         \"type\"          \"yes_press\"    \n[29] \"KeyPress\"      \"accept\"        \"accuracy\"      \"px_accuracy\"  \n\n\n\nbut we need to be able to put these names into a single column\n\nwhere each row contains one variable name\nand other columns contain information like description and data class"
  },
  {
    "objectID": "slides/07-tables/slides-data_viz.html#section",
    "href": "slides/07-tables/slides-data_viz.html#section",
    "title": "Data communication with tables",
    "section": "",
    "text": "copy the output of dput(coldesc) and assign it to an object\n\ntip: you can reformat the code by highlighting it and using Cmd/Ctrl+Shift+A\n\nor in the menu bar: Code &gt; Reformat Code\n\n\n\n\nreplace c() with tibble() to create a dataframe\n\nand fill in the quotations with description of the data\n\n\n\n\ndict_lifetime &lt;- tibble(\n  px = \"participant ID (factor)\",\n  trial = \"trial number (ordered factor)\",\n  region = \"sentence region (order factor)\",\n  region_n = \"numerical representation of sentence region (ordered factor)\",\n  region_text = \"text presented in the region (string)\",\n  eye = \"which eye was tracking: right or left (binomial)\",\n  ff = \"first-fixation times in milliseconds (continuous, values can be 0&lt;)\",\n  fp = \"first-pass reading times in milliseconds (numeric, values can be 0&lt;)\",\n  rpd = \"regression-path duration in milliseconds (numeric, values can be 0&lt;)\",\n  tt = \"total reading time in milliseconds (numeric, values can be 0&lt;)\",\n  fix_count = \"number of total fixations in the region (count)\",\n  reg_in = \"whether of a regression was made into the regions (binomial: 0 = no, 1 = yes)\",\n  reg_in_count = \"number of fixations into the region (count)\",\n  reg_out = \"whether of a regression was made out of the regions (binomial: 0 = no, 1 = yes)\",\n  reg_out_count = \"number of fixations out of the region (count)\",\n  rt = \"reaction time from critical sentence presentation to button press (continuous, values can be 0&lt;)\",\n  bio = \"lifetime biography context sentence (string)\",\n  critical = \"critical sentence (string)\",\n  gender = \"gender of stimulus subject (binomial: male, female)\",\n  item_id = \"item identification number (critical items: 1-80)\",\n  list = \"experimental list version: base list version (1-4) and whether the yes-button was coded as 4 or 5 (factor: 14, 15, 24, 25, 34, 35, 44, 45)\",\n  match = \"whether the referent-lifetime was congruent with tense\",\n  condition = \"condition: lifetime (dead, alive) + tense (PP, SF) (factor)\",\n  name = \"name of stimulis subject (string)\",\n  lifetime = \"lifetime status of stimulus subject at time of experiment (binomial: dead, alive)\",\n  tense = \"tense used in critical sentence (binomail: PP = present perfect, SF = simple future)\",\n  type = \"sentence type (factor with one level: critical)\",\n  yes_press = \"corresponding coding for the yes-button on Cedrus response box (4 = left button, 5 = right button)\",\n  KeyPress = \"key that was pressed (4 = left button, 5 = right button)\",\n  accept = \"whether the item was accepted, i.e., whether KeyPress equalled yes_press\",\n  accuracy = \"whether the acceptance was accurate (reject for a mismatch, accept for a match)\",\n  px_accuracy = \"participant's overall accuracy score\"\n)"
  },
  {
    "objectID": "slides/07-tables/slides-data_viz.html#section-1",
    "href": "slides/07-tables/slides-data_viz.html#section-1",
    "title": "Data communication with tables",
    "section": "",
    "text": "but dict_lifetime doesn‚Äôt have the shape we want\n\neach variable name is a column name\nand its description is in the first row\n\n\n\n\ndict_lifetime\n\n# A tibble: 1 √ó 32\n  px             trial region region_n region_text eye   ff    fp    rpd   tt   \n  &lt;chr&gt;          &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;\n1 participant I‚Ä¶ tria‚Ä¶ sente‚Ä¶ numeric‚Ä¶ text prese‚Ä¶ whic‚Ä¶ firs‚Ä¶ firs‚Ä¶ regr‚Ä¶ tota‚Ä¶\n# ‚Ñπ 22 more variables: fix_count &lt;chr&gt;, reg_in &lt;chr&gt;, reg_in_count &lt;chr&gt;,\n#   reg_out &lt;chr&gt;, reg_out_count &lt;chr&gt;, rt &lt;chr&gt;, bio &lt;chr&gt;, critical &lt;chr&gt;,\n#   gender &lt;chr&gt;, item_id &lt;chr&gt;, list &lt;chr&gt;, match &lt;chr&gt;, condition &lt;chr&gt;,\n#   name &lt;chr&gt;, lifetime &lt;chr&gt;, tense &lt;chr&gt;, type &lt;chr&gt;, yes_press &lt;chr&gt;,\n#   KeyPress &lt;chr&gt;, accept &lt;chr&gt;, accuracy &lt;chr&gt;, px_accuracy &lt;chr&gt;\n\n\n\nwe want to transpose the data\n\ni.e., rotates the data so that the column names are in a row, with the descriptions in another row"
  },
  {
    "objectID": "slides/07-tables/slides-data_viz.html#pivot_longer",
    "href": "slides/07-tables/slides-data_viz.html#pivot_longer",
    "title": "Data communication with tables",
    "section": "pivot_longer()",
    "text": "pivot_longer()\n\ntakes wide data and makes it longer\n\nconverts headers of columns into values of a new column\ncombines the values of those columns into a new condensed column\n\n\ntakes a few arguments:\n\n\ncols: which columns do we want to combine into a single column?\n\nnames_to: what should we call the new column containing the previous column names?\n\nvalues_to: what should we call the new column containing the values from the previous columns?"
  },
  {
    "objectID": "slides/07-tables/slides-data_viz.html#save-data-dictionary",
    "href": "slides/07-tables/slides-data_viz.html#save-data-dictionary",
    "title": "Data communication with tables",
    "section": "Save data dictionary",
    "text": "Save data dictionary\n\nnow we can save our data dictionary just like we would any csv\n\n\nwrite_csv(dict_lifetime, here(\"data\", \"tidy_data_lifetime_pilot_dictionary.csv\"))"
  },
  {
    "objectID": "slides/07-tables/slides-data_viz.html#tables-as-latex-code",
    "href": "slides/07-tables/slides-data_viz.html#tables-as-latex-code",
    "title": "Data communication with tables",
    "section": "Tables as LaTeX code",
    "text": "Tables as LaTeX code\n\nyou can add the argument \"latex\" to print LaTeX code for a table in the Console\n\nyou can then cut and paste this code into a LaTeX (or Overleaf) script\n\n\n\n\ndict_lifetime |&gt; \n  knitr::kable(\"latex\") \n\n\nbut be careful, if you‚Äôre rendering to HTML the table won‚Äôt be printed if you use \"latex\""
  },
  {
    "objectID": "slides/07-tables/slides-data_viz.html#kableextrakable_styling",
    "href": "slides/07-tables/slides-data_viz.html#kableextrakable_styling",
    "title": "Data communication with tables",
    "section": "kableExtra::kable_styling()",
    "text": "kableExtra::kable_styling()\n\nwe‚Äôll first create a little summary table using the iris dataset which comes built-in with R\n\n\nsum_iris &lt;- iris |&gt; \n  summarise(mean = mean(Sepal.Length),\n            sd = sd(Sepal.Length),\n            n = n(),\n            .by = Species)\n\n\nand we‚Äôll print the summary using kable_styling() (Table¬†1)\n\n\nsum_iris |&gt; \n  knitr::kable() |&gt; \n  kableExtra::kable_styling()\n\n\nTable¬†1: Example output of an table using the kableExtra package\n\n\n\n\n\nSpecies\nmean\nsd\nn\n\n\n\nsetosa\n5.006\n0.3524897\n50\n\n\nversicolor\n5.936\n0.5161711\n50\n\n\nvirginica\n6.588\n0.6358796\n50"
  },
  {
    "objectID": "slides/07-tables/slides-data_viz.html#flextable",
    "href": "slides/07-tables/slides-data_viz.html#flextable",
    "title": "Data communication with tables",
    "section": "flextable",
    "text": "flextable\n\nprint the same summary using flextable() (Table¬†2)\n\n\nsum_iris |&gt; \n  flextable::flextable()\n\n\nTable¬†2: Example output of an table using the flextable package\n\n\n\n\n\n\nSpecies\nmean\nsd\nn\n\n\n\nsetosa\n5.006\n0.3524897\n50\n\n\nversicolor\n5.936\n0.5161711\n50\n\n\nvirginica\n6.588\n0.6358796\n50"
  },
  {
    "objectID": "slides/07-tables/slides-data_viz.html#papajaapa_table",
    "href": "slides/07-tables/slides-data_viz.html#papajaapa_table",
    "title": "Data communication with tables",
    "section": "papaja::apa_table()",
    "text": "papaja::apa_table()\n\nnow run a linear mixed model on the iris data\n\n\nlmm_iris &lt;-\n  lme4::lmer(Sepal.Width ~ Sepal.Length + Petal.Width +\n               (1|Species), data = iris)\n\n\nand print a model summary table using apa_table() (Table¬†3)\n\n\nlmm_iris |&gt; papaja::apa_print() |&gt; \npapaja::apa_table(caption = NULL)\n\n\nTable¬†3: Example output of an LMM using papaja package\n\n\n\n(#tab:tbl-lmm_iris)\n\nTerm\n\\(\\hat{\\beta}\\)\n95% CI\n\\(t\\)\n\n\n\nIntercept\n0.85\n[-0.34, 2.05]\n1.39\n\n\nSepal Length\n0.27\n[0.18, 0.36]\n5.85\n\n\nPetal Width\n0.51\n[0.28, 0.74]\n4.37"
  },
  {
    "objectID": "slides/07-tables/sheet-data_viz.html",
    "href": "slides/07-tables/sheet-data_viz.html",
    "title": "Data communication with tables",
    "section": "",
    "text": "create a data dictionary\nproduce formatted tables with the knitr package\nproduce summary tables",
    "crumbs": [
      "D. Palleschi",
      "Data communication with tables"
    ]
  },
  {
    "objectID": "slides/07-tables/sheet-data_viz.html#variable-names",
    "href": "slides/07-tables/sheet-data_viz.html#variable-names",
    "title": "Data communication with tables",
    "section": "3.1 Variable names",
    "text": "3.1 Variable names\n\nwe can list the names of all variables in a dataset using names()\n\n\nnames(df_lifetime)\n\n [1] \"px\"            \"trial\"         \"region\"        \"region_n\"     \n [5] \"region_text\"   \"eye\"           \"ff\"            \"fp\"           \n [9] \"rpd\"           \"tt\"            \"fix_count\"     \"reg_in\"       \n[13] \"reg_in_count\"  \"reg_out\"       \"reg_out_count\" \"rt\"           \n[17] \"bio\"           \"critical\"      \"gender\"        \"item_id\"      \n[21] \"list\"          \"match\"         \"condition\"     \"name\"         \n[25] \"lifetime\"      \"tense\"         \"type\"          \"yes_press\"    \n[29] \"KeyPress\"      \"accept\"        \"accuracy\"      \"px_accuracy\"  \n\n\n\nbut we need to be able to put these names into a single column\n\nwhere each row contains one variable name\nand other columns contain information like description and data class\n\n\n\n3.1.1 Names to rows\n\n# From day 2 of Lisa DeBruine's [Coding Club: Creating an R Package](https://psyteachr.github.io/intro-r-pkgs/02-data.html#documentation)\n\n# create as many empty strings as we name variable names\ncoldesc &lt;- rep(\"\", ncol(df_lifetime))\n# add variable names to these empty strings\nnames(coldesc) &lt;- names(df_lifetime)\n\n\n# print as code needed to create an object\ndput(coldesc)\n\nc(px = \"\", trial = \"\", region = \"\", region_n = \"\", region_text = \"\", \neye = \"\", ff = \"\", fp = \"\", rpd = \"\", tt = \"\", fix_count = \"\", \nreg_in = \"\", reg_in_count = \"\", reg_out = \"\", reg_out_count = \"\", \nrt = \"\", bio = \"\", critical = \"\", gender = \"\", item_id = \"\", \nlist = \"\", match = \"\", condition = \"\", name = \"\", lifetime = \"\", \ntense = \"\", type = \"\", yes_press = \"\", KeyPress = \"\", accept = \"\", \naccuracy = \"\", px_accuracy = \"\")",
    "crumbs": [
      "D. Palleschi",
      "Data communication with tables"
    ]
  },
  {
    "objectID": "slides/07-tables/sheet-data_viz.html#section",
    "href": "slides/07-tables/sheet-data_viz.html#section",
    "title": "Data communication with tables",
    "section": "3.2 ",
    "text": "3.2 \n\ncopy the output of dput(coldesc) and assign it to an object\n\ntip: you can reformat the code by highlighting it and using Cmd/Ctrl+Shift+A\n\nor in the menu bar: Code &gt; Reformat Code\n\n\nreplace c() with tibble() to create a dataframe\n\nand fill in the quotations with description of the data\n\n\n\ndict_lifetime &lt;- tibble(\n  px = \"participant ID (factor)\",\n  trial = \"trial number (ordered factor)\",\n  region = \"sentence region (order factor)\",\n  region_n = \"numerical representation of sentence region (ordered factor)\",\n  region_text = \"text presented in the region (string)\",\n  eye = \"which eye was tracking: right or left (binomial)\",\n  ff = \"first-fixation times in milliseconds (continuous, values can be 0&lt;)\",\n  fp = \"first-pass reading times in milliseconds (numeric, values can be 0&lt;)\",\n  rpd = \"regression-path duration in milliseconds (numeric, values can be 0&lt;)\",\n  tt = \"total reading time in milliseconds (numeric, values can be 0&lt;)\",\n  fix_count = \"number of total fixations in the region (count)\",\n  reg_in = \"whether of a regression was made into the regions (binomial: 0 = no, 1 = yes)\",\n  reg_in_count = \"number of fixations into the region (count)\",\n  reg_out = \"whether of a regression was made out of the regions (binomial: 0 = no, 1 = yes)\",\n  reg_out_count = \"number of fixations out of the region (count)\",\n  rt = \"reaction time from critical sentence presentation to button press (continuous, values can be 0&lt;)\",\n  bio = \"lifetime biography context sentence (string)\",\n  critical = \"critical sentence (string)\",\n  gender = \"gender of stimulus subject (binomial: male, female)\",\n  item_id = \"item identification number (critical items: 1-80)\",\n  list = \"experimental list version: base list version (1-4) and whether the yes-button was coded as 4 or 5 (factor: 14, 15, 24, 25, 34, 35, 44, 45)\",\n  match = \"whether the referent-lifetime was congruent with tense\",\n  condition = \"condition: lifetime (dead, alive) + tense (PP, SF) (factor)\",\n  name = \"name of stimulis subject (string)\",\n  lifetime = \"lifetime status of stimulus subject at time of experiment (binomial: dead, alive)\",\n  tense = \"tense used in critical sentence (binomail: PP = present perfect, SF = simple future)\",\n  type = \"sentence type (factor with one level: critical)\",\n  yes_press = \"corresponding coding for the yes-button on Cedrus response box (4 = left button, 5 = right button)\",\n  KeyPress = \"key that was pressed (4 = left button, 5 = right button)\",\n  accept = \"whether the item was accepted, i.e., whether KeyPress equalled yes_press\",\n  accuracy = \"whether the acceptance was accurate (reject for a mismatch, accept for a match)\",\n  px_accuracy = \"participant's overall accuracy score\"\n)",
    "crumbs": [
      "D. Palleschi",
      "Data communication with tables"
    ]
  },
  {
    "objectID": "slides/07-tables/sheet-data_viz.html#section-1",
    "href": "slides/07-tables/sheet-data_viz.html#section-1",
    "title": "Data communication with tables",
    "section": "3.3 ",
    "text": "3.3 \n\nbut dict_lifetime doesn‚Äôt have the shape we want\n\neach variable name is a column name\nand its description is in the first row\n\n\n\ndict_lifetime\n\n# A tibble: 1 √ó 32\n  px             trial region region_n region_text eye   ff    fp    rpd   tt   \n  &lt;chr&gt;          &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;\n1 participant I‚Ä¶ tria‚Ä¶ sente‚Ä¶ numeric‚Ä¶ text prese‚Ä¶ whic‚Ä¶ firs‚Ä¶ firs‚Ä¶ regr‚Ä¶ tota‚Ä¶\n# ‚Ñπ 22 more variables: fix_count &lt;chr&gt;, reg_in &lt;chr&gt;, reg_in_count &lt;chr&gt;,\n#   reg_out &lt;chr&gt;, reg_out_count &lt;chr&gt;, rt &lt;chr&gt;, bio &lt;chr&gt;, critical &lt;chr&gt;,\n#   gender &lt;chr&gt;, item_id &lt;chr&gt;, list &lt;chr&gt;, match &lt;chr&gt;, condition &lt;chr&gt;,\n#   name &lt;chr&gt;, lifetime &lt;chr&gt;, tense &lt;chr&gt;, type &lt;chr&gt;, yes_press &lt;chr&gt;,\n#   KeyPress &lt;chr&gt;, accept &lt;chr&gt;, accuracy &lt;chr&gt;, px_accuracy &lt;chr&gt;\n\n\n\nwe want to transpose the data\n\ni.e., rotates the data so that the column names are in a row, with the descriptions in another row",
    "crumbs": [
      "D. Palleschi",
      "Data communication with tables"
    ]
  },
  {
    "objectID": "slides/07-tables/sheet-data_viz.html#pivot_longer",
    "href": "slides/07-tables/sheet-data_viz.html#pivot_longer",
    "title": "Data communication with tables",
    "section": "3.4 pivot_longer()",
    "text": "3.4 pivot_longer()\n\ntakes wide data and makes it longer\n\nconverts headers of columns into values of a new column\ncombines the values of those columns into a new condensed column\n\ntakes a few arguments:\n\ncols: which columns do we want to combine into a single column?\nnames_to: what should we call the new column containing the previous column names?\nvalues_to: what should we call the new column containing the values from the previous columns?",
    "crumbs": [
      "D. Palleschi",
      "Data communication with tables"
    ]
  },
  {
    "objectID": "slides/07-tables/sheet-data_viz.html#section-2",
    "href": "slides/07-tables/sheet-data_viz.html#section-2",
    "title": "Data communication with tables",
    "section": "",
    "text": "3.4.1 Pivot our data dictionary\n\nthis looks much better!\n\n\ndict_lifetime &lt;-\n  dict_lifetime |&gt; \n  pivot_longer(\n    cols = everything(),\n    names_to = \"variable\",\n    values_to = \"description\"\n  )",
    "crumbs": [
      "D. Palleschi",
      "Data communication with tables"
    ]
  },
  {
    "objectID": "slides/07-tables/sheet-data_viz.html#save-data-dictionary",
    "href": "slides/07-tables/sheet-data_viz.html#save-data-dictionary",
    "title": "Data communication with tables",
    "section": "3.5 Save data dictionary",
    "text": "3.5 Save data dictionary\n\nnow we can save our data dictionary just like we would any csv\n\n\nwrite_csv(dict_lifetime, here(\"data\", \"tidy_data_lifetime_pilot_dictionary.csv\"))",
    "crumbs": [
      "D. Palleschi",
      "Data communication with tables"
    ]
  },
  {
    "objectID": "slides/07-tables/sheet-data_viz.html#tables-as-latex-code",
    "href": "slides/07-tables/sheet-data_viz.html#tables-as-latex-code",
    "title": "Data communication with tables",
    "section": "4.1 Tables as LaTeX code",
    "text": "4.1 Tables as LaTeX code\n\nyou can add the argument \"latex\" to print LaTeX code for a table in the Console\n\nyou can then cut and paste this code into a LaTeX (or Overleaf) script\n\n\n\ndict_lifetime |&gt; \n  knitr::kable(\"latex\") \n\n\nbut be careful, if you‚Äôre rendering to HTML the table won‚Äôt be printed if you use \"latex\"\n\n\n4.1.1 Exercise\n\ninstall the knitr package (install.packages(\"knitr\"))\nprint dict_lifetime, but only for the following variables:\n\npx, trial, region_text, ff, fp, and condition\n\nuse kable() from knitr to print the table\n\n\n\n\n\n\n\n\n\n\nvariable\ndescription\n\n\n\n\npx\nparticipant ID (factor)\n\n\ntrial\ntrial number (ordered factor)\n\n\nregion_text\ntext presented in the region (string)\n\n\nff\nfirst-fixation times in milliseconds (continuous, values can be 0&lt;)\n\n\nfp\nfirst-pass reading times in milliseconds (numeric, values can be 0&lt;)\n\n\ncondition\ncondition: lifetime (dead, alive) + tense (PP, SF) (factor)",
    "crumbs": [
      "D. Palleschi",
      "Data communication with tables"
    ]
  },
  {
    "objectID": "slides/07-tables/sheet-data_viz.html#section-3",
    "href": "slides/07-tables/sheet-data_viz.html#section-3",
    "title": "Data communication with tables",
    "section": "6.1 ",
    "text": "6.1",
    "crumbs": [
      "D. Palleschi",
      "Data communication with tables"
    ]
  },
  {
    "objectID": "slides/07-tables/sheet-data_viz.html#kableextrakable_styling",
    "href": "slides/07-tables/sheet-data_viz.html#kableextrakable_styling",
    "title": "Data communication with tables",
    "section": "7.1 kableExtra::kable_styling()",
    "text": "7.1 kableExtra::kable_styling()\n\nwe‚Äôll first create a little summary table using the iris dataset which comes built-in with R\n\n\nsum_iris &lt;- iris |&gt; \n  summarise(mean = mean(Sepal.Length),\n            sd = sd(Sepal.Length),\n            n = n(),\n            .by = Species)\n\n\nand we‚Äôll print the summary using kable_styling() (Table¬†1)\n\n\nsum_iris |&gt; \n  knitr::kable() |&gt; \n  kableExtra::kable_styling()\n\n\n\nTable¬†1: Example output of an table using the kableExtra package\n\n\n\n\n\n\n\nSpecies\nmean\nsd\nn\n\n\n\n\nsetosa\n5.006\n0.3524897\n50\n\n\nversicolor\n5.936\n0.5161711\n50\n\n\nvirginica\n6.588\n0.6358796\n50",
    "crumbs": [
      "D. Palleschi",
      "Data communication with tables"
    ]
  },
  {
    "objectID": "slides/07-tables/sheet-data_viz.html#flextable",
    "href": "slides/07-tables/sheet-data_viz.html#flextable",
    "title": "Data communication with tables",
    "section": "7.2 flextable",
    "text": "7.2 flextable\n\nprint the same summary using flextable() (Table¬†2)\n\n\nsum_iris |&gt; \n  flextable::flextable()\n\n\n\nTable¬†2: Example output of an table using the flextable package\n\n\n\nSpeciesmeansdnsetosa5.0060.352489750versicolor5.9360.516171150virginica6.5880.635879650",
    "crumbs": [
      "D. Palleschi",
      "Data communication with tables"
    ]
  },
  {
    "objectID": "slides/07-tables/sheet-data_viz.html#papajaapa_table",
    "href": "slides/07-tables/sheet-data_viz.html#papajaapa_table",
    "title": "Data communication with tables",
    "section": "7.3 papaja::apa_table()",
    "text": "7.3 papaja::apa_table()\n\nnow run a linear mixed model on the iris data\n\n\nlmm_iris &lt;-\n  lme4::lmer(Sepal.Width ~ Sepal.Length + Petal.Width +\n               (1|Species), data = iris)\n\n\nand print a model summary table using apa_table() (Table¬†3)\n\n\nlmm_iris |&gt; papaja::apa_print() |&gt; \npapaja::apa_table(caption = NULL)\n\n\n\nTable¬†3: Example output of an LMM using papaja package\n\n\n\n\n(#tab:tbl-lmm_iris)\n\n\nTerm\n\\(\\hat{\\beta}\\)\n95% CI\n\\(t\\)\n\n\n\n\nIntercept\n0.85\n[-0.34, 2.05]\n1.39\n\n\nSepal Length\n0.27\n[0.18, 0.36]\n5.85\n\n\nPetal Width\n0.51\n[0.28, 0.74]\n4.37",
    "crumbs": [
      "D. Palleschi",
      "Data communication with tables"
    ]
  },
  {
    "objectID": "session-info.html",
    "href": "session-info.html",
    "title": "Session Info",
    "section": "",
    "text": "git2r::repository()\n\nLocal:    main /Users/danielapalleschi/Documents/IdSL/Teaching/SoSe24/M.A./r4repro_SoSe2024\nRemote:   main @ origin (git@github.com:daniela-palleschi/r4repro_SoSe2024.git)\nHead:     [b033ff5] 2024-06-11: update pacman callout tip to include code examples (package management slides)\n\n\n\nsessionInfo()\n\nR version 4.4.0 (2024-04-24)\nPlatform: aarch64-apple-darwin20\nRunning under: macOS Ventura 13.2.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nloaded via a namespace (and not attached):\n [1] htmlwidgets_1.6.4 compiler_4.4.0    fastmap_1.2.0     cli_3.6.2        \n [5] htmltools_0.5.8.1 tools_4.4.0       rstudioapi_0.16.0 yaml_2.3.8       \n [9] rmarkdown_2.27    knitr_1.47        git2r_0.33.0      jsonlite_1.8.8   \n[13] xfun_0.44         digest_0.6.35     rlang_1.1.4       renv_1.0.7       \n[17] evaluate_0.23"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "",
    "section": "",
    "text": "Code\n\n\n\n\n\nPreface\nThis web-book contains slides for the 2024 summer semester course ‚ÄòOpen Science Practices: Implementing a Reproducible Workflow in R‚Äô (and other iterations) given by Daniela Palleschi at the Humboldt-Universit√§t zu Berlin. The tools discussed in this book are specific to the R enviornment, but the concepts are universal and programming language agnostic.\nEach week‚Äôs topic is listed in the sidebar in chronological order. Three output formats are available, all with the same content:\n\nHTML page\nPDF of content\nRevealJS slides (optimally formatted)\n\nThe contents were formatted for the slide output. Tables and figures may be too large/small in formats 1 and 2. From the HTML page the other 2 formats can be viewed by clicking on their symbol under ‚ÄòOther Formats‚Äô (right sidebar)."
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility_slides.html#what-should-ideally-be-shared",
    "href": "slides/03-reproducibility/reproducibility_slides.html#what-should-ideally-be-shared",
    "title": "Reproducibility",
    "section": "What should (ideally) be shared?",
    "text": "What should (ideally) be shared?\n\n\n\nmaterials\n\nprotocols\nstimuli\nexperiment set-up\n\n\ndocumentation\n\nREADME\nmetadata\n\n\n\n\n\ndata\n\nraw\n\ne.g., text files, audio, video, or images\n\n\nprocessed\n\n\nanalysis code\n\npre-processing\nanalyses\n\n\n\n\n\n\n\n\nmaterials are helpful for replication\n\nbut also for inspection of e.g., design\n\n\n\n\n\ndata and code are necessary for reproducibility\n\nalong with proper documentation of software used"
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility_slides.html#reproducibility-rates-in-linguistic-research",
    "href": "slides/03-reproducibility/reproducibility_slides.html#reproducibility-rates-in-linguistic-research",
    "title": "Reproducibility",
    "section": "Reproducibility rates in linguistic research",
    "text": "Reproducibility rates in linguistic research\n\n\n\n\n\n\nFigure¬†1: Source: Bochynska et al. (2023), p.¬†11 (all rights reserved)\n\n\n\n\n\n\n\n\n\nmeta-analysis of 519 randomly sampled articles from various linguistic journales\n\npre- and post-reproducibility crisis (2008/9, 2018/19) (Bochynska et al., 2023)\n\ndifferentiated between primary (collected for study) and secondary (pre-existing) data\n\n\nreported a post-RC increase in shared materials, data, and analyses\n\nbut still low rates of each\n\n\nhigher rates of secondary data sharing, presumably due to publicly available corpora\ndata shared more often than analyses, pre- and post-RC"
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility_slides.html#journal-of-memory-and-language",
    "href": "slides/03-reproducibility/reproducibility_slides.html#journal-of-memory-and-language",
    "title": "Reproducibility",
    "section": "Journal of Memory and Language",
    "text": "Journal of Memory and Language\n\nmeta-analysis of articles from JML (Laurinavichyute et al., 2022)\n\nbefore and after an Open Science Policy was introduced in 2019\n\n\n\n\n\nFigure¬†2: Source: Laurinavichyute et al. (2022), p.¬†5 (all rights reserved)\n\ncode and data availability improved\nbut reproducibility rate ranged from 34-56%, depending on criteria\nhigher rates compared to field-wide meta-analysis (Bochynska et al., 2023)"
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility_slides.html#findable",
    "href": "slides/03-reproducibility/reproducibility_slides.html#findable",
    "title": "Reproducibility",
    "section": "Findable",
    "text": "Findable\n\nrefers to data and supplementary materials\n\nmaterials should have a ‚Äúpersistant identifier‚Äù\n\ne.g., Digital Object Identifier (DOI) for scholarly articles\n\n\n\na digital, long-term storage of data\n\n\nnot on a personal or professional website\nGitHub files don‚Äôt typically have sufficient metadata\nideally: OSF, Zenodo or some other repository\n\n\nin recent papers, an OSF link is typically provided\n\nalso: discoverable\n\ne.g., in data-specific search engines (Google‚Äôs Dataset search)"
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility_slides.html#accessible",
    "href": "slides/03-reproducibility/reproducibility_slides.html#accessible",
    "title": "Reproducibility",
    "section": "Accessible",
    "text": "Accessible\n\ndata (and code) should be\n\nmachine- and human-readable\navailable on a trusted repository, e.g., the OSF\nOpen Access\n\nnot behind a paywall\nnor require a login"
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility_slides.html#interoperable",
    "href": "slides/03-reproducibility/reproducibility_slides.html#interoperable",
    "title": "Reproducibility",
    "section": "Interoperable",
    "text": "Interoperable\n\n\n\ndata (and code) should\n\nnot dependent on an operating system\nnor entirely on software/package versions\n\n\neasiest work around:\n\ndocument your software versions\nthis doesn‚Äôt automatically facilitate interoperability\nbut may help pinpoint where problems are coming from"
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility_slides.html#reusable",
    "href": "slides/03-reproducibility/reproducibility_slides.html#reusable",
    "title": "Reproducibility",
    "section": "Reusable",
    "text": "Reusable\n\n\n\ndata (and code) should\n\nbe reusable for future research\n\n\ndata format should be generic\n\ni.e., not tied to a specific program\nfor tabular data, I recommend .csv format\n\n\nwe can swap with ‚Äòreproducible‚Äô in the context of analyses"
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility_slides.html#task-finding-data",
    "href": "slides/03-reproducibility/reproducibility_slides.html#task-finding-data",
    "title": "Reproducibility",
    "section": "Task: finding data",
    "text": "Task: finding data\nGo to datasetsearch.research.google.com/\n\ndo a search for data related to a topic of interest to you\nwhat type of information does the search provide?\nwhat type of links?\ndo you find analysis code, or just data?\ndo the same search at osf.io\n\nand at zenodo.org/\n\nare there the same amount of hits?"
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility_slides.html#data-and-code-neq-reproducibility",
    "href": "slides/03-reproducibility/reproducibility_slides.html#data-and-code-neq-reproducibility",
    "title": "Reproducibility",
    "section": "Data and code \\(\\neq\\) Reproducibility",
    "text": "Data and code \\(\\neq\\) Reproducibility\n\neven including code does not guarantee reproducibility\naccess to data and code do not mean analyses are reproducible\nwhat can go wrong? Examples from Laurinavichyute et al. (2022)\n\n\n\n\nData problems\n\ninaccessible data\nincomplete data (e.g., 2/3 experiments)\n\n\nCode problems\n\nincomplete code\nerror messages\ncode rot: outdated syntax or environment\nproprietary software\n\n\n\n\n\nDocumentation problems\n\ndata difficult to interpret\nno README file/data dictionary\nunclear folder/file/variable naming convention\nmanuscript contradicts code\n\n\nUnclear terms of use\n\nno licence specification"
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility_slides.html#share-the-code-not-just-the-data",
    "href": "slides/03-reproducibility/reproducibility_slides.html#share-the-code-not-just-the-data",
    "title": "Reproducibility",
    "section": "Share the code, not just the data",
    "text": "Share the code, not just the data\n\nWhy?\n\nkey details are often missing from ‚ÄòMethods‚Äô sections\n\n\nsuggestions for researchers from Laurinavichyute et al. (2022)\n\n\n\n\n\nShare data in usable form\n\nwith pre-processing code\n\n\nUse publicly accessible repositories\n\ne.g., OSF\n\n\nUse non-proprietary data formats\n\ne.g., not .xls files (Excel)\n\n\n\n\n\nProvide documentation\n\ne.g., README, data dictionaries\n\n\nShare code and data\n\nthey estimate a 38% increase in reproducibility\n\n\nTeach data management and computing skills\n\nthat‚Äôs what this course is for!"
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility_slides.html#project-management",
    "href": "slides/03-reproducibility/reproducibility_slides.html#project-management",
    "title": "Reproducibility",
    "section": "Project management",
    "text": "Project management\n\nfolder structure\nproject-relative file paths\nappropriate documentation\n\ne.g., README\n\n\nit‚Äôs great to map out your project structure early on\n\nbut it will grow as you go along\nreproducible principles facilitate adapting as it grows"
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility_slides.html#literate-programming",
    "href": "slides/03-reproducibility/reproducibility_slides.html#literate-programming",
    "title": "Reproducibility",
    "section": "Literate programming",
    "text": "Literate programming\n\nInstead of imagining that our main task is to instruct a computer what to do, let us concentrate rather on explaining to human beings what we want a computer to do.\n\n‚Äî Knuth (1984), p.¬†97\n\n\n\noriginally used to refer to writing programs\nbut also applies to analysis code\n\nespecially if we‚Äôre aiming for reproducibility\n\n\n\n\n\n\nmain concepts:\n\ncode is linear (this pre-dates Knuth, 1984)\n\ninformative but concise commenting\n\n\n\n\n\n\nmain benefits:\n\nfacilitates maintenance\nhelpful for future-you, collaborators, etc."
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility_slides.html#documentation",
    "href": "slides/03-reproducibility/reproducibility_slides.html#documentation",
    "title": "Reproducibility",
    "section": "Documentation",
    "text": "Documentation\n\n\nmetadata\n\nproject README\ncodebook/data dictionary\n\n\n\nREADME should contain\n\na project description\nrelevant links\ndescription of folder structure\n\n\ncan be updated as the project develops\n\nREADME.md files in GitHub/Lab are automatically used as a project description\n\n\n.md is a plaintext document\nuses markdown syntax"
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility_slides.html#version-control",
    "href": "slides/03-reproducibility/reproducibility_slides.html#version-control",
    "title": "Reproducibility",
    "section": "Version control",
    "text": "Version control\n\ngit: local tracking\nuseful for the analysis and writing phases\n\nbut can be tricky for collaboration\n\n\nGitHub/GitLab: remote tracking\n\nstore your changes to your local git repository\nthen push them to your remote repository\n\n\nsafe guards against local hardware/software issues\n\nlost or damaged computer or local files\n\n\nand allows for collaboration or sharing"
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility_slides.html#persistant-public-storage",
    "href": "slides/03-reproducibility/reproducibility_slides.html#persistant-public-storage",
    "title": "Reproducibility",
    "section": "Persistant (public) storage",
    "text": "Persistant (public) storage\n\nGitHub/Lab are sub-optimal\n\ndeveloper-focused\ntypically lack thorough documentation/metadata\nnot very user-friendly for non-users\n\n\nOSF, Zenodo\n\nOpen Science-focused\ncan be linked to a GitHub/Lab repository\nfacilitate thorough documentation\nuser-friendly"
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility_slides.html#writing",
    "href": "slides/03-reproducibility/reproducibility_slides.html#writing",
    "title": "Reproducibility",
    "section": "Writing",
    "text": "Writing\n\n\ndynamic reports with Markdown syntax\n\ne.g., Rmarkdown, Quarto\nintegration of data, code, and prose\n\nfacilitates cross-referencing within document\nintegration of citation management tools\nsupports LaTeX syntax for example sentences and tables\n\n\n\n\npapaja package for APA-formatted Rmarkdown documents\n\nchallenge: collaboration\n\nnot all collaborators know these tools\ntrack changes not currently possible"
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility.html",
    "href": "slides/03-reproducibility/reproducibility.html",
    "title": "Reproducibility",
    "section": "",
    "text": "Today we will learn about‚Ä¶\n\nreproducibility rates in linguistics\nFAIR principles\nconcepts for building a reproducible workflow",
    "crumbs": [
      "D. Palleschi",
      "Reproducibility"
    ]
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility.html#what-should-ideally-be-shared",
    "href": "slides/03-reproducibility/reproducibility.html#what-should-ideally-be-shared",
    "title": "Reproducibility",
    "section": "What should (ideally) be shared?",
    "text": "What should (ideally) be shared?\n\n\n\nmaterials\n\nprotocols\nstimuli\nexperiment set-up\n\ndocumentation\n\nREADME\nmetadata\n\n\n\n\ndata\n\nraw\n\ne.g., text files, audio, video, or images\n\nprocessed\n\nanalysis code\n\npre-processing\nanalyses\n\n\n\n\n\n\n\nmaterials are helpful for replication\n\nbut also for inspection of e.g., design\n\n\n\n\ndata and code are necessary for reproducibility\n\nalong with proper documentation of software used",
    "crumbs": [
      "D. Palleschi",
      "Reproducibility"
    ]
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility.html#reproducibility-rates-in-linguistic-research",
    "href": "slides/03-reproducibility/reproducibility.html#reproducibility-rates-in-linguistic-research",
    "title": "Reproducibility",
    "section": "Reproducibility rates in linguistic research",
    "text": "Reproducibility rates in linguistic research\n\n\n\n\n\n\n\n\n\n\nFigure¬†1: Source: Bochynska et al. (2023), p.¬†11 (all rights reserved)\n\n\n\n\n\n\n\nmeta-analysis of 519 randomly sampled articles from various linguistic journales\n\npre- and post-reproducibility crisis (2008/9, 2018/19) (Bochynska et al., 2023)\ndifferentiated between primary (collected for study) and secondary (pre-existing) data\n\nreported a post-RC increase in shared materials, data, and analyses\n\nbut still low rates of each\n\nhigher rates of secondary data sharing, presumably due to publicly available corpora\ndata shared more often than analyses, pre- and post-RC",
    "crumbs": [
      "D. Palleschi",
      "Reproducibility"
    ]
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility.html#journal-of-memory-and-language",
    "href": "slides/03-reproducibility/reproducibility.html#journal-of-memory-and-language",
    "title": "Reproducibility",
    "section": "Journal of Memory and Language",
    "text": "Journal of Memory and Language\n\nmeta-analysis of articles from JML (Laurinavichyute et al., 2022)\n\nbefore and after an Open Science Policy was introduced in 2019\n\n\n\n\n\n\n\n\n\n\nFigure¬†2: Source: Laurinavichyute et al. (2022), p.¬†5 (all rights reserved)\n\n\n\n\n\n\ncode and data availability improved\nbut reproducibility rate ranged from 34-56%, depending on criteria\nhigher rates compared to field-wide meta-analysis (Bochynska et al., 2023)",
    "crumbs": [
      "D. Palleschi",
      "Reproducibility"
    ]
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility.html#findable",
    "href": "slides/03-reproducibility/reproducibility.html#findable",
    "title": "Reproducibility",
    "section": "Findable",
    "text": "Findable\n\nrefers to data and supplementary materials\nmaterials should have a ‚Äúpersistant identifier‚Äù\n\ne.g., Digital Object Identifier (DOI) for scholarly articles\n\na digital, long-term storage of data\n\nnot on a personal or professional website\nGitHub files don‚Äôt typically have sufficient metadata\nideally: OSF, Zenodo or some other repository\n\nin recent papers, an OSF link is typically provided\nalso: discoverable\n\ne.g., in data-specific search engines (Google‚Äôs Dataset search)",
    "crumbs": [
      "D. Palleschi",
      "Reproducibility"
    ]
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility.html#accessible",
    "href": "slides/03-reproducibility/reproducibility.html#accessible",
    "title": "Reproducibility",
    "section": "Accessible",
    "text": "Accessible\n\ndata (and code) should be\n\nmachine- and human-readable\navailable on a trusted repository, e.g., the OSF\nOpen Access\n\nnot behind a paywall\nnor require a login",
    "crumbs": [
      "D. Palleschi",
      "Reproducibility"
    ]
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility.html#interoperable",
    "href": "slides/03-reproducibility/reproducibility.html#interoperable",
    "title": "Reproducibility",
    "section": "Interoperable",
    "text": "Interoperable\n\n\n\ndata (and code) should\n\nnot dependent on an operating system\nnor entirely on software/package versions\n\neasiest work around:\n\ndocument your software versions\nthis doesn‚Äôt automatically facilitate interoperability\nbut may help pinpoint where problems are coming from",
    "crumbs": [
      "D. Palleschi",
      "Reproducibility"
    ]
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility.html#reusable",
    "href": "slides/03-reproducibility/reproducibility.html#reusable",
    "title": "Reproducibility",
    "section": "Reusable",
    "text": "Reusable\n\n\n\ndata (and code) should\n\nbe reusable for future research\n\ndata format should be generic\n\ni.e., not tied to a specific program\nfor tabular data, I recommend .csv format\n\nwe can swap with ‚Äòreproducible‚Äô in the context of analyses",
    "crumbs": [
      "D. Palleschi",
      "Reproducibility"
    ]
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility.html#task-finding-data",
    "href": "slides/03-reproducibility/reproducibility.html#task-finding-data",
    "title": "Reproducibility",
    "section": "Task: finding data",
    "text": "Task: finding data\nGo to datasetsearch.research.google.com/\n\ndo a search for data related to a topic of interest to you\nwhat type of information does the search provide?\nwhat type of links?\ndo you find analysis code, or just data?\ndo the same search at osf.io\nand at zenodo.org/\n\nare there the same amount of hits?",
    "crumbs": [
      "D. Palleschi",
      "Reproducibility"
    ]
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility.html#data-and-code-neq-reproducibility",
    "href": "slides/03-reproducibility/reproducibility.html#data-and-code-neq-reproducibility",
    "title": "Reproducibility",
    "section": "Data and code \\(\\neq\\) Reproducibility",
    "text": "Data and code \\(\\neq\\) Reproducibility\n\neven including code does not guarantee reproducibility\naccess to data and code do not mean analyses are reproducible\nwhat can go wrong? Examples from Laurinavichyute et al. (2022)\n\n\n\n\nData problems\n\ninaccessible data\nincomplete data (e.g., 2/3 experiments)\n\nCode problems\n\nincomplete code\nerror messages\ncode rot: outdated syntax or environment\nproprietary software\n\n\n\n\nDocumentation problems\n\ndata difficult to interpret\nno README file/data dictionary\nunclear folder/file/variable naming convention\nmanuscript contradicts code\n\nUnclear terms of use\n\nno licence specification",
    "crumbs": [
      "D. Palleschi",
      "Reproducibility"
    ]
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility.html#share-the-code-not-just-the-data",
    "href": "slides/03-reproducibility/reproducibility.html#share-the-code-not-just-the-data",
    "title": "Reproducibility",
    "section": "Share the code, not just the data",
    "text": "Share the code, not just the data\n\nWhy?\n\nkey details are often missing from ‚ÄòMethods‚Äô sections\n\nsuggestions for researchers from Laurinavichyute et al. (2022)\n\n\n\n\nShare data in usable form\n\nwith pre-processing code\n\nUse publicly accessible repositories\n\ne.g., OSF\n\nUse non-proprietary data formats\n\ne.g., not .xls files (Excel)\n\n\n\n\nProvide documentation\n\ne.g., README, data dictionaries\n\nShare code and data\n\nthey estimate a 38% increase in reproducibility\n\nTeach data management and computing skills\n\nthat‚Äôs what this course is for!",
    "crumbs": [
      "D. Palleschi",
      "Reproducibility"
    ]
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility.html#project-management",
    "href": "slides/03-reproducibility/reproducibility.html#project-management",
    "title": "Reproducibility",
    "section": "Project management",
    "text": "Project management\n\nfolder structure\nproject-relative file paths\nappropriate documentation\n\ne.g., README\n\nit‚Äôs great to map out your project structure early on\n\nbut it will grow as you go along\nreproducible principles facilitate adapting as it grows",
    "crumbs": [
      "D. Palleschi",
      "Reproducibility"
    ]
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility.html#literate-programming",
    "href": "slides/03-reproducibility/reproducibility.html#literate-programming",
    "title": "Reproducibility",
    "section": "Literate programming",
    "text": "Literate programming\n\nInstead of imagining that our main task is to instruct a computer what to do, let us concentrate rather on explaining to human beings what we want a computer to do.\n\n‚Äî Knuth (1984), p.¬†97\n\n\n\noriginally used to refer to writing programs\nbut also applies to analysis code\n\nespecially if we‚Äôre aiming for reproducibility\n\n\n\n\nmain concepts:\n\ncode is linear (this pre-dates Knuth, 1984)\ninformative but concise commenting\n\n\n\n\nmain benefits:\n\nfacilitates maintenance\nhelpful for future-you, collaborators, etc.",
    "crumbs": [
      "D. Palleschi",
      "Reproducibility"
    ]
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility.html#documentation",
    "href": "slides/03-reproducibility/reproducibility.html#documentation",
    "title": "Reproducibility",
    "section": "Documentation",
    "text": "Documentation\n\nmetadata\n\nproject README\ncodebook/data dictionary\n\nREADME should contain\n\na project description\nrelevant links\ndescription of folder structure\n\ncan be updated as the project develops\nREADME.md files in GitHub/Lab are automatically used as a project description\n\n.md is a plaintext document\nuses markdown syntax",
    "crumbs": [
      "D. Palleschi",
      "Reproducibility"
    ]
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility.html#version-control",
    "href": "slides/03-reproducibility/reproducibility.html#version-control",
    "title": "Reproducibility",
    "section": "Version control",
    "text": "Version control\n\ngit: local tracking\nuseful for the analysis and writing phases\n\nbut can be tricky for collaboration\n\nGitHub/GitLab: remote tracking\n\nstore your changes to your local git repository\nthen push them to your remote repository\n\nsafe guards against local hardware/software issues\n\nlost or damaged computer or local files\n\nand allows for collaboration or sharing",
    "crumbs": [
      "D. Palleschi",
      "Reproducibility"
    ]
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility.html#persistant-public-storage",
    "href": "slides/03-reproducibility/reproducibility.html#persistant-public-storage",
    "title": "Reproducibility",
    "section": "Persistant (public) storage",
    "text": "Persistant (public) storage\n\nGitHub/Lab are sub-optimal\n\ndeveloper-focused\ntypically lack thorough documentation/metadata\nnot very user-friendly for non-users\n\nOSF, Zenodo\n\nOpen Science-focused\ncan be linked to a GitHub/Lab repository\nfacilitate thorough documentation\nuser-friendly",
    "crumbs": [
      "D. Palleschi",
      "Reproducibility"
    ]
  },
  {
    "objectID": "slides/03-reproducibility/reproducibility.html#writing",
    "href": "slides/03-reproducibility/reproducibility.html#writing",
    "title": "Reproducibility",
    "section": "Writing",
    "text": "Writing\n\ndynamic reports with Markdown syntax\n\ne.g., Rmarkdown, Quarto\nintegration of data, code, and prose\n\nfacilitates cross-referencing within document\nintegration of citation management tools\nsupports LaTeX syntax for example sentences and tables\n\n\npapaja package for APA-formatted Rmarkdown documents\nchallenge: collaboration\n\nnot all collaborators know these tools\ntrack changes not currently possible",
    "crumbs": [
      "D. Palleschi",
      "Reproducibility"
    ]
  },
  {
    "objectID": "slides/09-packages/packages_slides.html#cran-packages",
    "href": "slides/09-packages/packages_slides.html#cran-packages",
    "title": "Package management",
    "section": "CRAN packages",
    "text": "CRAN packages\n\nthe Comprehensive R Archive Network: R‚Äôs central software repository\n\ncurrently 20,888 available!\n\n\nan archive of the most recent package versions\nfor a package to be included in the CRAN, it must go through a lot of tests and checks\n\nany updates or changes must again be reviewed before being added to CRAN\n\n\nCRAN packages can be installed using install.packages(), as we‚Äôve been doing"
  },
  {
    "objectID": "slides/09-packages/packages_slides.html#section",
    "href": "slides/09-packages/packages_slides.html#section",
    "title": "Package management",
    "section": "",
    "text": "pacman package (optional)\n\n\n\n\na package management tool\nwe‚Äôll use the p_load() function to replace install.packages() and library() in our worksflow\n\ntakes a list of packages, and checks if each package is installed already\nif yes, the package is loaded (as with library())\nif no, the package is installed (as with install.packages()) and then loaded (as with library())\n\n\nonly works with CRAN packages (which is all we have for now anyway), although pacman has a function for developer packages (which we‚Äôll talk about later)\n\nTo get started: install pacman (install.packages(\"pacman\")). Then, you can load in your packages using pacman::p_load(), or with a long list of library() calls like we‚Äôve previously done (you see why I prefer p_load()!).\n\n\n\n\n\nLoading packages with `pacman::p_load()`\n\npacman::p_load(tidyverse, here, janitor)\n\n\n\n\n\n\nLoading packages with `library()`\n\nlibrary(tidyverse)\nlibrary(here)\nlibrary(janitor)\n\n\n\n\nThe additional benefit of p_load() is that, if you don‚Äôt actually have one of the packages installed it will automatically be installed and then loaded. With library() you would instead get an error message."
  },
  {
    "objectID": "slides/09-packages/packages_slides.html#developer-packages",
    "href": "slides/09-packages/packages_slides.html#developer-packages",
    "title": "Package management",
    "section": "Developer packages",
    "text": "Developer packages\n\noften hosted on GitHub or GitLab, where packages are typically developed before being reviewed and added to the CRAN\n\nbenefit: you can make whatever you changes to your package that you like without having to pass a review on the CRAN\n\n\nsince CRAN packages are often developed on GH or GL, pre-release (beta) versions will often be available on a GH repo\npackages/package versions on GH cannot be installed via install.packages()\n\nwe‚Äôll see later how to do this"
  },
  {
    "objectID": "slides/09-packages/packages_slides.html#dependencies",
    "href": "slides/09-packages/packages_slides.html#dependencies",
    "title": "Package management",
    "section": "Dependencies",
    "text": "Dependencies\n\nsome packages are dependent on specific versions of other packages\n\nif so, you will be prompted during installation to install these dependencies\nbut beware: sometimes this overwrites an existing package version you already have, which can break code that was written with this older version\n\n\nthis is especially true because, as our projects are currently set up, we have one global package version on our computer\n\nso analyses we ran 3 years ago would‚Äôve used older versions of packages\nwhen we update these packages for current analyses, this might disrupt the code from 3 years ago\n\n\nwe‚Äôll see one (partial) solution for this problem soon"
  },
  {
    "objectID": "slides/09-packages/packages_slides.html#updating-packages",
    "href": "slides/09-packages/packages_slides.html#updating-packages",
    "title": "Package management",
    "section": "Updating packages",
    "text": "Updating packages\n\nto check if a package needs updating, you can:\n\ngo to Tools &gt; Check for package updates, or\nrun update.packages()\n\n\n\neach will tell you which packages can be updated to which versions\n\nand give you the option of updating these packages"
  },
  {
    "objectID": "slides/09-packages/packages_slides.html#package-library",
    "href": "slides/09-packages/packages_slides.html#package-library",
    "title": "Package management",
    "section": "Package library",
    "text": "Package library\n\nwhere do all these installed packages go?\n\na folder that contains all the packages, called a library\n\n\nto find out where this (global) package library is, run .libPaths()\n\n\n\n.libPaths()\n\n\nthe output should currently produce a single file path, something like:\n\n\n&gt; .libPaths()\n[1] \"/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library\"\n\n\nthis is the location of your global package library"
  },
  {
    "objectID": "slides/09-packages/packages_slides.html#package-versions-and-reproducibility",
    "href": "slides/09-packages/packages_slides.html#package-versions-and-reproducibility",
    "title": "Package management",
    "section": "Package versions and reproducibility",
    "text": "Package versions and reproducibility\n\nwe‚Äôve seen that package versions and dependencies can easily break our existing code\nthis means that older projects that were built using previous package versions won‚Äôt be able to run if we update these packages in our global package library\n\nalso a problem in the future: our current code will depend on the package versions we‚Äôre using today\n\n\nwe need a project-relative package library that is independent of the global library\n\nwe‚Äôll use the renv package to do this"
  },
  {
    "objectID": "slides/09-packages/packages_slides.html#limits-of-renv",
    "href": "slides/09-packages/packages_slides.html#limits-of-renv",
    "title": "Package management",
    "section": "Limits of renv\n",
    "text": "Limits of renv\n\nrenv‚Ä¶\n\n\n‚Ä¶can\n\nkeep track of packages and their versions\ncreate a project-specific library per R version\nautomatically load/install these package versions\n\n\n‚Ä¶cannot\n\nmake a project reproducible across all computational environments\nload/install package versions that are incompatible with current R versions or computational environments\nguarantee full long-term reproduciblity"
  },
  {
    "objectID": "slides/09-packages/packages_slides.html#renv-workflow",
    "href": "slides/09-packages/packages_slides.html#renv-workflow",
    "title": "Package management",
    "section": "\nrenv workflow",
    "text": "renv workflow\n\n\nFigure¬†1 visualises a project workflow with renv\n\nnext we‚Äôll see how we use these functions to set-up and maintain a project-specific package library\n\n\n\nFigure¬†1: Source: CRAN vignette ‚ÄòIntroduction to renv‚Äô (all rights reserved)"
  },
  {
    "objectID": "slides/09-packages/packages_slides.html#section-1",
    "href": "slides/09-packages/packages_slides.html#section-1",
    "title": "Package management",
    "section": "",
    "text": "you should see something like this in the Console:\n\n\n- Linking packages into the project library ... [137/137] Done!\n- Resolving missing dependencies ... \n# Installing packages --------------------------------------------------------\nThe following package(s) will be updated in the lockfile:\n\n# CRAN -----------------------------------------------------------------------\n[long list of packages and their versions]\n\nThe version of R recorded in the lockfile will be updated:\n- R               [* -&gt; 4.4.0]\n\n- Lockfile written to \"~/Documents/IdSL/Teaching/SoSe24/M.A./r4repro_student/renv.lock\".\n\nRestarting R session...\n\n- Project '~/Documents/IdSL/Teaching/SoSe24/M.A./r4repro_student' loaded. [renv 1.0.7]"
  },
  {
    "objectID": "slides/09-packages/packages_slides.html#new-files",
    "href": "slides/09-packages/packages_slides.html#new-files",
    "title": "Package management",
    "section": "New files",
    "text": "New files\n\n\nrenv::init() creates three new files or directories\n\nrenv.lock\nrenv/\n.Rprofile\n\n\nexplore these files/folders and see if you can figure out what they contain"
  },
  {
    "objectID": "slides/09-packages/packages_slides.html#renv.lock",
    "href": "slides/09-packages/packages_slides.html#renv.lock",
    "title": "Package management",
    "section": "renv.lock",
    "text": "renv.lock\n\ncontains metadata about the packages and their versions that you have installed\n\nthis is enough metadata to re-install these package versions on a new machine\n\n\ntwo main components:\n\n\nR: info on R version and list of repositories where packages were installed from\n\nPackages: a record per package with necessary info for re-installation"
  },
  {
    "objectID": "slides/09-packages/packages_slides.html#renv-1",
    "href": "slides/09-packages/packages_slides.html#renv-1",
    "title": "Package management",
    "section": "renv/",
    "text": "renv/\n\nimportantly, contains your project-relative library/\n\nthis is instead of using the one library on your computer\n\n\nprovides us with ‚Äúisolation‚Äù: the package versions used in an R Project is independent of the global library\n\nin other words, different R Projects can use different package versions\nupdating packages globally, or in one project, will not affect other project libraries"
  },
  {
    "objectID": "slides/09-packages/packages_slides.html#rprofile",
    "href": "slides/09-packages/packages_slides.html#rprofile",
    "title": "Package management",
    "section": ".RProfile",
    "text": ".RProfile\n\nruns whenver you (re-)start your R Project\nat this point, should contain a single line:\n\n\nsource(\"renv/activate.R\")\n\n\nif you go to this R script, you‚Äôll send a lot of code\n\nthis essentially loads in your project library"
  },
  {
    "objectID": "slides/09-packages/packages_slides.html#project-library",
    "href": "slides/09-packages/packages_slides.html#project-library",
    "title": "Package management",
    "section": "Project library",
    "text": "Project library\n\nnow if we re-run .libPaths(), we should see our project library\n\n\n\n\nRun in the Console\n\n.libPaths()\n\n\n\n&gt; .libPaths()\n[1] \"/Users/danielapalleschi/Documents/IdSL/Teaching/SoSe24/M.A./r4repro_SoSe2024/renv/library/macos/R-4.4/aarch64-apple-darwin20\"\n[2] \"/Users/danielapalleschi/Library/Caches/org.R-project.R/R/renv/sandbox/macos/R-4.4/aarch64-apple-darwin20/f7156815\"  \n\n\n\n[1] is the local project library path\n\n[2] is the path to a global package cache that renv maintains so that you don‚Äôt repeatedly download packages to your machine for each project library\n\ne.g., if we already have ggplot2 installed globally on our machine, whenever we want to add it to a project library we don‚Äôt need to re-install it entirely from the CRAN (unless we want a different package version)"
  },
  {
    "objectID": "slides/09-packages/packages_slides.html#installing-a-new-package",
    "href": "slides/09-packages/packages_slides.html#installing-a-new-package",
    "title": "Package management",
    "section": "Installing a new package",
    "text": "Installing a new package\n\nlet‚Äôs also install a package I‚Äôm confident you don‚Äôt already have on your machine (as you might‚Äôve already worked with lme4 in other classes)\n\n[brms] for Bayesian regression models using Stan\n\n\n\n\nCodeinstall.packages(\"brms\")\nrenv::install(\"brms\")\n\n\n\nand if we want a specific package version:\n\n\nrenv::install(\"brms@2.19.0\")"
  },
  {
    "objectID": "slides/09-packages/packages_slides.html#installing-developer-packages",
    "href": "slides/09-packages/packages_slides.html#installing-developer-packages",
    "title": "Package management",
    "section": "Installing developer packages",
    "text": "Installing developer packages\n\nnot all packages are available on the CRAN\n\nwe can install developer packages from GitHub or GitLab using, e.g., the install_github() function from either the remotes or devtools package (both are very common)\n\n\n\n\nremotes::install_github(\"paul-buerkner/brms\")\ndevtools::install_github(\"paul-buerkner/brms\")\n\n\n\nor we can use renv::install()\n\n\n\n# most recent version\nrenv::install(\"paul-buerkner/brms\")\n\n\n# a specific previous version, for which you'll need the commit ID\nrenv::install(\"paul-buerkner/brms@db6ddde90ba533cb3942bc5a62b03803773b9844\")"
  },
  {
    "objectID": "slides/09-packages/packages_slides.html#updating-renv.lock-file",
    "href": "slides/09-packages/packages_slides.html#updating-renv.lock-file",
    "title": "Package management",
    "section": "Updating renv.lock file",
    "text": "Updating renv.lock file\n\nto update the lockfile and library, simply run:\n\n\nrenv::snapshot()\n\n\nyou‚Äôll be given a list of changes to be made and asked if you want to proceed\n\nif not problems are mentioned, then you can go ahead"
  },
  {
    "objectID": "slides/09-packages/packages.html",
    "href": "slides/09-packages/packages.html",
    "title": "Package management",
    "section": "",
    "text": "to read more on today‚Äôs topic, check out:\nCh. 10 (Basic reprodubility: freezing packages) from Rodrigues (2023)\nthe renv website\n\nor CRAN documentation and vignettes therein (e.g.,: Introduction to renv)",
    "crumbs": [
      "D. Palleschi",
      "Package management"
    ]
  },
  {
    "objectID": "slides/09-packages/packages.html#cran-packages",
    "href": "slides/09-packages/packages.html#cran-packages",
    "title": "Package management",
    "section": "1.1 CRAN packages",
    "text": "1.1 CRAN packages\n\nthe Comprehensive R Archive Network: R‚Äôs central software repository\n\ncurrently 20,888 available!\n\nan archive of the most recent package versions\nfor a package to be included in the CRAN, it must go through a lot of tests and checks\n\nany updates or changes must again be reviewed before being added to CRAN\n\nCRAN packages can be installed using install.packages(), as we‚Äôve been doing\n\n\n\n\n\n\n\npacman package (optional)\n\n\n\n\n\na package management tool\nwe‚Äôll use the p_load() function to replace install.packages() and library() in our worksflow\n\ntakes a list of packages, and checks if each package is installed already\nif yes, the package is loaded (as with library())\nif no, the package is installed (as with install.packages()) and then loaded (as with library())\n\nonly works with CRAN packages (which is all we have for now anyway), although pacman has a function for developer packages (which we‚Äôll talk about later)\n\nTo get started: install pacman (install.packages(\"pacman\")). Then, you can load in your packages using pacman::p_load(), or with a long list of library() calls like we‚Äôve previously done (you see why I prefer p_load()!).\n\n\n\n\n\nLoading packages with `pacman::p_load()`\n\npacman::p_load(tidyverse, here, janitor)\n\n\n\n\n\n\nLoading packages with `library()`\n\nlibrary(tidyverse)\nlibrary(here)\nlibrary(janitor)\n\n\n\n\nThe additional benefit of p_load() is that, if you don‚Äôt actually have one of the packages installed it will automatically be installed and then loaded. With library() you would instead get an error message.",
    "crumbs": [
      "D. Palleschi",
      "Package management"
    ]
  },
  {
    "objectID": "slides/09-packages/packages.html#developer-packages",
    "href": "slides/09-packages/packages.html#developer-packages",
    "title": "Package management",
    "section": "1.2 Developer packages",
    "text": "1.2 Developer packages\n\noften hosted on GitHub or GitLab, where packages are typically developed before being reviewed and added to the CRAN\n\nbenefit: you can make whatever you changes to your package that you like without having to pass a review on the CRAN\n\nsince CRAN packages are often developed on GH or GL, pre-release (beta) versions will often be available on a GH repo\npackages/package versions on GH cannot be installed via install.packages()\n\nwe‚Äôll see later how to do this",
    "crumbs": [
      "D. Palleschi",
      "Package management"
    ]
  },
  {
    "objectID": "slides/09-packages/packages.html#dependencies",
    "href": "slides/09-packages/packages.html#dependencies",
    "title": "Package management",
    "section": "1.3 Dependencies",
    "text": "1.3 Dependencies\n\nsome packages are dependent on specific versions of other packages\n\nif so, you will be prompted during installation to install these dependencies\nbut beware: sometimes this overwrites an existing package version you already have, which can break code that was written with this older version\n\nthis is especially true because, as our projects are currently set up, we have one global package version on our computer\n\nso analyses we ran 3 years ago would‚Äôve used older versions of packages\nwhen we update these packages for current analyses, this might disrupt the code from 3 years ago\n\nwe‚Äôll see one (partial) solution for this problem soon",
    "crumbs": [
      "D. Palleschi",
      "Package management"
    ]
  },
  {
    "objectID": "slides/09-packages/packages.html#updating-packages",
    "href": "slides/09-packages/packages.html#updating-packages",
    "title": "Package management",
    "section": "2.1 Updating packages",
    "text": "2.1 Updating packages\n\nto check if a package needs updating, you can:\n\ngo to Tools &gt; Check for package updates, or\nrun update.packages()\n\neach will tell you which packages can be updated to which versions\n\nand give you the option of updating these packages",
    "crumbs": [
      "D. Palleschi",
      "Package management"
    ]
  },
  {
    "objectID": "slides/09-packages/packages.html#package-library",
    "href": "slides/09-packages/packages.html#package-library",
    "title": "Package management",
    "section": "2.2 Package library",
    "text": "2.2 Package library\n\nwhere do all these installed packages go?\n\na folder that contains all the packages, called a library\n\nto find out where this (global) package library is, run .libPaths()\n\n\n.libPaths()\n\n\nthe output should currently produce a single file path, something like:\n\n\n&gt; .libPaths()\n[1] \"/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library\"\n\n\nthis is the location of your global package library",
    "crumbs": [
      "D. Palleschi",
      "Package management"
    ]
  },
  {
    "objectID": "slides/09-packages/packages.html#package-versions-and-reproducibility",
    "href": "slides/09-packages/packages.html#package-versions-and-reproducibility",
    "title": "Package management",
    "section": "2.3 Package versions and reproducibility",
    "text": "2.3 Package versions and reproducibility\n\nwe‚Äôve seen that package versions and dependencies can easily break our existing code\nthis means that older projects that were built using previous package versions won‚Äôt be able to run if we update these packages in our global package library\n\nalso a problem in the future: our current code will depend on the package versions we‚Äôre using today\n\nwe need a project-relative package library that is independent of the global library\n\nwe‚Äôll use the renv package to do this",
    "crumbs": [
      "D. Palleschi",
      "Package management"
    ]
  },
  {
    "objectID": "slides/09-packages/packages.html#limits-of-renv",
    "href": "slides/09-packages/packages.html#limits-of-renv",
    "title": "Package management",
    "section": "3.1 Limits of renv",
    "text": "3.1 Limits of renv\nrenv‚Ä¶\n\n\n‚Ä¶can\n\nkeep track of packages and their versions\ncreate a project-specific library per R version\nautomatically load/install these package versions\n\n\n‚Ä¶cannot\n\nmake a project reproducible across all computational environments\nload/install package versions that are incompatible with current R versions or computational environments\nguarantee full long-term reproduciblity",
    "crumbs": [
      "D. Palleschi",
      "Package management"
    ]
  },
  {
    "objectID": "slides/09-packages/packages.html#renv-workflow",
    "href": "slides/09-packages/packages.html#renv-workflow",
    "title": "Package management",
    "section": "3.2 renv workflow",
    "text": "3.2 renv workflow\n\nFigure¬†1 visualises a project workflow with renv\nnext we‚Äôll see how we use these functions to set-up and maintain a project-specific package library\n\n\n\n\n\n\n\n\n\nFigure¬†1: Source: CRAN vignette ‚ÄòIntroduction to renv‚Äô (all rights reserved)",
    "crumbs": [
      "D. Palleschi",
      "Package management"
    ]
  },
  {
    "objectID": "slides/09-packages/packages.html#new-files",
    "href": "slides/09-packages/packages.html#new-files",
    "title": "Package management",
    "section": "4.1 New files",
    "text": "4.1 New files\n\nrenv::init() creates three new files or directories\n\nrenv.lock\nrenv/\n.Rprofile\n\nexplore these files/folders and see if you can figure out what they contain",
    "crumbs": [
      "D. Palleschi",
      "Package management"
    ]
  },
  {
    "objectID": "slides/09-packages/packages.html#renv.lock",
    "href": "slides/09-packages/packages.html#renv.lock",
    "title": "Package management",
    "section": "4.2 renv.lock",
    "text": "4.2 renv.lock\n\ncontains metadata about the packages and their versions that you have installed\n\nthis is enough metadata to re-install these package versions on a new machine\n\ntwo main components:\n\nR: info on R version and list of repositories where packages were installed from\nPackages: a record per package with necessary info for re-installation",
    "crumbs": [
      "D. Palleschi",
      "Package management"
    ]
  },
  {
    "objectID": "slides/09-packages/packages.html#renv-1",
    "href": "slides/09-packages/packages.html#renv-1",
    "title": "Package management",
    "section": "4.3 renv/",
    "text": "4.3 renv/\n\nimportantly, contains your project-relative library/\n\nthis is instead of using the one library on your computer\n\nprovides us with ‚Äúisolation‚Äù: the package versions used in an R Project is independent of the global library\n\nin other words, different R Projects can use different package versions\nupdating packages globally, or in one project, will not affect other project libraries",
    "crumbs": [
      "D. Palleschi",
      "Package management"
    ]
  },
  {
    "objectID": "slides/09-packages/packages.html#rprofile",
    "href": "slides/09-packages/packages.html#rprofile",
    "title": "Package management",
    "section": "4.4 .RProfile",
    "text": "4.4 .RProfile\n\nruns whenver you (re-)start your R Project\nat this point, should contain a single line:\n\n\nsource(\"renv/activate.R\")\n\n\nif you go to this R script, you‚Äôll send a lot of code\n\nthis essentially loads in your project library",
    "crumbs": [
      "D. Palleschi",
      "Package management"
    ]
  },
  {
    "objectID": "slides/09-packages/packages.html#project-library",
    "href": "slides/09-packages/packages.html#project-library",
    "title": "Package management",
    "section": "4.5 Project library",
    "text": "4.5 Project library\n\nnow if we re-run .libPaths(), we should see our project library\n\n\n\n\nRun in the Console\n\n.libPaths()\n\n\n\n&gt; .libPaths()\n[1] \"/Users/danielapalleschi/Documents/IdSL/Teaching/SoSe24/M.A./r4repro_SoSe2024/renv/library/macos/R-4.4/aarch64-apple-darwin20\"\n[2] \"/Users/danielapalleschi/Library/Caches/org.R-project.R/R/renv/sandbox/macos/R-4.4/aarch64-apple-darwin20/f7156815\"  \n\n\n[1] is the local project library path\n[2] is the path to a global package cache that renv maintains so that you don‚Äôt repeatedly download packages to your machine for each project library\n\ne.g., if we already have ggplot2 installed globally on our machine, whenever we want to add it to a project library we don‚Äôt need to re-install it entirely from the CRAN (unless we want a different package version)",
    "crumbs": [
      "D. Palleschi",
      "Package management"
    ]
  },
  {
    "objectID": "slides/09-packages/packages.html#installing-a-new-package",
    "href": "slides/09-packages/packages.html#installing-a-new-package",
    "title": "Package management",
    "section": "5.1 Installing a new package",
    "text": "5.1 Installing a new package\n\nlet‚Äôs also install a package I‚Äôm confident you don‚Äôt already have on your machine (as you might‚Äôve already worked with lme4 in other classes)\n\n[brms] for Bayesian regression models using Stan\n\n\n\n\nCode\ninstall.packages(\"brms\")\nrenv::install(\"brms\")\n\n\n\nand if we want a specific package version:\n\n\nrenv::install(\"brms@2.19.0\")",
    "crumbs": [
      "D. Palleschi",
      "Package management"
    ]
  },
  {
    "objectID": "slides/09-packages/packages.html#installing-developer-packages",
    "href": "slides/09-packages/packages.html#installing-developer-packages",
    "title": "Package management",
    "section": "5.2 Installing developer packages",
    "text": "5.2 Installing developer packages\n\nnot all packages are available on the CRAN\n\nwe can install developer packages from GitHub or GitLab using, e.g., the install_github() function from either the remotes or devtools package (both are very common)\n\n\n\nremotes::install_github(\"paul-buerkner/brms\")\ndevtools::install_github(\"paul-buerkner/brms\")\n\n\nor we can use renv::install()\n\n\n# most recent version\nrenv::install(\"paul-buerkner/brms\")\n\n\n# a specific previous version, for which you'll need the commit ID\nrenv::install(\"paul-buerkner/brms@db6ddde90ba533cb3942bc5a62b03803773b9844\")",
    "crumbs": [
      "D. Palleschi",
      "Package management"
    ]
  },
  {
    "objectID": "slides/09-packages/packages.html#updating-renv.lock-file",
    "href": "slides/09-packages/packages.html#updating-renv.lock-file",
    "title": "Package management",
    "section": "6.1 Updating renv.lock file",
    "text": "6.1 Updating renv.lock file\n\nto update the lockfile and library, simply run:\n\n\nrenv::snapshot()\n\n\nyou‚Äôll be given a list of changes to be made and asked if you want to proceed\n\nif not problems are mentioned, then you can go ahead",
    "crumbs": [
      "D. Palleschi",
      "Package management"
    ]
  },
  {
    "objectID": "slides/08-data_viz/sheet-data_viz.html",
    "href": "slides/08-data_viz/sheet-data_viz.html",
    "title": "Data Visualisation with ggplot2",
    "section": "",
    "text": "visualise variable distributions\nvisualise summary statistics\nsave figures as rds or as figures",
    "crumbs": [
      "D. Palleschi",
      "Data Visualisation with `ggplot2`"
    ]
  },
  {
    "objectID": "slides/08-data_viz/sheet-data_viz.html#summary-of-first-fixation-times",
    "href": "slides/08-data_viz/sheet-data_viz.html#summary-of-first-fixation-times",
    "title": "Data Visualisation with ggplot2",
    "section": "2.1 Summary of first-fixation times",
    "text": "2.1 Summary of first-fixation times\n\nthis code is from the previous topic\n\n\n# compute summary \nsummary_ff &lt;- df_lifetime |&gt; \n  filter(region==\"verb\") |&gt; \n  group_by(condition, lifetime, tense) %&gt;%\n  summarise(N = n(),\n            mean.ff = mean(ff, na.rm = T),\n            sd = sd(ff, na.rm = T)) %&gt;%\n  # compute standard error, confidence intervals, and lower/upper ci bounds\n  mutate(se = sd / sqrt(N),\n         ci = qt(1 - (0.05 / 2), N - 1) * se,\n         lower.ci = mean.ff - qt(1 - (0.05 / 2), N - 1) * se,\n         upper.ci = mean.ff + qt(1 - (0.05 / 2), N - 1) * se) |&gt; \n  ungroup()",
    "crumbs": [
      "D. Palleschi",
      "Data Visualisation with `ggplot2`"
    ]
  },
  {
    "objectID": "slides/08-data_viz/sheet-data_viz.html#start-layering",
    "href": "slides/08-data_viz/sheet-data_viz.html#start-layering",
    "title": "Data Visualisation with ggplot2",
    "section": "5.1 Start layering",
    "text": "5.1 Start layering\n\ndf_lifetime |&gt; ggplot(aes(ff)) # aes = 'aesthetic'",
    "crumbs": [
      "D. Palleschi",
      "Data Visualisation with `ggplot2`"
    ]
  },
  {
    "objectID": "slides/08-data_viz/sheet-data_viz.html#add-labels",
    "href": "slides/08-data_viz/sheet-data_viz.html#add-labels",
    "title": "Data Visualisation with ggplot2",
    "section": "5.2 Add labels",
    "text": "5.2 Add labels\n\ndf_lifetime |&gt; ggplot(aes(ff)) + \n  labs(title = \"Histogram of first fixation times\",\n       x = \"First fixation times (ms)\")",
    "crumbs": [
      "D. Palleschi",
      "Data Visualisation with `ggplot2`"
    ]
  },
  {
    "objectID": "slides/08-data_viz/sheet-data_viz.html#add",
    "href": "slides/08-data_viz/sheet-data_viz.html#add",
    "title": "Data Visualisation with ggplot2",
    "section": "5.3 Add",
    "text": "5.3 Add\n\ndf_lifetime |&gt; ggplot(aes(ff)) + \n  labs(title = \"Histogram of first fixataion times\",\n       x = \"First fixation times (ms)\") +\n  geom_histogram()\n\n\n\n\nDistribution of first fixation times at the verb region (raw milliseconds)",
    "crumbs": [
      "D. Palleschi",
      "Data Visualisation with `ggplot2`"
    ]
  },
  {
    "objectID": "slides/08-data_viz/sheet-data_viz.html#add-condition",
    "href": "slides/08-data_viz/sheet-data_viz.html#add-condition",
    "title": "Data Visualisation with ggplot2",
    "section": "5.4 Add condition",
    "text": "5.4 Add condition\n\ndf_lifetime |&gt; ggplot(aes(ff, fill = condition)) + \n  labs(title = \"First fixataion times at the verb region\",\n       x = \"First fixation times (ms)\") +\n  geom_histogram()\n\n\n\n\nDistribution of first fixation times at the verb region (raw milliseconds)\n\n\n\n\n\nThe colour here is STACKED!! i.e., not layered. Notice the distribution doesn‚Äôt change from all grey to coloured",
    "crumbs": [
      "D. Palleschi",
      "Data Visualisation with `ggplot2`"
    ]
  },
  {
    "objectID": "slides/08-data_viz/sheet-data_viz.html#customisation",
    "href": "slides/08-data_viz/sheet-data_viz.html#customisation",
    "title": "Data Visualisation with ggplot2",
    "section": "5.5 Customisation",
    "text": "5.5 Customisation\n\nwe can add arguments to our geoms\n\ne.g., transparency: alpha = takes a value between 0 to 1\n\nwe can use theme() to customise font sizes, legend placement, etc.\ntehre are also popular preset themes, such as theme_bw() and theme_minimal()\n\n\ntheme_bw()theme_minimal()\n\n\n\ndf_lifetime |&gt; ggplot(aes(ff, fill = condition)) + \n  labs(title = \"Histogram of first fixataion times\",\n       x = \"First fixation times (ms)\") +\n  geom_histogram(alpha=.5) +\n  theme_bw()\n\n\n\n\nDistribution of first fixation times at the verb region (raw milliseconds).\n\n\n\n\n\n\n\ndf_lifetime |&gt; ggplot(aes(ff, fill = condition)) + \n  labs(title = \"Histogram of first fixataion times\",\n       x = \"First fixation times (ms)\") +\n  geom_histogram(alpha=.5) +\n  theme_minimal()\n\n\n\n\nDistribution of first fixation times at the verb region (raw milliseconds).",
    "crumbs": [
      "D. Palleschi",
      "Data Visualisation with `ggplot2`"
    ]
  },
  {
    "objectID": "slides/08-data_viz/sheet-data_viz.html#density-plots",
    "href": "slides/08-data_viz/sheet-data_viz.html#density-plots",
    "title": "Data Visualisation with ggplot2",
    "section": "6.1 Density plots",
    "text": "6.1 Density plots\n\nbelow I just replaced geom_histogram() with geom_density()\n\nI also filtered the data to include only values of ff above 0\n\nwhat is plotted along the y-axis? how does this differ from a histogram?\n\n\ndf_lifetime |&gt; \n  filter(ff &gt; 0) |&gt; \n  ggplot(aes(ff)) + \n  labs(title = \"Histogram of first fixataion times\",\n       x = \"First fixation times (ms)\") +\n  geom_density() +\n  theme_minimal()\n\n\n\n\nDistribution of first fixation times at the verb region (raw milliseconds).",
    "crumbs": [
      "D. Palleschi",
      "Data Visualisation with `ggplot2`"
    ]
  },
  {
    "objectID": "slides/08-data_viz/sheet-data_viz.html#grouped-density-plots",
    "href": "slides/08-data_viz/sheet-data_viz.html#grouped-density-plots",
    "title": "Data Visualisation with ggplot2",
    "section": "6.2 Grouped density plots",
    "text": "6.2 Grouped density plots\n\njust like with histograms, we can look at the density plots of different subsets of the data with aes(fill = )\n\nlike region\n\n\n\ndf_lifetime |&gt; \n  filter(ff &gt; 0) |&gt; \n  ggplot(aes(ff, fill = region)) + \n  labs(title = \"Histogram of first fixataion times\",\n       x = \"First fixation times (ms)\") +\n  geom_density(alpha=.5) +\n  theme_minimal()\n\n\n\n\nDistribution of first fixation times at the verb region (raw milliseconds).\n\n\n\n\n\n6.2.1 facet_grid()\n\nthere are a lot of overlapping density curves, let‚Äôs try to separate them with facet_grid(x~y)\n\n\ndf_lifetime |&gt; \n  filter(ff &gt; 0) |&gt; \n  ggplot(aes(ff, fill = region)) + \n  facet_grid(.~region) +\n  labs(title = \"Density plot of first fixataion times by region\",\n       x = \"First fixation times (ms)\") +\n  geom_density(alpha=.5) +\n  theme_bw()\n\n\n\n\nDistribution of first fixation times at the verb region (raw milliseconds).\n\n\n\n\n\nhow would you describe the density plots of the different regions?\n\n\n\n6.2.2 re-ordering factors\n\nby default, factors will be ordered alphabetically\n\nbut we don‚Äôt always want that\nhere, verb-1 should be before verb\n\n\n\ndf_lifetime &lt;- df_lifetime %&gt;%\n  mutate(region = factor(region, \n                         levels = c(\"verb-1\",\"verb\",\"verb+1\",\"verb+2\",\"verb+3\",\"verb+4\")))\n\nsummary(df_lifetime$region)\n\nverb-1   verb verb+1 verb+2 verb+3 verb+4 \n   559    559    559    559    559    182 \n\n\n\n6.2.2.1 Exercise\n\ncreate a density plot with the fill colour set to condition, but:\n\n\nsubset the data to only include the verb region\nyou can decide if you want to use facets or to have the density curves overlayed\nyour plot should look something like A or B:\n\n\n\n\n\n\n\n\n\n\n\n\n6.2.2.2 Extra exercise\n\nCan you produce these plots?",
    "crumbs": [
      "D. Palleschi",
      "Data Visualisation with `ggplot2`"
    ]
  },
  {
    "objectID": "slides/08-data_viz/sheet-data_viz.html#scatterplots",
    "href": "slides/08-data_viz/sheet-data_viz.html#scatterplots",
    "title": "Data Visualisation with ggplot2",
    "section": "6.3 Scatterplots",
    "text": "6.3 Scatterplots\n\nhistograms and density plots plot a single variable along the x-axis\n\nin most other plots the dependent (measure) variable is plotted along the y-axis by convention\n\nscatterplots plot the relationship between two variables\n\n\niris |&gt; \n  ggplot(aes(x=Sepal.Length, y=Sepal.Width)) +\n  geom_point() +\n  labs(title = \"A scatterplot\",\n       x = \"variable X\",\n       y = \"variable Y\")\n\n\n\n\n\n\n\n\n\n6.3.1 Scatterplots\n\nthe figure below plots total reading times (verb region) to the verb region (x-axis) and reaction times to the critical sentence (y-axis)\n\nwhat does each point represent?\nhow would you describe the relationship between the two variables?\n\n\n\ndf_lifetime |&gt;\n  filter(ff &gt; 0,\n         region == \"verb\") |&gt;\n  ggplot(aes(x = tt, y = rt)) +\n  labs(title = \"Scatter plot of total reading times (verb region)\nand reaction times (critical sentence)\",\n       x = \"Total reading time (ms)\",\n       y = \"Reaction time (ms)\") +\n  geom_point(alpha = .2) +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n6.3.1.1 Exercise\n\nGenerate a scatterplot of total reading times and reaction times, with:\n\ncolour and shape set to condition\ntip: these both belong in aes()\n\nWhat information does this plot suggest?",
    "crumbs": [
      "D. Palleschi",
      "Data Visualisation with `ggplot2`"
    ]
  },
  {
    "objectID": "slides/08-data_viz/sheet-data_viz.html#bar-plot",
    "href": "slides/08-data_viz/sheet-data_viz.html#bar-plot",
    "title": "Data Visualisation with ggplot2",
    "section": "6.4 Bar plot",
    "text": "6.4 Bar plot\n\n\n\nshow the distribution of categorical factor levels\n\ni.e., the frequency of observations per level\n\nbe sure to read in accept as a factor!\n\n\n\n\nCode\ndf_lifetime |&gt; \n  distinct(px,trial,.keep_all=T) |&gt; \n  ggplot(aes(x = as.factor(accept) )) +\n  geom_bar() +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndf_lifetime |&gt; \n  distinct(px,trial,.keep_all=T) |&gt; \n  ggplot(aes(x = as.factor(accept), fill = condition)) +\n  labs(title = \"Binary responses\",\n       x = \"Naturalness response\",\n       fill = \"Condition\") +\n  geom_bar() +\n  theme_bw()",
    "crumbs": [
      "D. Palleschi",
      "Data Visualisation with `ggplot2`"
    ]
  },
  {
    "objectID": "slides/08-data_viz/sheet-data_viz.html#grouped-bar-plots",
    "href": "slides/08-data_viz/sheet-data_viz.html#grouped-bar-plots",
    "title": "Data Visualisation with ggplot2",
    "section": "6.5 Grouped bar plots",
    "text": "6.5 Grouped bar plots\n\ndf_lifetime |&gt; \n  distinct(px,trial,.keep_all=T) |&gt; \n  ggplot(aes(x = as.factor(accept), fill = condition)) +\n  labs(title = \"Binary responses\",\n       x = \"Naturalness response\",\n       fill = \"Condition\") +\n  geom_bar(position = \"dodge\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n6.5.1 Exercise\n\nGenerate a grouped bar plot (i.e., dodge) with:\n\na facet grid for tense\nplots lifetime on the x-axis\nand fills the bars based on accept\nchange the labels accordingly\ncustomise as you like\n\n\n\ndf_lifetime |&gt; \n  distinct(px,trial,.keep_all=T) |&gt; \n  ggplot(aes(x = lifetime, fill = as.factor(accept))) +\n  facet_grid(.~tense) +\n  labs(title = \"Binary responses\",\n       x = \"Lifetime\",\n       fill = \"Response\") +\n  geom_bar(position = \"dodge\") +\n  theme_bw()",
    "crumbs": [
      "D. Palleschi",
      "Data Visualisation with `ggplot2`"
    ]
  },
  {
    "objectID": "slides/08-data_viz/sheet-data_viz.html#grouped-bar-plots-1",
    "href": "slides/08-data_viz/sheet-data_viz.html#grouped-bar-plots-1",
    "title": "Data Visualisation with ggplot2",
    "section": "6.6 Grouped bar plots",
    "text": "6.6 Grouped bar plots\n\ndf_lifetime |&gt; \n  distinct(px,trial,.keep_all=T) |&gt; \n  ggplot(aes(x = lifetime, fill = as.factor(accept))) +\n  facet_grid(.~tense) +\n  labs(title = \"Grouped and faceted barplot\",\n       x = \"Lifetime\",\n       fill = \"Response\") +\n  geom_bar(position = \"dodge\") +\n  theme_bw()",
    "crumbs": [
      "D. Palleschi",
      "Data Visualisation with `ggplot2`"
    ]
  },
  {
    "objectID": "slides/08-data_viz/sheet-data_viz.html#stacked-bar-plots",
    "href": "slides/08-data_viz/sheet-data_viz.html#stacked-bar-plots",
    "title": "Data Visualisation with ggplot2",
    "section": "6.7 Stacked bar plots",
    "text": "6.7 Stacked bar plots\n\ndf_lifetime |&gt; \n  distinct(px,trial,.keep_all=T) |&gt; \n  ggplot(aes(x = lifetime, fill = as.factor(accept))) +\n  facet_grid(.~tense) +\n  labs(title = \"Stacked and faceted barplot\",\n       x = \"Lifetime\",\n       fill = \"Response\") +\n  geom_bar(position = \"stack\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n6.7.1 Exercise\n\nChoose the barplot you like best for binary data\nReproduce that barplot, but with reg_in at the verb1 region\n\n\n\n\n\n\n\n\n\n\n\n\n6.7.2 Extra exercise\n\nCreate another bar plot, but for reg_out for all sentence regions\nUse facet_grid()\n\n\nto have facets by region (columns) and by tense (in 2 rows)",
    "crumbs": [
      "D. Palleschi",
      "Data Visualisation with `ggplot2`"
    ]
  },
  {
    "objectID": "slides/08-data_viz/sheet-data_viz.html#boxplots",
    "href": "slides/08-data_viz/sheet-data_viz.html#boxplots",
    "title": "Data Visualisation with ggplot2",
    "section": "7.1 Boxplots",
    "text": "7.1 Boxplots\n\nboxplots provide information about the distribution of a continuous variable\n\nbut includes information like median (dark line) and quartiles (box and whiskers)\nand outliers (dots)\n\nlike scatterplots, require x and y variables\n\nbut one of them needs to be categorical",
    "crumbs": [
      "D. Palleschi",
      "Data Visualisation with `ggplot2`"
    ]
  },
  {
    "objectID": "slides/08-data_viz/sheet-data_viz.html#section",
    "href": "slides/08-data_viz/sheet-data_viz.html#section",
    "title": "Data Visualisation with ggplot2",
    "section": "7.2 ",
    "text": "7.2 \n\niris |&gt; \n  ggplot(aes(x = Species, y = Sepal.Length)) +\n  labs(title = \"A scatterplot\",\n       x = \"Categorical variable\",\n       y = \"Continuous variable\") +\n  geom_boxplot()\n\n\n\n\nA scatterplot. Median (50th percentile): thick black lines; interquartile range (IQR; 25th and 75th percentile): box limits; minimum (0th percentile) and maximum (100th percentile) excluding outliers: : whiskers; outliers: points",
    "crumbs": [
      "D. Palleschi",
      "Data Visualisation with `ggplot2`"
    ]
  },
  {
    "objectID": "slides/08-data_viz/sheet-data_viz.html#boxplot-explained",
    "href": "slides/08-data_viz/sheet-data_viz.html#boxplot-explained",
    "title": "Data Visualisation with ggplot2",
    "section": "7.3 Boxplot explained",
    "text": "7.3 Boxplot explained\n\n\n\n\n\nImage source: Winter (2019) (all rights reserved)",
    "crumbs": [
      "D. Palleschi",
      "Data Visualisation with `ggplot2`"
    ]
  },
  {
    "objectID": "slides/08-data_viz/sheet-data_viz.html#boxplots-1",
    "href": "slides/08-data_viz/sheet-data_viz.html#boxplots-1",
    "title": "Data Visualisation with ggplot2",
    "section": "7.4 Boxplots",
    "text": "7.4 Boxplots\n\nlet‚Äôs change our scatterplot to a boxplot\n\n\ndf_lifetime |&gt;\n  filter(ff &gt; 0,\n         region == \"verb\") |&gt;\n  ggplot(aes(x = tense, y = ff)) +\n  labs(title = \"First-fixation duration (verb region)\",\n       x = \"Tense\",\n       y = \"First-fixation duration (ms)\") +\n  geom_boxplot(alpha = .2) +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n7.4.1 Grouped boxplots\n\ndf_lifetime |&gt;\n  filter(ff &gt; 0,\n         region == \"verb\") |&gt;\n  ggplot(aes(x = tense, y = ff, colour = lifetime)) +\n  labs(title = \"First-fixation duration (verb region)\",\n       x = \"Tense\",\n       y = \"First-fixation duration (ms)\") +\n  geom_boxplot(alpha = .2) +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n7.4.1.1 Exercise\n\nCreate a group boxplot (x = tense, fill = lifetime) for\n\n\nfirst-pass reading time (verb region)\nregression path duration (verb region)\ntotal reading time (verb region)\nreaction times (use the distinct() verb to have a single observation per participant and per trial)",
    "crumbs": [
      "D. Palleschi",
      "Data Visualisation with `ggplot2`"
    ]
  },
  {
    "objectID": "slides/08-data_viz/sheet-data_viz.html#interaction-plots",
    "href": "slides/08-data_viz/sheet-data_viz.html#interaction-plots",
    "title": "Data Visualisation with ggplot2",
    "section": "7.5 Interaction plots",
    "text": "7.5 Interaction plots\n\ncommon for factorial designs, i.e., comparing categorical predictors\nthere are 2 ways of producing them:\n\nwith your data frame and stat_summary()\nor with a summary table and ggplot geoms geom_point(), geom_errorbar(), and geom_line()\n\nwe‚Äôll need our summary table to plot an interaction plot\n\n\n\n\n\n\n\ncondition\nlifetime\ntense\nN\nmean.ff\nsd\nse\nci\nlower.ci\nupper.ci\n\n\n\n\ndeadPP\ndead\nPP\n140\n198.9\n57.9\n4.9\n9.7\n189.2\n208.6\n\n\ndeadSF\ndead\nSF\n139\n194.6\n67.9\n5.8\n11.4\n183.2\n205.9\n\n\nlivingPP\nliving\nPP\n140\n194.2\n77.3\n6.5\n12.9\n181.3\n207.1\n\n\nlivingSF\nliving\nSF\n140\n186.0\n57.6\n4.9\n9.6\n176.4\n195.6\n\n\n\n\n\n\n\n\n\n\nCode\nlibrary(patchwork)\n\ndf_lifetime |&gt; \n  filter(region == \"verb\") |&gt; \n  ggplot(aes(x = lifetime, y = ff, \n                     shape = tense,\n                     group = tense,\n                     color = tense)) +\n  labs(title=\"Interaction plot (`stat_summary()`)\",\n       x = \"Lifetime\",\n       y = \"First fix (ms)\",\n       shape = \"Tense\", group = \"Tense\", color = \"Tense\", linetype = \"Tense\") +\n  stat_summary(fun = \"mean\", geom = \"point\", size = 3, position = position_dodge(0.2)) +\n  stat_summary(fun = \"mean\", geom = \"line\", position = position_dodge(0.2), aes(linetype=tense)) +\n  stat_summary(fun.data = \"mean_cl_normal\", geom = \"errorbar\", width = .2\n               , position = position_dodge(0.2)) +\n  theme_bw() +\n  \nsummary_ff |&gt; \n  ggplot(aes(x = lifetime, y = mean.ff, \n                     shape = tense,\n                     group = tense,\n                     color = tense)) +\n  labs(title=\"Interaction plot (geoms)\",\n       x = \"Lifetime\",\n       y = \"First fix (ms)\",\n       shape = \"Tense\", group = \"Tense\", color = \"Tense\", linetype = \"Tense\") +\n  geom_point(size = 3,\n                position = position_dodge(0.2)) +\n  geom_line(aes(linetype=tense), position = position_dodge(0.2)) +\n  geom_errorbar(aes(ymin = mean.ff - ci,\n                    ymax = mean.ff + ci),\n                width = .2,\n                position = position_dodge(0.2)) +\n  theme_bw() +\n  plot_annotation(tag_levels = \"A\") +\n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\nFigure¬†1: Identical interaction plots produced two ways: feeding a dataset into ggplot() and using stat_summary() (A) or feeding a summary table into ggplot() and using geoms (B)",
    "crumbs": [
      "D. Palleschi",
      "Data Visualisation with `ggplot2`"
    ]
  },
  {
    "objectID": "slides/08-data_viz/sheet-data_viz.html#ggsave",
    "href": "slides/08-data_viz/sheet-data_viz.html#ggsave",
    "title": "Data Visualisation with ggplot2",
    "section": "9.1 ggsave()",
    "text": "9.1 ggsave()\n\nthe ggsave() function is useful for saving ggplot objects\n\nwe first have to save one of our figures as an object\nI usually save ggplot objects with the prefix fig_ (short for figure)\n\nmake sure you also have a useful place to store these figures\n\ne.g., a folder called figures\n\n\n\n\nCode\nfig_lifetime_ff &lt;-\nsummary_ff |&gt; \n  ggplot(aes(x = lifetime, y = mean.ff, \n                     shape = tense,\n                     group = tense,\n                     color = tense)) +\n  labs(title=\"Mean first-fixation times (verb region) with 95% CIs\",\n       x = \"Lifetime\",\n       y = \"First fix (ms)\",\n       shape = \"Tense\", group = \"Tense\", color = \"Tense\", linetype = \"Tense\") +\n  geom_point(size = 3,\n                position = position_dodge(0.2)) +\n  geom_line(aes(linetype=tense), position = position_dodge(0.2)) +\n  geom_errorbar(aes(ymin = mean.ff - ci,\n                    ymax = mean.ff + ci),\n                width = .2,\n                position = position_dodge(0.2)) +\n  theme_bw()\n\n\n\nggsave(fig_lifetime_ff, filename = here(\"figures\", \"fig_lifetime_ff.png\"))\n\n\nggsave() has lots of arguments to control width, height, resolution, etc.\n\nto see more, run ?ggsave in the Console\n\nyou can also save as JPG/JPEG, SVG, even PDF by just changing the filename extension",
    "crumbs": [
      "D. Palleschi",
      "Data Visualisation with `ggplot2`"
    ]
  },
  {
    "objectID": "slides/08-data_viz/sheet-data_viz.html#saverds",
    "href": "slides/08-data_viz/sheet-data_viz.html#saverds",
    "title": "Data Visualisation with ggplot2",
    "section": "9.2 saveRDS()",
    "text": "9.2 saveRDS()\n\nwe can also save the figure as R code\n\nwhich means we can control the width, height, resolution, etc. later on when we load it in\nuseful if you‚Äôll be writing up your results in R markdown or Quarto\n\n\n\nsaveRDS(fig_lifetime_ff, file = here(\"figures\", \"fig_lifetime_ff.rds\"))",
    "crumbs": [
      "D. Palleschi",
      "Data Visualisation with `ggplot2`"
    ]
  },
  {
    "objectID": "slides/08-data_viz/sheet-data_viz.html#readrds",
    "href": "slides/08-data_viz/sheet-data_viz.html#readrds",
    "title": "Data Visualisation with ggplot2",
    "section": "9.3 readRDS()",
    "text": "9.3 readRDS()\n\nyou can‚Äôt click on the file to view the figure because it‚Äôs R code\n\nyou‚Äôd need to load the data into R again\n\n\n\nfig_lifetime_ff &lt;- readRDS(here(\"figures\", \"fig_lifetime_ff.rds\"))",
    "crumbs": [
      "D. Palleschi",
      "Data Visualisation with `ggplot2`"
    ]
  },
  {
    "objectID": "slides/08-data_viz/sheet-data_viz.html#section-1",
    "href": "slides/08-data_viz/sheet-data_viz.html#section-1",
    "title": "Data Visualisation with ggplot2",
    "section": "9.4 ",
    "text": "9.4 \n\n\n\n\n\n\nNaming files and saving code\n\n\n\nYou‚Äôll notice I saved the PNG and RDS files using the same name that the I used for the figure in my script. This is an important point: I want to be able to traceback my figures from the code so I can easily track them. It also helps encourage informative object and file names.\nOf course, saving the code used to save the files in our scripts is also useful because we can easily adjust the saved files (e.g., change figure width or height)",
    "crumbs": [
      "D. Palleschi",
      "Data Visualisation with `ggplot2`"
    ]
  },
  {
    "objectID": "slides/08-data_viz/slides-data_viz.html#summary-of-first-fixation-times",
    "href": "slides/08-data_viz/slides-data_viz.html#summary-of-first-fixation-times",
    "title": "Data Visualisation with ggplot2\n",
    "section": "Summary of first-fixation times",
    "text": "Summary of first-fixation times\n\nthis code is from the previous topic\n\n\n# compute summary \nsummary_ff &lt;- df_lifetime |&gt; \n  filter(region==\"verb\") |&gt; \n  group_by(condition, lifetime, tense) %&gt;%\n  summarise(N = n(),\n            mean.ff = mean(ff, na.rm = T),\n            sd = sd(ff, na.rm = T)) %&gt;%\n  # compute standard error, confidence intervals, and lower/upper ci bounds\n  mutate(se = sd / sqrt(N),\n         ci = qt(1 - (0.05 / 2), N - 1) * se,\n         lower.ci = mean.ff - qt(1 - (0.05 / 2), N - 1) * se,\n         upper.ci = mean.ff + qt(1 - (0.05 / 2), N - 1) * se) |&gt; \n  ungroup()"
  },
  {
    "objectID": "slides/08-data_viz/slides-data_viz.html#start-layering",
    "href": "slides/08-data_viz/slides-data_viz.html#start-layering",
    "title": "Data Visualisation with ggplot2\n",
    "section": "Start layering",
    "text": "Start layering\n\n\ndf_lifetime |&gt; ggplot(aes(ff)) # aes = 'aesthetic'"
  },
  {
    "objectID": "slides/08-data_viz/slides-data_viz.html#add-labels",
    "href": "slides/08-data_viz/slides-data_viz.html#add-labels",
    "title": "Data Visualisation with ggplot2\n",
    "section": "Add labels",
    "text": "Add labels\n\n\ndf_lifetime |&gt; ggplot(aes(ff)) + \n  labs(title = \"Histogram of first fixation times\",\n       x = \"First fixation times (ms)\")"
  },
  {
    "objectID": "slides/08-data_viz/slides-data_viz.html#add",
    "href": "slides/08-data_viz/slides-data_viz.html#add",
    "title": "Data Visualisation with ggplot2\n",
    "section": "Add",
    "text": "Add\n\n\ndf_lifetime |&gt; ggplot(aes(ff)) + \n  labs(title = \"Histogram of first fixataion times\",\n       x = \"First fixation times (ms)\") +\n  geom_histogram()\n\n\n\nDistribution of first fixation times at the verb region (raw milliseconds)"
  },
  {
    "objectID": "slides/08-data_viz/slides-data_viz.html#add-condition",
    "href": "slides/08-data_viz/slides-data_viz.html#add-condition",
    "title": "Data Visualisation with ggplot2\n",
    "section": "Add condition",
    "text": "Add condition\n\n\ndf_lifetime |&gt; ggplot(aes(ff, fill = condition)) + \n  labs(title = \"First fixataion times at the verb region\",\n       x = \"First fixation times (ms)\") +\n  geom_histogram()\n\n\n\nDistribution of first fixation times at the verb region (raw milliseconds)\n\n\n\n\n\nThe colour here is STACKED!! i.e., not layered. Notice the distribution doesn‚Äôt change from all grey to coloured"
  },
  {
    "objectID": "slides/08-data_viz/slides-data_viz.html#customisation",
    "href": "slides/08-data_viz/slides-data_viz.html#customisation",
    "title": "Data Visualisation with ggplot2\n",
    "section": "Customisation",
    "text": "Customisation\n\nwe can add arguments to our geoms\n\ne.g., transparency: alpha = takes a value between 0 to 1\n\n\nwe can use theme() to customise font sizes, legend placement, etc.\ntehre are also popular preset themes, such as theme_bw() and theme_minimal()\n\n\n\n\ntheme_bw()\ntheme_minimal()\n\n\n\n\n\ndf_lifetime |&gt; ggplot(aes(ff, fill = condition)) + \n  labs(title = \"Histogram of first fixataion times\",\n       x = \"First fixation times (ms)\") +\n  geom_histogram(alpha=.5) +\n  theme_bw()\n\n\n\nDistribution of first fixation times at the verb region (raw milliseconds).\n\n\n\n\n\n\n\n\n\ndf_lifetime |&gt; ggplot(aes(ff, fill = condition)) + \n  labs(title = \"Histogram of first fixataion times\",\n       x = \"First fixation times (ms)\") +\n  geom_histogram(alpha=.5) +\n  theme_minimal()\n\n\n\nDistribution of first fixation times at the verb region (raw milliseconds)."
  },
  {
    "objectID": "slides/08-data_viz/slides-data_viz.html#density-plots",
    "href": "slides/08-data_viz/slides-data_viz.html#density-plots",
    "title": "Data Visualisation with ggplot2\n",
    "section": "Density plots",
    "text": "Density plots\n\nbelow I just replaced geom_histogram() with geom_density()\n\nI also filtered the data to include only values of ff above 0\n\n\nwhat is plotted along the y-axis? how does this differ from a histogram?\n\n\n\ndf_lifetime |&gt; \n  filter(ff &gt; 0) |&gt; \n  ggplot(aes(ff)) + \n  labs(title = \"Histogram of first fixataion times\",\n       x = \"First fixation times (ms)\") +\n  geom_density() +\n  theme_minimal()\n\n\n\n\nDistribution of first fixation times at the verb region (raw milliseconds)."
  },
  {
    "objectID": "slides/08-data_viz/slides-data_viz.html#grouped-density-plots",
    "href": "slides/08-data_viz/slides-data_viz.html#grouped-density-plots",
    "title": "Data Visualisation with ggplot2\n",
    "section": "Grouped density plots",
    "text": "Grouped density plots\n\njust like with histograms, we can look at the density plots of different subsets of the data with aes(fill = )\n\nlike region\n\n\n\n\n\ndf_lifetime |&gt; \n  filter(ff &gt; 0) |&gt; \n  ggplot(aes(ff, fill = region)) + \n  labs(title = \"Histogram of first fixataion times\",\n       x = \"First fixation times (ms)\") +\n  geom_density(alpha=.5) +\n  theme_minimal()\n\n\n\n\nDistribution of first fixation times at the verb region (raw milliseconds)."
  },
  {
    "objectID": "slides/08-data_viz/slides-data_viz.html#scatterplots",
    "href": "slides/08-data_viz/slides-data_viz.html#scatterplots",
    "title": "Data Visualisation with ggplot2\n",
    "section": "Scatterplots",
    "text": "Scatterplots\n\nhistograms and density plots plot a single variable along the x-axis\n\nin most other plots the dependent (measure) variable is plotted along the y-axis by convention\n\n\nscatterplots plot the relationship between two variables\n\n\n\n\niris |&gt; \n  ggplot(aes(x=Sepal.Length, y=Sepal.Width)) +\n  geom_point() +\n  labs(title = \"A scatterplot\",\n       x = \"variable X\",\n       y = \"variable Y\")"
  },
  {
    "objectID": "slides/08-data_viz/slides-data_viz.html#bar-plot",
    "href": "slides/08-data_viz/slides-data_viz.html#bar-plot",
    "title": "Data Visualisation with ggplot2\n",
    "section": "Bar plot",
    "text": "Bar plot\n\n\n\nshow the distribution of categorical factor levels\n\ni.e., the frequency of observations per level\n\n\nbe sure to read in accept as a factor!\n\n\n\nCodedf_lifetime |&gt; \n  distinct(px,trial,.keep_all=T) |&gt; \n  ggplot(aes(x = as.factor(accept) )) +\n  geom_bar() +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCodedf_lifetime |&gt; \n  distinct(px,trial,.keep_all=T) |&gt; \n  ggplot(aes(x = as.factor(accept), fill = condition)) +\n  labs(title = \"Binary responses\",\n       x = \"Naturalness response\",\n       fill = \"Condition\") +\n  geom_bar() +\n  theme_bw()"
  },
  {
    "objectID": "slides/08-data_viz/slides-data_viz.html#grouped-bar-plots",
    "href": "slides/08-data_viz/slides-data_viz.html#grouped-bar-plots",
    "title": "Data Visualisation with ggplot2\n",
    "section": "Grouped bar plots",
    "text": "Grouped bar plots\n\ndf_lifetime |&gt; \n  distinct(px,trial,.keep_all=T) |&gt; \n  ggplot(aes(x = as.factor(accept), fill = condition)) +\n  labs(title = \"Binary responses\",\n       x = \"Naturalness response\",\n       fill = \"Condition\") +\n  geom_bar(position = \"dodge\") +\n  theme_bw()"
  },
  {
    "objectID": "slides/08-data_viz/slides-data_viz.html#grouped-bar-plots-1",
    "href": "slides/08-data_viz/slides-data_viz.html#grouped-bar-plots-1",
    "title": "Data Visualisation with ggplot2\n",
    "section": "Grouped bar plots",
    "text": "Grouped bar plots\n\ndf_lifetime |&gt; \n  distinct(px,trial,.keep_all=T) |&gt; \n  ggplot(aes(x = lifetime, fill = as.factor(accept))) +\n  facet_grid(.~tense) +\n  labs(title = \"Grouped and faceted barplot\",\n       x = \"Lifetime\",\n       fill = \"Response\") +\n  geom_bar(position = \"dodge\") +\n  theme_bw()"
  },
  {
    "objectID": "slides/08-data_viz/slides-data_viz.html#stacked-bar-plots",
    "href": "slides/08-data_viz/slides-data_viz.html#stacked-bar-plots",
    "title": "Data Visualisation with ggplot2\n",
    "section": "Stacked bar plots",
    "text": "Stacked bar plots\n\ndf_lifetime |&gt; \n  distinct(px,trial,.keep_all=T) |&gt; \n  ggplot(aes(x = lifetime, fill = as.factor(accept))) +\n  facet_grid(.~tense) +\n  labs(title = \"Stacked and faceted barplot\",\n       x = \"Lifetime\",\n       fill = \"Response\") +\n  geom_bar(position = \"stack\") +\n  theme_bw()"
  },
  {
    "objectID": "slides/08-data_viz/slides-data_viz.html#boxplots",
    "href": "slides/08-data_viz/slides-data_viz.html#boxplots",
    "title": "Data Visualisation with ggplot2\n",
    "section": "Boxplots",
    "text": "Boxplots\n\nboxplots provide information about the distribution of a continuous variable\n\nbut includes information like median (dark line) and quartiles (box and whiskers)\nand outliers (dots)\n\n\nlike scatterplots, require x and y variables\n\nbut one of them needs to be categorical"
  },
  {
    "objectID": "slides/08-data_viz/slides-data_viz.html#section",
    "href": "slides/08-data_viz/slides-data_viz.html#section",
    "title": "Data Visualisation with ggplot2\n",
    "section": "",
    "text": "iris |&gt; \n  ggplot(aes(x = Species, y = Sepal.Length)) +\n  labs(title = \"A scatterplot\",\n       x = \"Categorical variable\",\n       y = \"Continuous variable\") +\n  geom_boxplot()\n\n\n\n\nA scatterplot. Median (50th percentile): thick black lines; interquartile range (IQR; 25th and 75th percentile): box limits; minimum (0th percentile) and maximum (100th percentile) excluding outliers: : whiskers; outliers: points"
  },
  {
    "objectID": "slides/08-data_viz/slides-data_viz.html#boxplot-explained",
    "href": "slides/08-data_viz/slides-data_viz.html#boxplot-explained",
    "title": "Data Visualisation with ggplot2\n",
    "section": "Boxplot explained",
    "text": "Boxplot explained\n\nImage source: Winter (2019) (all rights reserved)whiskers: 1.5*IQR from Q1 (lower whisker) or Q3 (upper whisker) outliers: outside that range"
  },
  {
    "objectID": "slides/08-data_viz/slides-data_viz.html#boxplots-1",
    "href": "slides/08-data_viz/slides-data_viz.html#boxplots-1",
    "title": "Data Visualisation with ggplot2\n",
    "section": "Boxplots",
    "text": "Boxplots\n\nlet‚Äôs change our scatterplot to a boxplot\n\n\n\ndf_lifetime |&gt;\n  filter(ff &gt; 0,\n         region == \"verb\") |&gt;\n  ggplot(aes(x = tense, y = ff)) +\n  labs(title = \"First-fixation duration (verb region)\",\n       x = \"Tense\",\n       y = \"First-fixation duration (ms)\") +\n  geom_boxplot(alpha = .2) +\n  theme_bw()"
  },
  {
    "objectID": "slides/08-data_viz/slides-data_viz.html#interaction-plots",
    "href": "slides/08-data_viz/slides-data_viz.html#interaction-plots",
    "title": "Data Visualisation with ggplot2\n",
    "section": "Interaction plots",
    "text": "Interaction plots\n\n\n\ncommon for factorial designs, i.e., comparing categorical predictors\nthere are 2 ways of producing them:\n\nwith your data frame and stat_summary()\n\nor with a summary table and ggplot geoms geom_point(), geom_errorbar(), and geom_line()\n\n\n\nwe‚Äôll need our summary table to plot an interaction plot\n\n\n\n\n\n\n\ncondition\nlifetime\ntense\nN\nmean.ff\nsd\nse\nci\nlower.ci\nupper.ci\n\n\n\ndeadPP\ndead\nPP\n140\n198.9\n57.9\n4.9\n9.7\n189.2\n208.6\n\n\ndeadSF\ndead\nSF\n139\n194.6\n67.9\n5.8\n11.4\n183.2\n205.9\n\n\nlivingPP\nliving\nPP\n140\n194.2\n77.3\n6.5\n12.9\n181.3\n207.1\n\n\nlivingSF\nliving\nSF\n140\n186.0\n57.6\n4.9\n9.6\n176.4\n195.6\n\n\n\n\n\n\n\nCodelibrary(patchwork)\n\ndf_lifetime |&gt; \n  filter(region == \"verb\") |&gt; \n  ggplot(aes(x = lifetime, y = ff, \n                     shape = tense,\n                     group = tense,\n                     color = tense)) +\n  labs(title=\"Interaction plot (`stat_summary()`)\",\n       x = \"Lifetime\",\n       y = \"First fix (ms)\",\n       shape = \"Tense\", group = \"Tense\", color = \"Tense\", linetype = \"Tense\") +\n  stat_summary(fun = \"mean\", geom = \"point\", size = 3, position = position_dodge(0.2)) +\n  stat_summary(fun = \"mean\", geom = \"line\", position = position_dodge(0.2), aes(linetype=tense)) +\n  stat_summary(fun.data = \"mean_cl_normal\", geom = \"errorbar\", width = .2\n               , position = position_dodge(0.2)) +\n  theme_bw() +\n  \nsummary_ff |&gt; \n  ggplot(aes(x = lifetime, y = mean.ff, \n                     shape = tense,\n                     group = tense,\n                     color = tense)) +\n  labs(title=\"Interaction plot (geoms)\",\n       x = \"Lifetime\",\n       y = \"First fix (ms)\",\n       shape = \"Tense\", group = \"Tense\", color = \"Tense\", linetype = \"Tense\") +\n  geom_point(size = 3,\n                position = position_dodge(0.2)) +\n  geom_line(aes(linetype=tense), position = position_dodge(0.2)) +\n  geom_errorbar(aes(ymin = mean.ff - ci,\n                    ymax = mean.ff + ci),\n                width = .2,\n                position = position_dodge(0.2)) +\n  theme_bw() +\n  plot_annotation(tag_levels = \"A\") +\n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"bottom\")\n\n\n\nFigure¬†1: Identical interaction plots produced two ways: feeding a dataset into ggplot() and using stat_summary() (A) or feeding a summary table into ggplot() and using geoms (B)"
  },
  {
    "objectID": "slides/08-data_viz/slides-data_viz.html#ggsave",
    "href": "slides/08-data_viz/slides-data_viz.html#ggsave",
    "title": "Data Visualisation with ggplot2\n",
    "section": "ggsave()",
    "text": "ggsave()\n\nthe ggsave() function is useful for saving ggplot objects\n\nwe first have to save one of our figures as an object\nI usually save ggplot objects with the prefix fig_ (short for figure)\n\n\nmake sure you also have a useful place to store these figures\n\ne.g., a folder called figures\n\n\n\n\n\nCodefig_lifetime_ff &lt;-\nsummary_ff |&gt; \n  ggplot(aes(x = lifetime, y = mean.ff, \n                     shape = tense,\n                     group = tense,\n                     color = tense)) +\n  labs(title=\"Mean first-fixation times (verb region) with 95% CIs\",\n       x = \"Lifetime\",\n       y = \"First fix (ms)\",\n       shape = \"Tense\", group = \"Tense\", color = \"Tense\", linetype = \"Tense\") +\n  geom_point(size = 3,\n                position = position_dodge(0.2)) +\n  geom_line(aes(linetype=tense), position = position_dodge(0.2)) +\n  geom_errorbar(aes(ymin = mean.ff - ci,\n                    ymax = mean.ff + ci),\n                width = .2,\n                position = position_dodge(0.2)) +\n  theme_bw()\n\n\n\nggsave(fig_lifetime_ff, filename = here(\"figures\", \"fig_lifetime_ff.png\"))\n\n\n\nggsave() has lots of arguments to control width, height, resolution, etc.\n\nto see more, run ?ggsave in the Console\n\n\nyou can also save as JPG/JPEG, SVG, even PDF by just changing the filename extension"
  },
  {
    "objectID": "slides/08-data_viz/slides-data_viz.html#saverds",
    "href": "slides/08-data_viz/slides-data_viz.html#saverds",
    "title": "Data Visualisation with ggplot2\n",
    "section": "saveRDS()",
    "text": "saveRDS()\n\nwe can also save the figure as R code\n\nwhich means we can control the width, height, resolution, etc. later on when we load it in\nuseful if you‚Äôll be writing up your results in R markdown or Quarto\n\n\n\n\nsaveRDS(fig_lifetime_ff, file = here(\"figures\", \"fig_lifetime_ff.rds\"))"
  },
  {
    "objectID": "slides/08-data_viz/slides-data_viz.html#readrds",
    "href": "slides/08-data_viz/slides-data_viz.html#readrds",
    "title": "Data Visualisation with ggplot2\n",
    "section": "readRDS()",
    "text": "readRDS()\n\nyou can‚Äôt click on the file to view the figure because it‚Äôs R code\n\nyou‚Äôd need to load the data into R again\n\n\n\n\nfig_lifetime_ff &lt;- readRDS(here(\"figures\", \"fig_lifetime_ff.rds\"))"
  },
  {
    "objectID": "slides/08-data_viz/slides-data_viz.html#section-1",
    "href": "slides/08-data_viz/slides-data_viz.html#section-1",
    "title": "Data Visualisation with ggplot2\n",
    "section": "",
    "text": "Naming files and saving code\n\n\nYou‚Äôll notice I saved the PNG and RDS files using the same name that the I used for the figure in my script. This is an important point: I want to be able to traceback my figures from the code so I can easily track them. It also helps encourage informative object and file names.\nOf course, saving the code used to save the files in our scripts is also useful because we can easily adjust the saved files (e.g., change figure width or height)"
  },
  {
    "objectID": "slides/05-literate_programming/repro_code_slides.html#writing-linear-code",
    "href": "slides/05-literate_programming/repro_code_slides.html#writing-linear-code",
    "title": "Writing Reproducible Code",
    "section": "Writing linear code",
    "text": "Writing linear code\n\nyou need to load a package before you call a function from it\n\nif we‚Äôre just working in an R session, before means temporally prior\nwith linear code, before means higher up in the script\n\n\nsuch pre-requisite code must\n\nbe present in the script\nappear above the first line of code that uses a function from this package\n\n\nmissing pre-requisite code might not throw an error message\n\nbut might produce output we aren‚Äôt expecting\ne.g., forgetting to filter out certain observations\nor forgetting that some observations have been filtered out"
  },
  {
    "objectID": "slides/05-literate_programming/repro_code_slides.html#literate-programming",
    "href": "slides/05-literate_programming/repro_code_slides.html#literate-programming",
    "title": "Writing Reproducible Code",
    "section": "Literate programming",
    "text": "Literate programming\n\nintroduced in 1992 by Donald Knuth (Knuth, 1984)\n\nrefers to writing and documenting our code so that humans can understand it\n\nimportant for us: we are (generally) not professional programmers, nor are our peers\n\n\nwe need to not only know what our code is doing when we look back at it in the future/share it\n\nthe easiest way: informative comments\n\nthe length and frequency of these comments is your choice"
  },
  {
    "objectID": "slides/05-literate_programming/repro_code_slides.html#example-r-script",
    "href": "slides/05-literate_programming/repro_code_slides.html#example-r-script",
    "title": "Writing Reproducible Code",
    "section": "Example R script",
    "text": "Example R script\n\nExample# Analysis script for phoneme paper\n# author: Joe DiMaggio\n# date: Feb. 29, 2024\n# purpose: analyse cleaned dataset\n\n# Set-up ###\n\n# load required packages\nlibrary(dplyr)\nlibrary(readr)\nlibrary(ggplot2)\nlibrary(lme4)\nlibrary(broom.mixed) # tidy model summaries\nlibrary(ggeffects) # model predictions\nlibrary(here) # project-relative file path\n\n# load-in data\ndf_phon &lt;- read_csv(here(\"data\", \"phoneme_tidy_data.csv\"))\n\n# Explore data ###\n\n\n\nbegins with some meta-information about the document, including its purpose\n\naids in knowing which scripts to run in which sequence\n\n\nthere are three hashtags after some headings (###)\n\nthis is helpful because it structures the outline of the document in RStudio\n\n\nthe purpose of chunks of code are written above\n\ndescription of specific lines of code are also given"
  },
  {
    "objectID": "slides/05-literate_programming/repro_code_slides.html#structure-your-reports",
    "href": "slides/05-literate_programming/repro_code_slides.html#structure-your-reports",
    "title": "Writing Reproducible Code",
    "section": "Structure your reports",
    "text": "Structure your reports\n\ndescribe the function/purpose at the beginning\n\ndocument your train of thought and findings throughout the script\n\ne.g., why are you producing this plot, what does it tell you?\n\n\ngive an overview of the findings/end result at the end\n\nit‚Äôs wise to avoid very long, multi-purpose scripts\n\nrule of thumb: one script per product or purpose\ne.g., data cleaning, exploration, analysis, publiation figures, etc."
  },
  {
    "objectID": "slides/05-literate_programming/repro_code_slides.html#session-information",
    "href": "slides/05-literate_programming/repro_code_slides.html#session-information",
    "title": "Writing Reproducible Code",
    "section": "Session Information",
    "text": "Session Information\n\nR and R package versions are both open source, and are frequently updated\n\nyou might‚Äôve run your code using dplyr version 1.1.0 or later, which introduced the .by per-operation grouping argument\nwhat happens when somebody who has an older version of dplyr tries to run your code?\n\nThey won‚Äôt be able to!\n\n\nthe reverse of this situation is more common:\n\na newer version of a package no longer supports a deprecated function or argument"
  },
  {
    "objectID": "slides/05-literate_programming/repro_code_slides.html#printing-session-info",
    "href": "slides/05-literate_programming/repro_code_slides.html#printing-session-info",
    "title": "Writing Reproducible Code",
    "section": "Printing session info",
    "text": "Printing session info\n\nso, print your session info at the end of every script!\n\n\nsessionInfo()\n\nR version 4.4.0 (2024-04-24)\nPlatform: aarch64-apple-darwin20\nRunning under: macOS Ventura 13.2.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nloaded via a namespace (and not attached):\n [1] compiler_4.4.0    fastmap_1.2.0     cli_3.6.2         htmltools_0.5.8.1\n [5] tools_4.4.0       rstudioapi_0.16.0 yaml_2.3.8        rmarkdown_2.27   \n [9] knitr_1.47        jsonlite_1.8.8    xfun_0.44         digest_0.6.35    \n[13] rlang_1.1.4       renv_1.0.7        evaluate_0.23    \n\n\n\n\n\n\n\n\n\n\nKnuth, D. (1984). Literate programming. The Computer Journal, 27(2), 97‚Äì111."
  },
  {
    "objectID": "slides/05-literate_programming/repro_code.html",
    "href": "slides/05-literate_programming/repro_code.html",
    "title": "Writing Reproducible Code",
    "section": "",
    "text": "learn what literate programming is\ncreate and render a dynamic report with Quarto\nload data\ninclude a table and figure",
    "crumbs": [
      "D. Palleschi",
      "Writing Reproducible Code"
    ]
  },
  {
    "objectID": "slides/05-literate_programming/repro_code.html#writing-linear-code",
    "href": "slides/05-literate_programming/repro_code.html#writing-linear-code",
    "title": "Writing Reproducible Code",
    "section": "Writing linear code",
    "text": "Writing linear code\n\nyou need to load a package before you call a function from it\n\nif we‚Äôre just working in an R session, before means temporally prior\nwith linear code, before means higher up in the script\n\nsuch pre-requisite code must\n\nbe present in the script\nappear above the first line of code that uses a function from this package\n\nmissing pre-requisite code might not throw an error message\n\nbut might produce output we aren‚Äôt expecting\ne.g., forgetting to filter out certain observations\nor forgetting that some observations have been filtered out",
    "crumbs": [
      "D. Palleschi",
      "Writing Reproducible Code"
    ]
  },
  {
    "objectID": "slides/05-literate_programming/repro_code.html#literate-programming",
    "href": "slides/05-literate_programming/repro_code.html#literate-programming",
    "title": "Writing Reproducible Code",
    "section": "Literate programming",
    "text": "Literate programming\n\nintroduced in 1992 by Donald Knuth (Knuth, 1984)\nrefers to writing and documenting our code so that humans can understand it\n\nimportant for us: we are (generally) not professional programmers, nor are our peers\n\nwe need to not only know what our code is doing when we look back at it in the future/share it\nthe easiest way: informative comments\n\nthe length and frequency of these comments is your choice",
    "crumbs": [
      "D. Palleschi",
      "Writing Reproducible Code"
    ]
  },
  {
    "objectID": "slides/05-literate_programming/repro_code.html#example-r-script",
    "href": "slides/05-literate_programming/repro_code.html#example-r-script",
    "title": "Writing Reproducible Code",
    "section": "Example R script",
    "text": "Example R script\n\n\nExample\n# Analysis script for phoneme paper\n# author: Joe DiMaggio\n# date: Feb. 29, 2024\n# purpose: analyse cleaned dataset\n\n# Set-up ###\n\n# load required packages\nlibrary(dplyr)\nlibrary(readr)\nlibrary(ggplot2)\nlibrary(lme4)\nlibrary(broom.mixed) # tidy model summaries\nlibrary(ggeffects) # model predictions\nlibrary(here) # project-relative file path\n\n# load-in data\ndf_phon &lt;- read_csv(here(\"data\", \"phoneme_tidy_data.csv\"))\n\n# Explore data ###\n\n\n\nbegins with some meta-information about the document, including its purpose\n\naids in knowing which scripts to run in which sequence\n\nthere are three hashtags after some headings (###)\n\nthis is helpful because it structures the outline of the document in RStudio\n\nthe purpose of chunks of code are written above\n\ndescription of specific lines of code are also given",
    "crumbs": [
      "D. Palleschi",
      "Writing Reproducible Code"
    ]
  },
  {
    "objectID": "slides/05-literate_programming/repro_code.html#structure-your-reports",
    "href": "slides/05-literate_programming/repro_code.html#structure-your-reports",
    "title": "Writing Reproducible Code",
    "section": "Structure your reports",
    "text": "Structure your reports\n\ndescribe the function/purpose at the beginning\ndocument your train of thought and findings throughout the script\n\ne.g., why are you producing this plot, what does it tell you?\n\ngive an overview of the findings/end result at the end\nit‚Äôs wise to avoid very long, multi-purpose scripts\n\nrule of thumb: one script per product or purpose\ne.g., data cleaning, exploration, analysis, publiation figures, etc.",
    "crumbs": [
      "D. Palleschi",
      "Writing Reproducible Code"
    ]
  },
  {
    "objectID": "slides/05-literate_programming/repro_code.html#session-information",
    "href": "slides/05-literate_programming/repro_code.html#session-information",
    "title": "Writing Reproducible Code",
    "section": "Session Information",
    "text": "Session Information\n\nR and R package versions are both open source, and are frequently updated\n\nyou might‚Äôve run your code using dplyr version 1.1.0 or later, which introduced the .by per-operation grouping argument\nwhat happens when somebody who has an older version of dplyr tries to run your code?\n\nThey won‚Äôt be able to!\n\nthe reverse of this situation is more common:\n\na newer version of a package no longer supports a deprecated function or argument",
    "crumbs": [
      "D. Palleschi",
      "Writing Reproducible Code"
    ]
  },
  {
    "objectID": "slides/05-literate_programming/repro_code.html#printing-session-info",
    "href": "slides/05-literate_programming/repro_code.html#printing-session-info",
    "title": "Writing Reproducible Code",
    "section": "Printing session info",
    "text": "Printing session info\n\nso, print your session info at the end of every script!\n\n\nsessionInfo()\n\nR version 4.4.0 (2024-04-24)\nPlatform: aarch64-apple-darwin20\nRunning under: macOS Ventura 13.2.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nloaded via a namespace (and not attached):\n [1] htmlwidgets_1.6.4 compiler_4.4.0    fastmap_1.2.0     cli_3.6.2        \n [5] htmltools_0.5.8.1 tools_4.4.0       rstudioapi_0.16.0 yaml_2.3.8       \n [9] rmarkdown_2.27    knitr_1.47        jsonlite_1.8.8    xfun_0.44        \n[13] digest_0.6.35     rlang_1.1.4       renv_1.0.7        evaluate_0.23",
    "crumbs": [
      "D. Palleschi",
      "Writing Reproducible Code"
    ]
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning_slides.html#workflow-bare-minimum",
    "href": "slides/06-data_wrangling/cleaning_slides.html#workflow-bare-minimum",
    "title": "Data wrangling",
    "section": "Workflow bare minimum",
    "text": "Workflow bare minimum\n\nself-contained project\n\neverything available in one folder\ne.g., RProjects\n\n\nREADME file\n\na markdown (.md) file\ndescribing the folder/analysis structure\ncan be updated as you build the project"
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning_slides.html#rprojects",
    "href": "slides/06-data_wrangling/cleaning_slides.html#rprojects",
    "title": "Data wrangling",
    "section": "RProjects",
    "text": "RProjects\n\na folder containing\n\nan .RProj file (which opens RStudio)\nall folders/files required for a project\n\n\nFile &gt; New Project &gt; New Directory &gt; New Project &gt; New Project &gt; Create Project"
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning_slides.html#checklist",
    "href": "slides/06-data_wrangling/cleaning_slides.html#checklist",
    "title": "Data wrangling",
    "section": "Checklist",
    "text": "Checklist\n\n\nRProject\n\n.RProj\nREADME.md\ndata/\n\nscripts/ (for analyses)\n\nnotes/ (if for class notes)\n\n\nScripts (.qmd/.Rmd)\n\nload libraries at beginning\nchunks run linearly (top-to-bottom)\nscript has helpful headings\ncontains text to describe stream of throught\ncode has helpful comments\n\nsessionInfo() at the end"
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning_slides.html#wrangle-defined",
    "href": "slides/06-data_wrangling/cleaning_slides.html#wrangle-defined",
    "title": "Data wrangling",
    "section": "‚Äòwrangle‚Äô defined",
    "text": "‚Äòwrangle‚Äô defined\n/Ààra≈ã…°l/\nnoun\na dispute or argument, typically one that is long and complicated. ‚Äúan insurance wrangle is holding up compensation payments‚Äù\nverb\n\nhave a long, complicated dispute or argument. ‚Äúthe bureaucrats continue wrangling over the fine print‚Äù\nNORTH AMERICAN round up, herd, or take charge of (livestock). ‚Äúthe horses were wrangled early‚Äù"
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning_slides.html#why-tidy-data",
    "href": "slides/06-data_wrangling/cleaning_slides.html#why-tidy-data",
    "title": "Data wrangling",
    "section": "Why tidy data?",
    "text": "Why tidy data?\n\nhelps future you\n\nand collaborators\n\n\nfacilitates sharing your data and code (Laurinavichyute et al., 2022)\n\nin short: facilitates reproducibility!"
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning_slides.html#what-does-tidy-data-look-like",
    "href": "slides/06-data_wrangling/cleaning_slides.html#what-does-tidy-data-look-like",
    "title": "Data wrangling",
    "section": "What does tidy data look like?",
    "text": "What does tidy data look like?\nThree rules (Wickham et al., 2023):\n\nEach variable is a column, each column is a variable\nEach observation is a row, each row is an observation\nEach value is a cell, each cell is a single value\n\n\nImage source: Wickham et al. (2023) (all rights reserved)\nN.B., how you define a variable or observation is relative to what you want to do\n\nfor now, let‚Äôs consider a single trial per participant as an observation"
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning_slides.html#section",
    "href": "slides/06-data_wrangling/cleaning_slides.html#section",
    "title": "Data wrangling",
    "section": "",
    "text": "package versions\n\n\n\nyou can check the package version with:\n\n\npackageVersion(\"tidyverse\")\n\n\n\n[1] '2.0.0'\n\n\n\nneed to update?\n\n\n# update a single package\ninstall.packages(\"tidyverse\")\n\n\nwhat about your other packages?\n\n\n# which packages need updating?\nold.packages()\n# update all old packages\nupdate.packages()"
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning_slides.html#base-r-pipe",
    "href": "slides/06-data_wrangling/cleaning_slides.html#base-r-pipe",
    "title": "Data wrangling",
    "section": "base R pipe |>\n",
    "text": "base R pipe |&gt;\n\n\n\n\ntakes the object before it and feeds it into the next command\n\nthe pipe could be read as ‚Äúand then‚Äù\nthere‚Äôs a useful shortcut: Ctrl/Cmd+Shift+M\n\nN.B., pre-2023 the only pipe was %&gt;% (magrittr package)\n\n\n\n\n# take data frame and then...\niris |&gt;\n  # print the head\n  head()\n\n\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\n\n\n\n\n\nImage source: magrittr documentation (all rights reserved)"
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning_slides.html#load-our-data",
    "href": "slides/06-data_wrangling/cleaning_slides.html#load-our-data",
    "title": "Data wrangling",
    "section": "load our data",
    "text": "load our data\n\n# load lifetime data\nreadr::read_csv(here::here(\"data/data_lifetime_pilot.csv\")) \n\n\n\n# A tibble: 4,431 √ó 28\n   RECORDING_SESSION_LABEL TRIAL_INDEX EYE_USED IA_DWELL_TIME\n   &lt;chr&gt;                         &lt;dbl&gt; &lt;chr&gt;            &lt;dbl&gt;\n 1 px3                               1 RIGHT                0\n 2 px3                               2 RIGHT                0\n 3 px3                               3 RIGHT                0\n 4 px3                               3 RIGHT                0\n 5 px3                               3 RIGHT                0\n 6 px3                               3 RIGHT                0\n 7 px3                               3 RIGHT                0\n 8 px3                               3 RIGHT                0\n 9 px3                               4 RIGHT                0\n10 px3                               5 RIGHT                0\n# ‚Ñπ 4,421 more rows\n# ‚Ñπ 24 more variables: IA_FIRST_FIXATION_DURATION &lt;dbl&gt;,\n#   IA_FIRST_RUN_DWELL_TIME &lt;dbl&gt;, IA_FIXATION_COUNT &lt;dbl&gt;, IA_ID &lt;dbl&gt;,\n#   IA_LABEL &lt;chr&gt;, IA_REGRESSION_IN &lt;dbl&gt;, IA_REGRESSION_IN_COUNT &lt;dbl&gt;,\n#   IA_REGRESSION_OUT &lt;dbl&gt;, IA_REGRESSION_OUT_COUNT &lt;dbl&gt;,\n#   IA_REGRESSION_PATH_DURATION &lt;dbl&gt;, KeyPress &lt;dbl&gt;, rt &lt;dbl&gt;, bio &lt;chr&gt;,\n#   critical &lt;chr&gt;, gender &lt;chr&gt;, item_id &lt;dbl&gt;, list &lt;dbl&gt;, match &lt;chr&gt;, ‚Ä¶\n\n\n\nwas anything added to the Environment pane (top right box in RStudio)?"
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning_slides.html#variable-assignment-with--",
    "href": "slides/06-data_wrangling/cleaning_slides.html#variable-assignment-with--",
    "title": "Data wrangling",
    "section": "variable assignment with <-\n",
    "text": "variable assignment with &lt;-\n\n\nobject_name &lt;- code_output_to_be_saved_as_object_name\n\n\n# load lifetime data and store it under df_lifetime\ndf_lifetime &lt;- readr::read_csv(here::here(\"data/data_lifetime_pilot.csv\"), \n                               # for special characters\n                               locale = readr::locale(encoding = \"latin1\") \n                               ) \n\n\nyou should now see the object df_lifetime in the Environment pane"
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning_slides.html#section-1",
    "href": "slides/06-data_wrangling/cleaning_slides.html#section-1",
    "title": "Data wrangling",
    "section": "",
    "text": "A note on annotation\n\n\n\nannotate as you go: provide useful comments to describe your code (# comment)\nyou always have at least one collaborator: future you!\n\ncomments\n\n\n\nFirst we load required libraries.\n\n# load libraries\nlibrary(tidyverse) # for e.g., wrangling and plotting\nlibrary(here) # for file-paths relative to project folder"
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning_slides.html#rename",
    "href": "slides/06-data_wrangling/cleaning_slides.html#rename",
    "title": "Data wrangling",
    "section": "rename()",
    "text": "rename()\n\none of the first things you‚Äôll often want to do is rename some variables\nlet‚Äôs start by re-naming some of our variables\n\ne.g., RECORDING_SESSION_LABEL is a long way of saying ‚Äòparticipant‚Äô\n\n\n\n\n# rename variables\ndf_lifetime &lt;- df_lifetime |&gt; # make df_lifetime from df_lifetime BUT THEN\n  rename(\"px\" = RECORDING_SESSION_LABEL, # rename a variable and (comma = 'and')\n         \"trial\" = TRIAL_INDEX) # another variable"
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning_slides.html#relocate",
    "href": "slides/06-data_wrangling/cleaning_slides.html#relocate",
    "title": "Data wrangling",
    "section": "relocate",
    "text": "relocate\n\nthe second thing you might want to do is reorder your variables so the most important/relevant are near the beginning and ordered logically\n\nlet‚Äôs order our continuous reading time variables from ‚Äòearliest‚Äô to ‚Äòlatest‚Äô measure\n\n\n\n\ndf_lifetime &lt;- df_lifetime |&gt;\n  relocate(ff,fp,rpd,tt, .after=\"eye\") |&gt; \n  relocate(region_n, region_text, .after=\"trial\")\n\n\nnames(df_lifetime[1:10])\n\n [1] \"px\"          \"trial\"       \"region_n\"    \"region_text\" \"eye\"        \n [6] \"ff\"          \"fp\"          \"rpd\"         \"tt\"          \"fix_count\""
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning_slides.html#mutate",
    "href": "slides/06-data_wrangling/cleaning_slides.html#mutate",
    "title": "Data wrangling",
    "section": "mutate()",
    "text": "mutate()\nMutate column(s):\n\n\n\nnew columns\n\n\ndf_lifetime &lt;- df_lifetime |&gt;\n  mutate(new_column = \"new\")\n\n\nwhat will new_column contain?\n\n\ndf_lifetime |&gt; \n  select(px, new_column, trial) |&gt; \n  head() \n\n\n\n# A tibble: 6 √ó 3\n  px    new_column trial\n  &lt;chr&gt; &lt;chr&gt;      &lt;dbl&gt;\n1 px3   new            1\n2 px3   new            2\n3 px3   new            3\n4 px3   new            3\n5 px3   new            3\n6 px3   new            3\n\n\n\n\nchange existing column\n\n\ndf_lifetime &lt;- df_lifetime |&gt;\n  mutate(new_column = px,\n         trial = trial + 5)\n\n\nwhat will new_column and trial contain?\n\n\ndf_lifetime |&gt; \n  select(px, new_column, trial) |&gt; \n  head() \n\n\n\n# A tibble: 6 √ó 3\n  px    new_column trial\n  &lt;chr&gt; &lt;chr&gt;      &lt;dbl&gt;\n1 px3   px3            6\n2 px3   px3            7\n3 px3   px3            8\n4 px3   px3            8\n5 px3   px3            8\n6 px3   px3            8\n\n\n\n\nbut let‚Äôs undo that‚Ä¶\n\n\ndf_lifetime &lt;- df_lifetime |&gt;\n  mutate(trial = trial - 5)\n\n\nwhat will trial contain?\n\n\ndf_lifetime |&gt; \n  select(px, new_column, trial) |&gt; \n  head() \n\n\n\n# A tibble: 6 √ó 3\n  px    new_column trial\n  &lt;chr&gt; &lt;chr&gt;      &lt;dbl&gt;\n1 px3   px3            1\n2 px3   px3            2\n3 px3   px3            3\n4 px3   px3            3\n5 px3   px3            3\n6 px3   px3            3"
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning_slides.html#group_by-and-ungroup",
    "href": "slides/06-data_wrangling/cleaning_slides.html#group_by-and-ungroup",
    "title": "Data wrangling",
    "section": "\ngroup_by() and ungroup()\n",
    "text": "group_by() and ungroup()\n\nGroup data by certain variable(s)\n\nthen perform some mutation\nthen ungroup the data\n\n\ndf_lifetime &lt;- df_lifetime |&gt;\n  group_by(px) |&gt;\n  mutate(px_accuracy = mean(accuracy)) |&gt;\n  ungroup()\n\n\nround(\n  range(df_lifetime$px_accuracy),\n  2)\n\n\n\n[1] 0.26 0.90"
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning_slides.html#by",
    "href": "slides/06-data_wrangling/cleaning_slides.html#by",
    "title": "Data wrangling",
    "section": ".by",
    "text": ".by\n\n\nmutate() also takes .by = as an argument\n\ndoes the same thing as group_by()/ungroup()\n\nas of dplyr 1.1.0 version (more info)\n\n\n\n\ndf_lifetime &lt;- df_lifetime |&gt;\n  mutate(px_accuracy = mean(accuracy),\n         .by = px)\n\n\nround(\n  range(df_lifetime$px_accuracy),\n  2)\n\n\n\n[1] 0.26 0.90"
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning_slides.html#separate",
    "href": "slides/06-data_wrangling/cleaning_slides.html#separate",
    "title": "Data wrangling",
    "section": "separate()",
    "text": "separate()\n\ncreate new columns from a single column\n\n\ndf_lifetime &lt;- df_lifetime |&gt;\n  separate(name,\n           sep=\" \",\n           into = c(\"First\",\"Last\"),\n           remove = F, # don't remove original column (name)\n           extra = \"merge\") # if extra chunks, combine in 'Last' (von der...)\n\n\nopposite: unite()"
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning_slides.html#select",
    "href": "slides/06-data_wrangling/cleaning_slides.html#select",
    "title": "Data wrangling",
    "section": "select()",
    "text": "select()\n\n\n\nkeep only certain column(s)\noften used to preview changes\nif result is saved as an object (&lt;-) will remove all other columns\n\nso be careful when saving as an already existing object (e.g., df &lt;- df |&gt; select(...))\n\n\n\n\n\ndf_lifetime |&gt;\n  select(px) |&gt; head(10)\n\n\n\n# A tibble: 10 √ó 1\n   px   \n   &lt;chr&gt;\n 1 px3  \n 2 px3  \n 3 px3  \n 4 px3  \n 5 px3  \n 6 px3  \n 7 px3  \n 8 px3  \n 9 px3  \n10 px3  \n\n\n\n\ndf_lifetime |&gt;\n  select(px, trial) |&gt; head(10)\n\n\n\n# A tibble: 10 √ó 2\n   px    trial\n   &lt;chr&gt; &lt;dbl&gt;\n 1 px3       1\n 2 px3       2\n 3 px3       3\n 4 px3       3\n 5 px3       3\n 6 px3       3\n 7 px3       3\n 8 px3       3\n 9 px3       4\n10 px3       5"
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning_slides.html#select-",
    "href": "slides/06-data_wrangling/cleaning_slides.html#select-",
    "title": "Data wrangling",
    "section": "select(-)",
    "text": "select(-)\n\nor remove certain columns\n\n\ndf_lifetime |&gt;\n  select(-px, -trial) |&gt; head(10)\n\n\n\n# A tibble: 10 √ó 34\n   region region_n region_text    eye      ff    fp   rpd    tt fix_count reg_in\n   &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;          &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;\n 1 filler        1 He owned innu‚Ä¶ RIGHT     0     0     0     0         0      0\n 2 filler        1 She is a moth‚Ä¶ RIGHT     0     0     0     0         0      0\n 3 verb-1        1 She            RIGHT     0     0     0     0         0      0\n 4 verb          2 will perform   RIGHT     0     0     0     0         0      0\n 5 verb+1        3 in prestigiou‚Ä¶ RIGHT     0     0     0     0         0      0\n 6 verb+2        4 in the future, RIGHT     0     0     0     0         0      0\n 7 verb+3        5 as reported i‚Ä¶ RIGHT     0     0     0     0         0      0\n 8 verb+4        6 as reported i‚Ä¶ RIGHT     0     0     0     0         0      0\n 9 filler        1 He interviewe‚Ä¶ RIGHT     0     0     0     0         0      0\n10 verb-1        1 She            RIGHT     0     0     0     0         0      0\n# ‚Ñπ 24 more variables: reg_in_count &lt;dbl&gt;, reg_out &lt;dbl&gt;, reg_out_count &lt;dbl&gt;,\n#   rt &lt;dbl&gt;, bio &lt;chr&gt;, critical &lt;chr&gt;, gender &lt;chr&gt;, item_id &lt;dbl&gt;,\n#   list &lt;dbl&gt;, match &lt;chr&gt;, condition &lt;chr&gt;, name &lt;chr&gt;, First &lt;chr&gt;,\n#   Last &lt;chr&gt;, lifetime &lt;chr&gt;, tense &lt;chr&gt;, type &lt;chr&gt;, yes_press &lt;dbl&gt;,\n#   KeyPress &lt;dbl&gt;, new_column &lt;chr&gt;, newer_column &lt;chr&gt;, accept &lt;dbl&gt;,\n#   accuracy &lt;dbl&gt;, px_accuracy &lt;dbl&gt;"
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning_slides.html#section-3",
    "href": "slides/06-data_wrangling/cleaning_slides.html#section-3",
    "title": "Data wrangling",
    "section": "",
    "text": "Select criteria\n\n\nYou can also use criteria for select:\n\n\nselect(starts_with(\"x\")) select columns that start with a character string\n\nselect(ends_with(\"x\")) select columns that end with a character string\n\nselect(contains(\"x\")) select columns that contain a character string\n\nselect(num_range(\"prefix\",10:20)) select columns with a prefix followed by a range of values"
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning_slides.html#filter",
    "href": "slides/06-data_wrangling/cleaning_slides.html#filter",
    "title": "Data wrangling",
    "section": "filter()",
    "text": "filter()\n\nselect certain rows based on certain criteria\n\nrequires logical operators (==, !=, &gt;, &lt;, |)\nN.B. when testing logical conditions == is needed\n\n\n\n\ndf_lifetime |&gt;\n  filter(trial == 1)\n\n\n\n# A tibble: 8 √ó 32\n  px    trial region region_n region_text          eye      ff    fp   rpd    tt\n  &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;                &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 px3       1 filler        1 He owned innumerabl‚Ä¶ RIGHT     0     0     0     0\n2 px5       1 filler        1 She is a mother of ‚Ä¶ RIGHT   145  1603  1603  1603\n3 px6       1 filler        1 He is a father of t‚Ä¶ RIGHT   147  1224  1224  1224\n4 px2       1 filler        1 She made innumerabl‚Ä¶ RIGHT    84  1829  1829  1829\n5 px7       1 filler        1 In the '70s, he own‚Ä¶ RIGHT   138  2456  2456  2456\n6 px1       1 filler        1 Beloved morning sho‚Ä¶ RIGHT   160  1708  1708  1708\n7 px8       1 filler        1 She was a mother of‚Ä¶ RIGHT   220   806   806   806\n8 px4       1 filler        1 In the '70s, he own‚Ä¶ LEFT    171  3557  3557  3557\n# ‚Ñπ 22 more variables: fix_count &lt;dbl&gt;, reg_in &lt;dbl&gt;, reg_in_count &lt;dbl&gt;,\n#   reg_out &lt;dbl&gt;, reg_out_count &lt;dbl&gt;, rt &lt;dbl&gt;, bio &lt;chr&gt;, critical &lt;chr&gt;,\n#   gender &lt;chr&gt;, item_id &lt;dbl&gt;, list &lt;dbl&gt;, match &lt;chr&gt;, condition &lt;chr&gt;,\n#   name &lt;chr&gt;, lifetime &lt;chr&gt;, tense &lt;chr&gt;, type &lt;chr&gt;, yes_press &lt;dbl&gt;,\n#   KeyPress &lt;dbl&gt;, accept &lt;dbl&gt;, accuracy &lt;dbl&gt;, px_accuracy &lt;dbl&gt;"
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning_slides.html#filter-1",
    "href": "slides/06-data_wrangling/cleaning_slides.html#filter-1",
    "title": "Data wrangling",
    "section": "filter()",
    "text": "filter()\nWhat are these code chunks doing?\n\n\n\ndf_lifetime |&gt;\n  filter(px_accuracy &gt; .5)\n\n\n\ndf_lifetime |&gt;\n  filter(px == \"px3\")\n\n\n\n\n\n\ndf_lifetime |&gt;\n  filter(px == \"px3\" | trial == \"3\")\n\n\n\ndf_lifetime |&gt;\n  filter(px == \"px3\" & trial != \"3\")"
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning_slides.html#distinct",
    "href": "slides/06-data_wrangling/cleaning_slides.html#distinct",
    "title": "Data wrangling",
    "section": "distinct()",
    "text": "distinct()\n\n\n\nlike filter(), but for distinct values of a variable\n\n‚Äúselect rows with distinct values for some row(s)‚Äù\n\n\n\n\n\ndf_crit |&gt;\n  distinct(px)\n\n\n\n# A tibble: 8 √ó 1\n  px   \n  &lt;chr&gt;\n1 px3  \n2 px5  \n3 px6  \n4 px2  \n5 px7  \n6 px1  \n7 px8  \n8 px4  \n\n\n\n\ndf_crit |&gt;\n  distinct(px, name)\n\n\n\n# A tibble: 639 √ó 2\n   px    name          \n   &lt;chr&gt; &lt;chr&gt;         \n 1 px3   Edith Piaf    \n 2 px3   Aaliyah       \n 3 px3   David Beckham \n 4 px3   Jana Novotna  \n 5 px3   Grace Kelly   \n 6 px3   Nigella Lawson\n 7 px3   Coco Chanel   \n 8 px3   Ben Kingsley  \n 9 px3   Jim Carrey    \n10 px3   Judy Garland  \n# ‚Ñπ 629 more rows\n\n\n\n\ndf_crit |&gt;\n  distinct(px, name,\n           .keep_all=T)\n\n\n\n# A tibble: 639 √ó 32\n   px    trial region region_n region_text eye      ff    fp   rpd    tt\n   &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 px3       3 verb-1        1 She         RIGHT     0     0     0     0\n 2 px3       5 verb-1        1 She         RIGHT     0     0     0     0\n 3 px3       8 verb-1        1 He          RIGHT     0     0     0     0\n 4 px3      10 verb-1        1 She         RIGHT     0     0     0     0\n 5 px3      13 verb-1        1 She         RIGHT     0     0     0     0\n 6 px3      16 verb-1        1 She         RIGHT     0     0     0     0\n 7 px3      18 verb-1        1 She         RIGHT     0     0     0     0\n 8 px3      21 verb-1        1 He          RIGHT     0     0     0     0\n 9 px3      23 verb-1        1 He          RIGHT     0     0     0     0\n10 px3      26 verb-1        1 She         RIGHT     0     0     0     0\n# ‚Ñπ 629 more rows\n# ‚Ñπ 22 more variables: fix_count &lt;dbl&gt;, reg_in &lt;dbl&gt;, reg_in_count &lt;dbl&gt;,\n#   reg_out &lt;dbl&gt;, reg_out_count &lt;dbl&gt;, rt &lt;dbl&gt;, bio &lt;chr&gt;, critical &lt;chr&gt;,\n#   gender &lt;chr&gt;, item_id &lt;dbl&gt;, list &lt;dbl&gt;, match &lt;chr&gt;, condition &lt;chr&gt;,\n#   name &lt;chr&gt;, lifetime &lt;chr&gt;, tense &lt;chr&gt;, type &lt;chr&gt;, yes_press &lt;dbl&gt;,\n#   KeyPress &lt;dbl&gt;, accept &lt;dbl&gt;, accuracy &lt;dbl&gt;, px_accuracy &lt;dbl&gt;"
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning_slides.html#arrange",
    "href": "slides/06-data_wrangling/cleaning_slides.html#arrange",
    "title": "Data wrangling",
    "section": "arrange()",
    "text": "arrange()\n\n\n\nsort column(s) in ascending or descending order\n\nthis is really just for ease of reading\n\n\n\n\n\n# default: ascending order (A-Z)\ndf_crit |&gt;\n  distinct(px, trial, name, condition) |&gt;\n  arrange(px, trial)\n\n\n\n# A tibble: 639 √ó 4\n   px    trial name            condition\n   &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;    \n 1 px1       3 Amy Winehouse   deadPP   \n 2 px1       5 John Wayne      deadPP   \n 3 px1       8 Abraham Lincoln deadPP   \n 4 px1      10 Helen Mirren    livingSF \n 5 px1      13 Paul McCartney  livingSF \n 6 px1      16 Ariana Grande   livingPP \n 7 px1      18 Kate Middleton  livingSF \n 8 px1      21 Johan Cruyff    deadSF   \n 9 px1      23 Marilyn Monroe  deadPP   \n10 px1      26 Biggie Smalls   deadSF   \n# ‚Ñπ 629 more rows\n\n\n\n\n# descending order (Z-A)\ndf_crit |&gt;\n  distinct(px, trial, name, condition) |&gt;\n  arrange(desc(px), trial)\n\n\n\n# A tibble: 639 √ó 4\n   px    trial name            condition\n   &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;    \n 1 px8       3 Whitney Houston deadPP   \n 2 px8       5 Elton John      livingSF \n 3 px8       8 Jackie Chan     livingPP \n 4 px8      10 Romy Schneider  deadPP   \n 5 px8      13 James Cameron   livingSF \n 6 px8      16 Ella Fitzgerald deadSF   \n 7 px8      18 Kathryn Hepburn deadPP   \n 8 px8      21 Kate Middleton  livingPP \n 9 px8      23 Janis Joplin    deadPP   \n10 px8      26 Serena Williams livingSF \n# ‚Ñπ 629 more rows"
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning_slides.html#important-terms",
    "href": "slides/06-data_wrangling/cleaning_slides.html#important-terms",
    "title": "Data wrangling",
    "section": "Important terms",
    "text": "Important terms\n\n\n\n\n\n\n\nwrangle\nhave a long dispute\n\n\ndata wrangling\ntidying and transforming your data\n\n\ntidy data\ndata where each column is a variable and each row is an observation\n\n\nthe tidyverse\na group of packages for tidy data\n\n\ndplyr\na package within the tidyverse for data wrangling\n\n\npipe operator (|&gt; or |&gt;)\noperational function, passes the result of one function/argument to the next\n\n\nlogical operators\ncompare values of two arguments: &, |, ==, !=, &gt;, &lt;"
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning_slides.html#important-functions",
    "href": "slides/06-data_wrangling/cleaning_slides.html#important-functions",
    "title": "Data wrangling",
    "section": "Important functions",
    "text": "Important functions\n\n\n\n\n\n\n\nread_csv()\nread-in a csv as a tibble (from readr package)\n\n\nrename()\nrename variables\n\n\nrelocate()\nmove variables\n\n\nmutate()\nchange or create new variables\n\n\nif_else()\ncondition for `mutate()`\n\n\ncase_when()\nhandle multiple conditions for `mutate()`\n\n\ngroup_by()\ngroup by a certain variable\n\n\nselect()\nkeep (or exclude) certain variables\n\n\nfilter()\nkeep (or exclude) rows based on some criteria\n\n\ndistinct()\nkeep rows with distinct value of given variable(s)\n\n\narrange()\nsort variable(s) in ascending or descending order\n\n\nseparate()\nsplit a variable into multiple variables\n\n\npivot_longer()\nmake wide data longer\n\n\npivot_wider()\nmake long data wider"
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning.html",
    "href": "slides/06-data_wrangling/cleaning.html",
    "title": "Data wrangling",
    "section": "",
    "text": "Today we will‚Ä¶\n\nclean our first dataset\nimplement literate programming principles\nuse dplyr verbs to wrangle columns and rows\nsave our tidy dataset",
    "crumbs": [
      "D. Palleschi",
      "Data wrangling"
    ]
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning.html#workflow-bare-minimum",
    "href": "slides/06-data_wrangling/cleaning.html#workflow-bare-minimum",
    "title": "Data wrangling",
    "section": "Workflow bare minimum",
    "text": "Workflow bare minimum\n\nself-contained project\n\neverything available in one folder\ne.g., RProjects\n\nREADME file\n\na markdown (.md) file\ndescribing the folder/analysis structure\ncan be updated as you build the project",
    "crumbs": [
      "D. Palleschi",
      "Data wrangling"
    ]
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning.html#rprojects",
    "href": "slides/06-data_wrangling/cleaning.html#rprojects",
    "title": "Data wrangling",
    "section": "RProjects",
    "text": "RProjects\n\na folder containing\n\nan .RProj file (which opens RStudio)\nall folders/files required for a project\n\nFile &gt; New Project &gt; New Directory &gt; New Project &gt; New Project &gt; Create Project\n\n\nREADME\n\nto create an .md file: File &gt; New File &gt; Markdown File\ncreate informative heading\n\ndescribe project purpose\ndescribe folders/scripts as they currently are\n\nsave/Preview as README.md in the project folder\n\n\n\nhere\n\nhere package\n\nwill always access the project folder\ntry running here() from within a project; what‚Äôs the output?\n\n\n\n\nProject folder structure\n\n\n\n\n\nImage source: Winter (2019)",
    "crumbs": [
      "D. Palleschi",
      "Data wrangling"
    ]
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning.html#checklist",
    "href": "slides/06-data_wrangling/cleaning.html#checklist",
    "title": "Data wrangling",
    "section": "Checklist",
    "text": "Checklist\n\n\nRProject\n\n.RProj\nREADME.md\ndata/\nscripts/ (for analyses)\nnotes/ (if for class notes)\n\n\nScripts (.qmd/.Rmd)\n\nload libraries at beginning\nchunks run linearly (top-to-bottom)\nscript has helpful headings\ncontains text to describe stream of throught\ncode has helpful comments\nsessionInfo() at the end",
    "crumbs": [
      "D. Palleschi",
      "Data wrangling"
    ]
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning.html#wrangle-defined",
    "href": "slides/06-data_wrangling/cleaning.html#wrangle-defined",
    "title": "Data wrangling",
    "section": "‚Äòwrangle‚Äô defined",
    "text": "‚Äòwrangle‚Äô defined\n/Ààra≈ã…°l/\nnoun\na dispute or argument, typically one that is long and complicated. ‚Äúan insurance wrangle is holding up compensation payments‚Äù\nverb\n\nhave a long, complicated dispute or argument. ‚Äúthe bureaucrats continue wrangling over the fine print‚Äù\nNORTH AMERICAN round up, herd, or take charge of (livestock). ‚Äúthe horses were wrangled early‚Äù",
    "crumbs": [
      "D. Palleschi",
      "Data wrangling"
    ]
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning.html#why-tidy-data",
    "href": "slides/06-data_wrangling/cleaning.html#why-tidy-data",
    "title": "Data wrangling",
    "section": "Why tidy data?",
    "text": "Why tidy data?\n\nhelps future you\n\nand collaborators\n\nfacilitates sharing your data and code (Laurinavichyute et al., 2022)\nin short: facilitates reproducibility!",
    "crumbs": [
      "D. Palleschi",
      "Data wrangling"
    ]
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning.html#what-does-tidy-data-look-like",
    "href": "slides/06-data_wrangling/cleaning.html#what-does-tidy-data-look-like",
    "title": "Data wrangling",
    "section": "What does tidy data look like?",
    "text": "What does tidy data look like?\nThree rules (Wickham et al., 2023):\n\nEach variable is a column, each column is a variable\nEach observation is a row, each row is an observation\nEach value is a cell, each cell is a single value\n\n\n\n\n\n\nImage source: Wickham et al. (2023) (all rights reserved)\n\n\n\n\n\nN.B., how you define a variable or observation is relative to what you want to do\n\nfor now, let‚Äôs consider a single trial per participant as an observation",
    "crumbs": [
      "D. Palleschi",
      "Data wrangling"
    ]
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning.html#section",
    "href": "slides/06-data_wrangling/cleaning.html#section",
    "title": "Data wrangling",
    "section": "",
    "text": "package versions\n\n\n\n\nyou can check the package version with:\n\n\npackageVersion(\"tidyverse\")\n\n[1] '2.0.0'\n\n\n\nneed to update?\n\n\n# update a single package\ninstall.packages(\"tidyverse\")\n\n\nwhat about your other packages?\n\n\n# which packages need updating?\nold.packages()\n# update all old packages\nupdate.packages()",
    "crumbs": [
      "D. Palleschi",
      "Data wrangling"
    ]
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning.html#base-r-pipe",
    "href": "slides/06-data_wrangling/cleaning.html#base-r-pipe",
    "title": "Data wrangling",
    "section": "base R pipe |>",
    "text": "base R pipe |&gt;\n\n\n\ntakes the object before it and feeds it into the next command\n\nthe pipe could be read as ‚Äúand then‚Äù\nthere‚Äôs a useful shortcut: Ctrl/Cmd+Shift+M\nN.B., pre-2023 the only pipe was %&gt;% (magrittr package)\n\n\n\n# take data frame and then...\niris |&gt;\n  # print the head\n  head()\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\n\n\n\n\n\n\n\nImage source: magrittr documentation (all rights reserved)",
    "crumbs": [
      "D. Palleschi",
      "Data wrangling"
    ]
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning.html#load-our-data",
    "href": "slides/06-data_wrangling/cleaning.html#load-our-data",
    "title": "Data wrangling",
    "section": "load our data",
    "text": "load our data\n\n# load lifetime data\nreadr::read_csv(here::here(\"data/data_lifetime_pilot.csv\")) \n\n# A tibble: 4,431 √ó 28\n   RECORDING_SESSION_LABEL TRIAL_INDEX EYE_USED IA_DWELL_TIME\n   &lt;chr&gt;                         &lt;dbl&gt; &lt;chr&gt;            &lt;dbl&gt;\n 1 px3                               1 RIGHT                0\n 2 px3                               2 RIGHT                0\n 3 px3                               3 RIGHT                0\n 4 px3                               3 RIGHT                0\n 5 px3                               3 RIGHT                0\n 6 px3                               3 RIGHT                0\n 7 px3                               3 RIGHT                0\n 8 px3                               3 RIGHT                0\n 9 px3                               4 RIGHT                0\n10 px3                               5 RIGHT                0\n# ‚Ñπ 4,421 more rows\n# ‚Ñπ 24 more variables: IA_FIRST_FIXATION_DURATION &lt;dbl&gt;,\n#   IA_FIRST_RUN_DWELL_TIME &lt;dbl&gt;, IA_FIXATION_COUNT &lt;dbl&gt;, IA_ID &lt;dbl&gt;,\n#   IA_LABEL &lt;chr&gt;, IA_REGRESSION_IN &lt;dbl&gt;, IA_REGRESSION_IN_COUNT &lt;dbl&gt;,\n#   IA_REGRESSION_OUT &lt;dbl&gt;, IA_REGRESSION_OUT_COUNT &lt;dbl&gt;,\n#   IA_REGRESSION_PATH_DURATION &lt;dbl&gt;, KeyPress &lt;dbl&gt;, rt &lt;dbl&gt;, bio &lt;chr&gt;,\n#   critical &lt;chr&gt;, gender &lt;chr&gt;, item_id &lt;dbl&gt;, list &lt;dbl&gt;, match &lt;chr&gt;, ‚Ä¶\n\n\n\nwas anything added to the Environment pane (top right box in RStudio)?",
    "crumbs": [
      "D. Palleschi",
      "Data wrangling"
    ]
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning.html#variable-assignment-with--",
    "href": "slides/06-data_wrangling/cleaning.html#variable-assignment-with--",
    "title": "Data wrangling",
    "section": "variable assignment with <-",
    "text": "variable assignment with &lt;-\n\nobject_name &lt;- code_output_to_be_saved_as_object_name\n\n\n# load lifetime data and store it under df_lifetime\ndf_lifetime &lt;- readr::read_csv(here::here(\"data/data_lifetime_pilot.csv\"), \n                               # for special characters\n                               locale = readr::locale(encoding = \"latin1\") \n                               ) \n\n\nyou should now see the object df_lifetime in the Environment pane",
    "crumbs": [
      "D. Palleschi",
      "Data wrangling"
    ]
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning.html#section-1",
    "href": "slides/06-data_wrangling/cleaning.html#section-1",
    "title": "Data wrangling",
    "section": "",
    "text": "A note on annotation\n\n\n\n\nannotate as you go: provide useful comments to describe your code (# comment)\nyou always have at least one collaborator: future you!\n\ncomments\n\n\nFirst we load required libraries.\n\n# load libraries\nlibrary(tidyverse) # for e.g., wrangling and plotting\nlibrary(here) # for file-paths relative to project folder",
    "crumbs": [
      "D. Palleschi",
      "Data wrangling"
    ]
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning.html#rename",
    "href": "slides/06-data_wrangling/cleaning.html#rename",
    "title": "Data wrangling",
    "section": "rename()",
    "text": "rename()\n\none of the first things you‚Äôll often want to do is rename some variables\nlet‚Äôs start by re-naming some of our variables\n\ne.g., RECORDING_SESSION_LABEL is a long way of saying ‚Äòparticipant‚Äô\n\n\n\n# rename variables\ndf_lifetime &lt;- df_lifetime |&gt; # make df_lifetime from df_lifetime BUT THEN\n  rename(\"px\" = RECORDING_SESSION_LABEL, # rename a variable and (comma = 'and')\n         \"trial\" = TRIAL_INDEX) # another variable\n\n\nExercise\nChange the following names:\n\n\n\nEYE_USED to eye\nIA_DWELL_TIME to tt\nIA_FIRST_FIXATION_DURATION to ff\nIA_FIXATION_COUNT to fix_count\nIA_FIRST_RUN_DWELL_TIME to fp\nIA_ID to region_n\nIA_LABEL to region_text\n\n\n\nIA_REGRESSION_IN to reg_in\nIA_REGRESSION_IN_COUNT to reg_in_count\nIA_REGRESSION_OUT to reg_out\nIA_REGRESSION_OUT_COUNT to reg_out_count\nIA_REGRESSION_PATH_DURATION to rpd\nname_vital_status to lifetime\n\n\n# the names should then look like this:\nnames(df_lifetime)\n\n [1] \"px\"            \"trial\"         \"eye\"           \"tt\"           \n [5] \"ff\"            \"fp\"            \"fix_count\"     \"region_n\"     \n [9] \"region_text\"   \"reg_in\"        \"reg_in_count\"  \"reg_out\"      \n[13] \"reg_out_count\" \"rpd\"           \"KeyPress\"      \"rt\"           \n[17] \"bio\"           \"critical\"      \"gender\"        \"item_id\"      \n[21] \"list\"          \"match\"         \"condition\"     \"name\"         \n[25] \"lifetime\"      \"tense\"         \"type\"          \"yes_press\"",
    "crumbs": [
      "D. Palleschi",
      "Data wrangling"
    ]
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning.html#relocate",
    "href": "slides/06-data_wrangling/cleaning.html#relocate",
    "title": "Data wrangling",
    "section": "relocate",
    "text": "relocate\n\nthe second thing you might want to do is reorder your variables so the most important/relevant are near the beginning and ordered logically\n\nlet‚Äôs order our continuous reading time variables from ‚Äòearliest‚Äô to ‚Äòlatest‚Äô measure\n\n\n\ndf_lifetime &lt;- df_lifetime |&gt;\n  relocate(ff,fp,rpd,tt, .after=\"eye\") |&gt; \n  relocate(region_n, region_text, .after=\"trial\")\n\n\nnames(df_lifetime[1:10])\n\n [1] \"px\"          \"trial\"       \"region_n\"    \"region_text\" \"eye\"        \n [6] \"ff\"          \"fp\"          \"rpd\"         \"tt\"          \"fix_count\"",
    "crumbs": [
      "D. Palleschi",
      "Data wrangling"
    ]
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning.html#mutate",
    "href": "slides/06-data_wrangling/cleaning.html#mutate",
    "title": "Data wrangling",
    "section": "mutate()",
    "text": "mutate()\nMutate column(s):\n\n\n\nnew columns\n\n\ndf_lifetime &lt;- df_lifetime |&gt;\n  mutate(new_column = \"new\")\n\n\nwhat will new_column contain?\n\n\ndf_lifetime |&gt; \n  select(px, new_column, trial) |&gt; \n  head() \n\n# A tibble: 6 √ó 3\n  px    new_column trial\n  &lt;chr&gt; &lt;chr&gt;      &lt;dbl&gt;\n1 px3   new            1\n2 px3   new            2\n3 px3   new            3\n4 px3   new            3\n5 px3   new            3\n6 px3   new            3\n\n\n\n\nchange existing column\n\n\ndf_lifetime &lt;- df_lifetime |&gt;\n  mutate(new_column = px,\n         trial = trial + 5)\n\n\nwhat will new_column and trial contain?\n\n\ndf_lifetime |&gt; \n  select(px, new_column, trial) |&gt; \n  head() \n\n# A tibble: 6 √ó 3\n  px    new_column trial\n  &lt;chr&gt; &lt;chr&gt;      &lt;dbl&gt;\n1 px3   px3            6\n2 px3   px3            7\n3 px3   px3            8\n4 px3   px3            8\n5 px3   px3            8\n6 px3   px3            8\n\n\n\n\nbut let‚Äôs undo that‚Ä¶\n\n\ndf_lifetime &lt;- df_lifetime |&gt;\n  mutate(trial = trial - 5)\n\n\nwhat will trial contain?\n\n\ndf_lifetime |&gt; \n  select(px, new_column, trial) |&gt; \n  head() \n\n# A tibble: 6 √ó 3\n  px    new_column trial\n  &lt;chr&gt; &lt;chr&gt;      &lt;dbl&gt;\n1 px3   px3            1\n2 px3   px3            2\n3 px3   px3            3\n4 px3   px3            3\n5 px3   px3            3\n6 px3   px3            3\n\n\n\n\n\nif_else()\n\ncan be used e.g., inside mutate()\n\nchange values based on some logical condition\ncan be used to change an existing column, or create a new one\n\nifelse(condition, output_if_true, output_if_false)\n\n\ndf_lifetime &lt;- df_lifetime |&gt;\n  mutate(new_column = if_else(name==\"Aaliyah\",\"name is Aaliyah\",\"name is not Aaliyah\"))\n\n\n\n\n\n\n\n\n\n\nLogical operators\n\n\n\n\nsymbols used to describe a logical condition\n== is idential (1 == 1)\n!= is not identical (1 != 2)\n&gt; is greater than (2 &gt; 1)\n&lt; is less than (1 &lt; 2)\n& and also (for multiple conditions)\n| or (for multiple conditions)\n\n\n\n\n\ncase_when()\n\ncan be used e.g., inside mutate()\n\nchange values based on multiple logical conditions\nfor cases too complex for ifelse()\ncan be used to change an existing column, or create a new one\n\ncase_when(condition & other_condition | other_condition ~ output, TRUE ~ output_otherwise)\n\nif you don‚Äôt include TRUE ~ output then NAs will created\n\n\n\ndf_lifetime &lt;- df_lifetime |&gt;\n  mutate(newer_column = case_when(\n    name==\"Aaliyah\" & trial &gt; 104 ~ \"Aaliyah 2nd half\",\n    name==\"Beyonc√©\" & (px == \"px01\" | px == \"px04\") ~ \"Beyonc√© px04 or px06\",\n    TRUE ~ \"otherwise\"))\n\n\n\nExercise\n\n\n\nCreate a new variable accept that checks whether the button pressed (KeyPress) equals the button that corresponds to an acceptance (yes_press)\n\nif KeyPress and yes_press are the same, accept should be 1. If not, accept should be 0\nhint: you will need if_else() or case_when()\n\n\n\n\nCreate a new variable accuracy where:\n\nif match is yes and accept is 1, accuracy is 1\nif match is no and accept is 0, accuracy is 1\nif match is yes and accept is 0, accuracy is 0\nif match is no and accept is 1, accuracy is 0\n\n\n\n\nif correct, the means and summaries should look like this:\n\n\n\nmean(df_lifetime$accept)\n\n[1] 0.6068608\n\n\n\nsummary(as_factor(df_lifetime$accept))\n\n   0    1 \n1742 2689 \n\n\n\n\nmean(df_lifetime$accuracy)\n\n[1] 0.6267208\n\n\n\nsummary(as_factor(df_lifetime$accuracy))\n\n   0    1 \n1654 2777 \n\n\n\n\n\n\nExtra exercise\n\n\n\nCreate a new variable region, that has the following values based on region_n\n\n\nregion_n 1 is region verb-1\nregion_n 2 is region verb\nregion_n 3 is region verb+1\nregion_n 4 is region verb+2\nregion_n 5 is region verb+3\nregion_n 6 is region verb+4\n\n\nsummary(as_factor(df_lifetime$region))\n\nfiller verb-1   verb verb+1 verb+2 verb+3 verb+4 \n  1024    639    639    639    639    639    212 \n\n\n\n\nNow relocate our new variables so that:\n\n\nregion is before region_n\nKeyPress is after yes_press\n\n\nnames(df_lifetime)\n\n [1] \"px\"            \"trial\"         \"region\"        \"region_n\"     \n [5] \"region_text\"   \"eye\"           \"ff\"            \"fp\"           \n [9] \"rpd\"           \"tt\"            \"fix_count\"     \"reg_in\"       \n[13] \"reg_in_count\"  \"reg_out\"       \"reg_out_count\" \"rt\"           \n[17] \"bio\"           \"critical\"      \"gender\"        \"item_id\"      \n[21] \"list\"          \"match\"         \"condition\"     \"name\"         \n[25] \"lifetime\"      \"tense\"         \"type\"          \"yes_press\"    \n[29] \"KeyPress\"      \"new_column\"    \"newer_column\"  \"accept\"       \n[33] \"accuracy\"",
    "crumbs": [
      "D. Palleschi",
      "Data wrangling"
    ]
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning.html#group_by-and-ungroup",
    "href": "slides/06-data_wrangling/cleaning.html#group_by-and-ungroup",
    "title": "Data wrangling",
    "section": "group_by() and ungroup()",
    "text": "group_by() and ungroup()\nGroup data by certain variable(s)\n\nthen perform some mutation\nthen ungroup the data\n\n\ndf_lifetime &lt;- df_lifetime |&gt;\n  group_by(px) |&gt;\n  mutate(px_accuracy = mean(accuracy)) |&gt;\n  ungroup()\n\n\nround(\n  range(df_lifetime$px_accuracy),\n  2)\n\n[1] 0.26 0.90",
    "crumbs": [
      "D. Palleschi",
      "Data wrangling"
    ]
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning.html#by",
    "href": "slides/06-data_wrangling/cleaning.html#by",
    "title": "Data wrangling",
    "section": ".by",
    "text": ".by\n\nmutate() also takes .by = as an argument\n\ndoes the same thing as group_by()/ungroup()\nas of dplyr 1.1.0 version (more info)\n\n\n\ndf_lifetime &lt;- df_lifetime |&gt;\n  mutate(px_accuracy = mean(accuracy),\n         .by = px)\n\n\nround(\n  range(df_lifetime$px_accuracy),\n  2)\n\n[1] 0.26 0.90",
    "crumbs": [
      "D. Palleschi",
      "Data wrangling"
    ]
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning.html#separate",
    "href": "slides/06-data_wrangling/cleaning.html#separate",
    "title": "Data wrangling",
    "section": "separate()",
    "text": "separate()\n\ncreate new columns from a single column\n\n\ndf_lifetime &lt;- df_lifetime |&gt;\n  separate(name,\n           sep=\" \",\n           into = c(\"First\",\"Last\"),\n           remove = F, # don't remove original column (name)\n           extra = \"merge\") # if extra chunks, combine in 'Last' (von der...)\n\n\nopposite: unite()",
    "crumbs": [
      "D. Palleschi",
      "Data wrangling"
    ]
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning.html#select",
    "href": "slides/06-data_wrangling/cleaning.html#select",
    "title": "Data wrangling",
    "section": "select()",
    "text": "select()\n\n\n\nkeep only certain column(s)\noften used to preview changes\nif result is saved as an object (&lt;-) will remove all other columns\n\nso be careful when saving as an already existing object (e.g., df &lt;- df |&gt; select(...))\n\n\n\n\ndf_lifetime |&gt;\n  select(px) |&gt; head(10)\n\n# A tibble: 10 √ó 1\n   px   \n   &lt;chr&gt;\n 1 px3  \n 2 px3  \n 3 px3  \n 4 px3  \n 5 px3  \n 6 px3  \n 7 px3  \n 8 px3  \n 9 px3  \n10 px3  \n\n\n\n\ndf_lifetime |&gt;\n  select(px, trial) |&gt; head(10)\n\n# A tibble: 10 √ó 2\n   px    trial\n   &lt;chr&gt; &lt;dbl&gt;\n 1 px3       1\n 2 px3       2\n 3 px3       3\n 4 px3       3\n 5 px3       3\n 6 px3       3\n 7 px3       3\n 8 px3       3\n 9 px3       4\n10 px3       5",
    "crumbs": [
      "D. Palleschi",
      "Data wrangling"
    ]
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning.html#select-",
    "href": "slides/06-data_wrangling/cleaning.html#select-",
    "title": "Data wrangling",
    "section": "select(-)",
    "text": "select(-)\n\nor remove certain columns\n\n\ndf_lifetime |&gt;\n  select(-px, -trial) |&gt; head(10)\n\n# A tibble: 10 √ó 34\n   region region_n region_text    eye      ff    fp   rpd    tt fix_count reg_in\n   &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;          &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;\n 1 filler        1 He owned innu‚Ä¶ RIGHT     0     0     0     0         0      0\n 2 filler        1 She is a moth‚Ä¶ RIGHT     0     0     0     0         0      0\n 3 verb-1        1 She            RIGHT     0     0     0     0         0      0\n 4 verb          2 will perform   RIGHT     0     0     0     0         0      0\n 5 verb+1        3 in prestigiou‚Ä¶ RIGHT     0     0     0     0         0      0\n 6 verb+2        4 in the future, RIGHT     0     0     0     0         0      0\n 7 verb+3        5 as reported i‚Ä¶ RIGHT     0     0     0     0         0      0\n 8 verb+4        6 as reported i‚Ä¶ RIGHT     0     0     0     0         0      0\n 9 filler        1 He interviewe‚Ä¶ RIGHT     0     0     0     0         0      0\n10 verb-1        1 She            RIGHT     0     0     0     0         0      0\n# ‚Ñπ 24 more variables: reg_in_count &lt;dbl&gt;, reg_out &lt;dbl&gt;, reg_out_count &lt;dbl&gt;,\n#   rt &lt;dbl&gt;, bio &lt;chr&gt;, critical &lt;chr&gt;, gender &lt;chr&gt;, item_id &lt;dbl&gt;,\n#   list &lt;dbl&gt;, match &lt;chr&gt;, condition &lt;chr&gt;, name &lt;chr&gt;, First &lt;chr&gt;,\n#   Last &lt;chr&gt;, lifetime &lt;chr&gt;, tense &lt;chr&gt;, type &lt;chr&gt;, yes_press &lt;dbl&gt;,\n#   KeyPress &lt;dbl&gt;, new_column &lt;chr&gt;, newer_column &lt;chr&gt;, accept &lt;dbl&gt;,\n#   accuracy &lt;dbl&gt;, px_accuracy &lt;dbl&gt;",
    "crumbs": [
      "D. Palleschi",
      "Data wrangling"
    ]
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning.html#section-3",
    "href": "slides/06-data_wrangling/cleaning.html#section-3",
    "title": "Data wrangling",
    "section": "",
    "text": "Select criteria\n\n\n\nYou can also use criteria for select:\n\nselect(starts_with(\"x\")) select columns that start with a character string\nselect(ends_with(\"x\")) select columns that end with a character string\nselect(contains(\"x\")) select columns that contain a character string\nselect(num_range(\"prefix\",10:20)) select columns with a prefix followed by a range of values\n\n\n\n\nExercise\nRemove the example variables we created with mutate:\n\nnew_column, newer_column, First, Last\n\n\n# should look like this after\nnames(df_lifetime)\n\n [1] \"px\"            \"trial\"         \"region\"        \"region_n\"     \n [5] \"region_text\"   \"eye\"           \"ff\"            \"fp\"           \n [9] \"rpd\"           \"tt\"            \"fix_count\"     \"reg_in\"       \n[13] \"reg_in_count\"  \"reg_out\"       \"reg_out_count\" \"rt\"           \n[17] \"bio\"           \"critical\"      \"gender\"        \"item_id\"      \n[21] \"list\"          \"match\"         \"condition\"     \"name\"         \n[25] \"lifetime\"      \"tense\"         \"type\"          \"yes_press\"    \n[29] \"KeyPress\"      \"accept\"        \"accuracy\"      \"px_accuracy\"",
    "crumbs": [
      "D. Palleschi",
      "Data wrangling"
    ]
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning.html#filter",
    "href": "slides/06-data_wrangling/cleaning.html#filter",
    "title": "Data wrangling",
    "section": "filter()",
    "text": "filter()\n\nselect certain rows based on certain criteria\n\nrequires logical operators (==, !=, &gt;, &lt;, |)\nN.B. when testing logical conditions == is needed\n\n\n\ndf_lifetime |&gt;\n  filter(trial == 1)\n\n# A tibble: 8 √ó 32\n  px    trial region region_n region_text          eye      ff    fp   rpd    tt\n  &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;                &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 px3       1 filler        1 He owned innumerabl‚Ä¶ RIGHT     0     0     0     0\n2 px5       1 filler        1 She is a mother of ‚Ä¶ RIGHT   145  1603  1603  1603\n3 px6       1 filler        1 He is a father of t‚Ä¶ RIGHT   147  1224  1224  1224\n4 px2       1 filler        1 She made innumerabl‚Ä¶ RIGHT    84  1829  1829  1829\n5 px7       1 filler        1 In the '70s, he own‚Ä¶ RIGHT   138  2456  2456  2456\n6 px1       1 filler        1 Beloved morning sho‚Ä¶ RIGHT   160  1708  1708  1708\n7 px8       1 filler        1 She was a mother of‚Ä¶ RIGHT   220   806   806   806\n8 px4       1 filler        1 In the '70s, he own‚Ä¶ LEFT    171  3557  3557  3557\n# ‚Ñπ 22 more variables: fix_count &lt;dbl&gt;, reg_in &lt;dbl&gt;, reg_in_count &lt;dbl&gt;,\n#   reg_out &lt;dbl&gt;, reg_out_count &lt;dbl&gt;, rt &lt;dbl&gt;, bio &lt;chr&gt;, critical &lt;chr&gt;,\n#   gender &lt;chr&gt;, item_id &lt;dbl&gt;, list &lt;dbl&gt;, match &lt;chr&gt;, condition &lt;chr&gt;,\n#   name &lt;chr&gt;, lifetime &lt;chr&gt;, tense &lt;chr&gt;, type &lt;chr&gt;, yes_press &lt;dbl&gt;,\n#   KeyPress &lt;dbl&gt;, accept &lt;dbl&gt;, accuracy &lt;dbl&gt;, px_accuracy &lt;dbl&gt;",
    "crumbs": [
      "D. Palleschi",
      "Data wrangling"
    ]
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning.html#filter-1",
    "href": "slides/06-data_wrangling/cleaning.html#filter-1",
    "title": "Data wrangling",
    "section": "filter()",
    "text": "filter()\nWhat are these code chunks doing?\n\n\n\ndf_lifetime |&gt;\n  filter(px_accuracy &gt; .5)\n\n\n\ndf_lifetime |&gt;\n  filter(px == \"px3\")\n\n\n\n\n\n\ndf_lifetime |&gt;\n  filter(px == \"px3\" | trial == \"3\")\n\n\n\ndf_lifetime |&gt;\n  filter(px == \"px3\" & trial != \"3\")\n\n\n\n\nExercise\n\n\n\nCreate a new dataframe df_crit that includes only critical trials\nCreate a new dataframe df_fill that includes only filler trials\n\n\nTip: trial type is stored in the column type\n\n\n\ndf_crit |&gt; select(type) |&gt; head()\n\n# A tibble: 6 √ó 1\n  type    \n  &lt;chr&gt;   \n1 critical\n2 critical\n3 critical\n4 critical\n5 critical\n6 critical\n\n\n\n\ndf_fill |&gt; select(type) |&gt; head()\n\n# A tibble: 6 √ó 1\n  type  \n  &lt;chr&gt; \n1 filler\n2 filler\n3 filler\n4 filler\n5 filler\n6 filler",
    "crumbs": [
      "D. Palleschi",
      "Data wrangling"
    ]
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning.html#distinct",
    "href": "slides/06-data_wrangling/cleaning.html#distinct",
    "title": "Data wrangling",
    "section": "distinct()",
    "text": "distinct()\n\n\n\nlike filter(), but for distinct values of a variable\n\n‚Äúselect rows with distinct values for some row(s)‚Äù\n\n\n\n\ndf_crit |&gt;\n  distinct(px)\n\n# A tibble: 8 √ó 1\n  px   \n  &lt;chr&gt;\n1 px3  \n2 px5  \n3 px6  \n4 px2  \n5 px7  \n6 px1  \n7 px8  \n8 px4  \n\n\n\n\ndf_crit |&gt;\n  distinct(px, name)\n\n# A tibble: 639 √ó 2\n   px    name          \n   &lt;chr&gt; &lt;chr&gt;         \n 1 px3   Edith Piaf    \n 2 px3   Aaliyah       \n 3 px3   David Beckham \n 4 px3   Jana Novotna  \n 5 px3   Grace Kelly   \n 6 px3   Nigella Lawson\n 7 px3   Coco Chanel   \n 8 px3   Ben Kingsley  \n 9 px3   Jim Carrey    \n10 px3   Judy Garland  \n# ‚Ñπ 629 more rows\n\n\n\n\ndf_crit |&gt;\n  distinct(px, name,\n           .keep_all=T)\n\n# A tibble: 639 √ó 32\n   px    trial region region_n region_text eye      ff    fp   rpd    tt\n   &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 px3       3 verb-1        1 She         RIGHT     0     0     0     0\n 2 px3       5 verb-1        1 She         RIGHT     0     0     0     0\n 3 px3       8 verb-1        1 He          RIGHT     0     0     0     0\n 4 px3      10 verb-1        1 She         RIGHT     0     0     0     0\n 5 px3      13 verb-1        1 She         RIGHT     0     0     0     0\n 6 px3      16 verb-1        1 She         RIGHT     0     0     0     0\n 7 px3      18 verb-1        1 She         RIGHT     0     0     0     0\n 8 px3      21 verb-1        1 He          RIGHT     0     0     0     0\n 9 px3      23 verb-1        1 He          RIGHT     0     0     0     0\n10 px3      26 verb-1        1 She         RIGHT     0     0     0     0\n# ‚Ñπ 629 more rows\n# ‚Ñπ 22 more variables: fix_count &lt;dbl&gt;, reg_in &lt;dbl&gt;, reg_in_count &lt;dbl&gt;,\n#   reg_out &lt;dbl&gt;, reg_out_count &lt;dbl&gt;, rt &lt;dbl&gt;, bio &lt;chr&gt;, critical &lt;chr&gt;,\n#   gender &lt;chr&gt;, item_id &lt;dbl&gt;, list &lt;dbl&gt;, match &lt;chr&gt;, condition &lt;chr&gt;,\n#   name &lt;chr&gt;, lifetime &lt;chr&gt;, tense &lt;chr&gt;, type &lt;chr&gt;, yes_press &lt;dbl&gt;,\n#   KeyPress &lt;dbl&gt;, accept &lt;dbl&gt;, accuracy &lt;dbl&gt;, px_accuracy &lt;dbl&gt;",
    "crumbs": [
      "D. Palleschi",
      "Data wrangling"
    ]
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning.html#arrange",
    "href": "slides/06-data_wrangling/cleaning.html#arrange",
    "title": "Data wrangling",
    "section": "arrange()",
    "text": "arrange()\n\n\n\nsort column(s) in ascending or descending order\n\nthis is really just for ease of reading\n\n\n\n\n# default: ascending order (A-Z)\ndf_crit |&gt;\n  distinct(px, trial, name, condition) |&gt;\n  arrange(px, trial)\n\n# A tibble: 639 √ó 4\n   px    trial name            condition\n   &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;    \n 1 px1       3 Amy Winehouse   deadPP   \n 2 px1       5 John Wayne      deadPP   \n 3 px1       8 Abraham Lincoln deadPP   \n 4 px1      10 Helen Mirren    livingSF \n 5 px1      13 Paul McCartney  livingSF \n 6 px1      16 Ariana Grande   livingPP \n 7 px1      18 Kate Middleton  livingSF \n 8 px1      21 Johan Cruyff    deadSF   \n 9 px1      23 Marilyn Monroe  deadPP   \n10 px1      26 Biggie Smalls   deadSF   \n# ‚Ñπ 629 more rows\n\n\n\n\n# descending order (Z-A)\ndf_crit |&gt;\n  distinct(px, trial, name, condition) |&gt;\n  arrange(desc(px), trial)\n\n# A tibble: 639 √ó 4\n   px    trial name            condition\n   &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;    \n 1 px8       3 Whitney Houston deadPP   \n 2 px8       5 Elton John      livingSF \n 3 px8       8 Jackie Chan     livingPP \n 4 px8      10 Romy Schneider  deadPP   \n 5 px8      13 James Cameron   livingSF \n 6 px8      16 Ella Fitzgerald deadSF   \n 7 px8      18 Kathryn Hepburn deadPP   \n 8 px8      21 Kate Middleton  livingPP \n 9 px8      23 Janis Joplin    deadPP   \n10 px8      26 Serena Williams livingSF \n# ‚Ñπ 629 more rows",
    "crumbs": [
      "D. Palleschi",
      "Data wrangling"
    ]
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning.html#important-terms",
    "href": "slides/06-data_wrangling/cleaning.html#important-terms",
    "title": "Data wrangling",
    "section": "Important terms",
    "text": "Important terms\n\n\n\n\n\n\n\nwrangle\nhave a long dispute\n\n\ndata wrangling\ntidying and transforming your data\n\n\ntidy data\ndata where each column is a variable and each row is an observation\n\n\nthe tidyverse\na group of packages for tidy data\n\n\ndplyr\na package within the tidyverse for data wrangling\n\n\npipe operator (|&gt; or |&gt;)\noperational function, passes the result of one function/argument to the next\n\n\nlogical operators\ncompare values of two arguments: &, |, ==, !=, &gt;, &lt;",
    "crumbs": [
      "D. Palleschi",
      "Data wrangling"
    ]
  },
  {
    "objectID": "slides/06-data_wrangling/cleaning.html#important-functions",
    "href": "slides/06-data_wrangling/cleaning.html#important-functions",
    "title": "Data wrangling",
    "section": "Important functions",
    "text": "Important functions\n\n\n\n\n\n\n\nread_csv()\nread-in a csv as a tibble (from readr package)\n\n\nrename()\nrename variables\n\n\nrelocate()\nmove variables\n\n\nmutate()\nchange or create new variables\n\n\nif_else()\ncondition for `mutate()`\n\n\ncase_when()\nhandle multiple conditions for `mutate()`\n\n\ngroup_by()\ngroup by a certain variable\n\n\nselect()\nkeep (or exclude) certain variables\n\n\nfilter()\nkeep (or exclude) rows based on some criteria\n\n\ndistinct()\nkeep rows with distinct value of given variable(s)\n\n\narrange()\nsort variable(s) in ascending or descending order\n\n\nseparate()\nsplit a variable into multiple variables\n\n\npivot_longer()\nmake wide data longer\n\n\npivot_wider()\nmake long data wider",
    "crumbs": [
      "D. Palleschi",
      "Data wrangling"
    ]
  }
]